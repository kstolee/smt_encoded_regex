"pattern"
"'^\\s+'"
"'wordpress\\.com'"
"'blogspot\\.com'"
"'typepad\\.com'"
"'blogs\\.com'"
"'WordPress'"
"'technorati.com'"
"'me'"
"'uid'"
"'url'"
"'fn'"
"'vcard'"
"'mailto:'"
"'^(?P<_1>[^|]*)\\|(?P<_2>[^|]*)(\\|(?P<_3>[^|]*))?$'"
"'\\* +(.+) +translation'"
"'^results'"
"'^candidate'"
"'^[A-Z] '"
"'<project>.*<groupId>org\\.osaf\\.cosmo</groupId>.*<version>(.*)</version>.*<name>.*</project>'"
"'([^!]+)(?:!([^+-]+)?([+-]\\S+)?)?'"
"arg1"
"'^\\w+$'"
"'^[a-f0-9]{40}$'"
"'>[ \r\n]+<'"
"'\r|\n'"
"'[""\\*\\/:<>\\?\\\\|]'"
"'\\$\\((\\w+?)\\)'"
"'^\\s*(\\w+)\\s*=(.*)$'"
"'^\\s*include\\s+(\\w+)'"
"'\\\\\\s*$'"
"'^\\s*if\\s+(\\w+)'"
"'^\\s*else'"
"'^\\s*endif'"
"u'^(?P<year>[0-9][0-9][0-9][0-9])\n                -(?P<month>[0-9][0-9]?)\n                -(?P<day>[0-9][0-9]?)\n                (?:(?:[Tt]|[ \\t]+)\n                (?P<hour>[0-9][0-9]?)\n                :(?P<minute>[0-9][0-9])\n                :(?P<second>[0-9][0-9])\n                (?:\\.(?P<fraction>[0-9]*))?\n                (?:[ \\t]*(?P<tz>Z|(?P<tz_sign>[-+])(?P<tz_hour>[0-9][0-9]?)\n                (?::(?P<tz_minute>[0-9][0-9]))?))?)?$'"
"u'[^\t\n\r -~\x85\xa0-\ud7ff\ue000-\ufffd]'"
"u'^(?:yes|Yes|YES|no|No|NO\n                    |true|True|TRUE|false|False|FALSE\n                    |on|On|ON|off|Off|OFF)$'"
"u'^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?\n                    |\\.[0-9_]+(?:[eE][-+][0-9]+)?\n                    |[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*\n                    |[-+]?\\.(?:inf|Inf|INF)\n                    |\\.(?:nan|NaN|NAN))$'"
"u'^(?:[-+]?0b[0-1_]+\n                    |[-+]?0[0-7_]+\n                    |[-+]?(?:0|[1-9][0-9_]*)\n                    |[-+]?0x[0-9a-fA-F_]+\n                    |[-+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)$'"
"u'^(?:<<)$'"
"u'^(?: ~\n                    |null|Null|NULL\n                    | )$'"
"u'^(?:[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]\n                    |[0-9][0-9][0-9][0-9] -[0-9][0-9]? -[0-9][0-9]?\n                     (?:[Tt]|[ \\t]+)[0-9][0-9]?\n                     :[0-9][0-9] :[0-9][0-9] (?:\\.[0-9]*)?\n                     (?:[ \\t]*(?:Z|[-+][0-9][0-9]?(?::[0-9][0-9])?))?)$'"
"u'^(?:=)$'"
"u'^(?:!|&|\\*)$'"
"'^/[-\\w/]+$'"
"'&[a-zA-Z0-9#]+;'"
"'[^\\w\\s-]'"
"'\\s+'"
"'^\\s'"
"'(?P<name>\\S*) \\((?P<relation><<|<=|=|>=|>>) (?P<version>\\S*)\\)'"
"'\n            ((?P<epoch>\\d+):)?\n            (\n                    ( (?P<upstream1>[-0-9.+:]+) - (?P<debian1>[a-zA-Z0-9+.]+) )\n                |   ( (?P<upstream2>[0-9.+:]+) ( - (?P<debian2>[a-zA-Z0-9+.]+) )? )\n            )\n            '"
"'(\\D*)(\\d*)'"
"'\\d*ubuntu\\d*'"
"'ubuntu'"
"'(.+):(\\d+)'"
"'((\t|(        ))\\*.*?\n\n)'"
"'(\\[.*?\\]|\n( ){8,100}{{{(.*?)}}}|\n\t\\s*{{{(.*?)}}}|\n{{{(.*?)}}}|{{.*?}}|([A-Z][a-z]+([A-Z][a-z]+)+))'"
"'([A-Z][a-z]+)'"
"'(www\\.(?!\\.)|[a-z][a-z0-9+.-]*://)[^\\s<>\'\\""]+[^!,\\.\\s<>\\)\'\\""\\]]'"
"""((?<=\\()[A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|([A-Za-z][A-Za-z0-9\\+\\.\\-]*:([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)|\\bmailto:\\S*[^\\s\\W]|\\b\\S+@\\S+\\.\\S*[^\\s\\W]|((?<=\\()(www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+(?=\\)))|((www|ftp)\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+\\.([A-Za-z0-9\\.\\-_~:/\\?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=]|%[A-Fa-f0-9]{2})+)"""
"'\\S+@\\S+\\.\\S*[^\\s)?]'"
"u'[\x00-\x08]|[\x0b-\x0c]|[\x0e-\x19]|[\ud800-\udfff]|[\ufffe-\uffff]'"
"'^\\s*$'"
"'(?<!\\w|\\<|/|:)/[^\\s/]([^/]*[^\\s/])?/(?!\\w|/|:)|(?<!\\w)_[^\\s_]([^_]*[^\\s_])?_(?!\\w)'"
"''"
"'[\\s\\{\\}\\[\\]\\(\\)]'"
"'\x01?\x1b\\[(.*?)m\x02?'"
"'(?<!\\\\)\\\\n'"
"'^file:///[a-zA-Z]:/'"
"'file://[^/]*'"
"'\n        ^(\\d{4}) # Year          ($1)\n        -(\\d{2}) # Month         ($2)\n        -(\\d{2}) # Day           ($3)\n        T(\\d{2}) # Hour          ($4)\n        :(\\d{2}) # Minute        ($5)\n        :(\\d{2}) # Second        ($6)\n        [+-]   # TODO: TZ offset dir ($7)\n        \\d{2}  # TODO: Offset hour   ($8)\n        :\\d{2} # TODO: Offset min    ($9)\n    '"
"'^(https?)://([a-z\\.0-9]+)(?:\\:(\\d+))?$'"
"'\\n\\s*//'"
"'\\s+\\w+\\s*=\\s*models\\.'"
"'\\s+class '"
"'\\s+def '"
"'\\d+$'"
"'[^0-9]'"
"'<\\s*br\\s*/?\\s*>'"
"'^Releases'"
"'^Tracks'"
"'^Artists'"
"'^\n'"
"'/release/'"
"'(.*) - (.*) \\((.*) - (.*)\\).*$'"
"'\\d+'"
"'^/[-\\w/]*$'"
"'(?<=^<span\\sclass="".."">@@\\s-)\\d+,\\d+|\\d+,\\d+(?=\\s@@</span>$)'"
"'(?<=^<span class="".."">)-\\+|(?<=^<span class="".."">)-|(?<=^<span class="".."">)\\+'"
"'\\B([A-Z])'"
"'id\\(([^\\)]+)\\)'"
"'hex\\(([^\\)]+)\\)'"
"'(\\$[^ ]+)\\b'"
"'(\\d{8}-\\d{6})'"
"'^(?P<preamble>(?P<pathname>[/A-Za-z0-9_.+]*):(?P<line_num>\\d+):\\s*(?P<errwarn>(error|warning)):)(?P<error_msg>.*(\\n  .*)*)'"
"'dmd '"
"'^(?P<preamble>(?P<pathname>[/A-Za-z0-9_.+]*):(?P<line_num>\\d+):\\s*)(?P<error_msg>.*(\\n  .*)*)'"
"'[\x80-\xff /&]'"
"'.*\\((\\.\\/.*\\.tex)'"
"'LaTeX Warning.*?input line (\\d+).$'"
"'^([\\.\\/\\w\x7f-\xff]+\\.tex):(\\d+):.*'"
"'.*\\<use (.*?)\\>'"
"'LaTeX Warning:.*'"
"'^This is'"
"'^Document Class'"
"'^Output written'"
"'Running makeindex'"
"'(! Emergency stop|Error:)'"
"'Transcript written on (.*).$'"
"'Running bibtex'"
"'---'"
"""Warning--I didn't find a database entry"""
"'Run number'"
"'^(HEADER|COMPND|REMARK|SEQRES|CRYST1|SCALE|ORIG|TITLE|FORMUL|HELIX|SHEET|DBREF|SEQADV|SOURCE|KEYWDS|EXPDTA|AUTHOR|REVDAT|JRNL)'"
"'(ATOM|HETATM)'"
"'TER'"
"'END'"
"'(CONECT|MASTER)'"
"'(MODEL|ENDMDL)'"
"'ENDMDL'"
"'[a-z]+'"
"'(?=[\\""])'"
"'^(?:\\s*)module(?:\\s+)namespace(?:\\s+)(\\w+)'"
"'(?P<year>\\d\\d\\d\\d)(?:-(?P<month>\\d\\d)(?:-(?P<day>\\d\\d)(?:T(?P<hour>\\d\\d)(?::(?P<minute>\\d\\d)(?::(?P<second>\\d\\d))?)?)?)?)?Z'"
"'[\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x0b\\x0c\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f]'"
"'<FRAME\\s+SRC=""(.*?)""\\s+NAME=""TEXT""'"
"'Not Found'"
"'<FRAME\\s+SRC=""(.*?)""\\s+NAME=""CONTENT""'"
"'=(.*?)SlAsHcOdEsTrInG(.*)'"
"'uk.org.publicwhip/person/'"
"'no EDMs'"
"'ound (\\d+) EDMs? signed'"
"'<!-- \\*\\*\\* Reference number \\*\\*\\* -->.*?<font face=""arial,helvetica"" size=2>(<[BI]>)?(.*?)</FONT>.*?<!-- \\*\\*\\* Motion title \\*\\*\\* -->.*?<A HREF=""(.*?)"" TARGET=""_parent"">\\s*<font face=""arial,helvetica"" size=2>(?:<[BI]>)?([^<]*?)</font></A>\\s*</TD>\\s*<!-- \\*\\*\\* Signatures -->.*?(?:<font face=""arial,helvetica"" size=2>(?:<[BI]>)?(\\d+) &nbsp;&nbsp;</font>\\s*)?</TD>\\s*<!-- \\*\\*\\* Motion date \\*\\*\\* -->.*?<font face=""arial,helvetica"" size=2>(?:<[BI]>)?(\\d\\d)\\.(\\d\\d)\\.(\\d\\d)</FONT>(?s)'"
"'<TD>(?:<font face=""arial,helvetica"" size=2>|<FONT SIZE=""-1""><font face=""arial,helvetica"" size=2><B>)\\s*(.*?)(?:</font>|</B></font></FONT>)</TD>'"
"'<FONT SIZE=""-1""><font face=""arial,helvetica"" size=2><B>The status of this EDM is (CLOSED|SUSPENDED).&nbsp;&nbsp;Reason: (.*?).</B></font>'"
"'(?:<FONT SIZE=""-1"">|<font face=""arial,helvetica"" size=2><(?:B|I)>)([^<]*?)/([^<]*?)(?:</(?:B|I)></font>|</FONT>)'"
"'Not Found(?i)'"
"'<FRAME SRC=""(.*?)"" NAME=""CONTENT""'"
"'<FONT SIZE=-1>(\\d+) EDMs and Amendments'"
"'<!-- Ref -->\\s*<TD WIDTH=14>[^C]*?(Closed)?[^C]*?</TD>\\s*<TD ALIGN=""CENTER"" VALIGN=""TOP"">\\s*<font face=""arial,helvetica"" size=2><FONT SIZE=""-1"">\\s*<B>(.*?)</B>\\s*</FONT>\\s*</TD>\\s*<!-- Motion Title -->\\s*<TD ALIGN=""LEFT"" VALIGN=""TOP"">\\s*<font face=""arial,helvetica"" size=2><FONT COLOR=""#0000DD"">\\s*<A HREF=""(/weblink/html/motion.html/ref=.*?)"" TARGET=""_top"">\\s*(.*?)</A>\\s*</FONT>\\s*</TD>\\s*<!-- Sponsor -->\\s*<TD ALIGN=""LEFT"" VALIGN=""TOP"">\\s*<A HREF=""/weblink/html/member.html/mem=.*?"" TARGET=""_top"" >\\s*<font face=""arial,helvetica"" size=2>.*?/.*?</A>\\s*</TD>\\s*<!-- Count of signatures -->\\s*<TD ALIGN=""RIGHT"" VALIGN=""TOP"">\\s*<font face=""arial,helvetica"" size=2><FONT SIZE=""-1"">(\\d+)</FONT>&nbsp;&nbsp;&nbsp;\\s*</TD>'"
"'<TD COLSPAN=""2""><font face=""arial,helvetica"" size=2>\\s*(.*?)</TD>'"
"'http://(?:www.)?theyworkforyou.com/[^\\s[\\]]+'"
"'^lib[^-]+-'"
"'<.*?>'"
"'\\(\\d\\)'"
"'""'"
"'\n'"
"'http:\\/\\/'"
"'downforeveryoneorjustme'"
"'\\.\\w{2,20}'"
"'\\r\\n'"
"'[a-zA-Z][-_.:a-zA-Z0-9]*'"
"'&(#\\d+|#x[0-9a-fA-F]+|\\w+);'"
"'(<[^<>]*)/>'"
"'<!\\s+([^<>]*)>'"
"'((^|;)\\s*charset=)([^;]*)'"
"'([\x80-\x9f])'"
"'^<\\?.*encoding=[\'""](.*?)[\'""].*\\?>'"
"'Funcname|Classless_Function'"
"'\\D'"
"'^\\s*[-_a-z0-9.]+@[-_a-z0-9.]+\\.\\w+\\s*$'"
"'[0-9]{4}/[10]?[0-9]/[0-3]?[0-9]'"
"'^\\s*(?:[87][- ]?[- \\(]?[0-9]{3}[- \\)]?[- ]?)?[0-9]{3}[- ]?[0-9]{2}[- ]?[0-9]{2}\\s*$'"
"'(^|\\s+|[^\\\\])@([a-zA-Z_][a-zA-Z0-9_]*)'"
"'(^|\\s+|[^\\\\])@'"
"'\\\\@'"
"'[_a-zA-Z][_a-zA-Z\\d]*$'"
"'^[a-zA-Z][a-zA-Z0-9_]*$'"
"'\\.|\\\\|\\/|\\||\\:|\\?|\\*'"
"'/\\.(?![^.]*$)/'"
"'/\\\\|\\/|\\||\\:|\\?|\\*/'"
"'# -\\*- (?P<codec>.*) -\\*-'"
"'(.+)__init__\\.py'"
"'About\\((.*)\\).should'"
"'About\\((.*)\\).should_be_same\\((.*)\\)'"
"'About\\((.*)\\).should_not_be_same\\((.*)\\)'"
"'About\\((.*)\\).should_include\\((.*)\\)'"
"'About\\((.*)\\).should_not_include\\((.*)\\)'"
"'About\\((.*)\\).should_be_in\\((.*)\\)'"
"'About\\((.*)\\).should_not_be_in\\((.*)\\)'"
"'dprint\\((.*)\\)'"
"'\\{\\{|\\}\\}'"
"'\\s+in\\s+'"
"'^[a-z_][a-z0-9_]*$'"
"'^(?:if |elif |else |for |py:)'"
"'\\n[\\t ]*$'"
"'^[\\t ]*\\n'"
"'\\S+| +|\\n'"
"'[\n\r\t\x0b\x0c]'"
"'-(?=-)'"
"'([0-9.]+)(\\S*)$'"
"'^[0-9.]+$'"
"'([0-9]+).flv'"
"': *'"
"'[\\s]+'"
"':[\\s]+'"
"'^([^:]+):\\s+(.+)\\s*$'"
"'.+\\s+""([^\\s]+)\\s+([^\\s]+)\\s+HTTP/\\d+\\.\\d+""\\s+200\\s+.*'"
"'^\\s*T_VIRTUAL_CALL: (\\d+) calls on (.*):$'"
"'^\\s*T_GENERIC_PROTOCOL: (\\d+) calls to (.*) with a (.*):$'"
"'^\\s*#(\\d+)\\s*(.*) \\[(0x[0-9A-Za-z]+)\\]$'"
"""[$^#\\\\']"""
"'([}{])'"
"'^[ \\t]*'"
"'^\\t*'"
"'.\\b.'"
"'^.+\\b(.+)$'"
"'(?<!\\\\);'"
"'(?<!\\\\),'"
"'^(\\d+)(?:([yzafpnumcdhkKMGTPEZY])(i)?)?([Bb])?$'"
"'^-{1,2}'"
"'^[a-zA-Z_][a-zA-Z_0-9]*$'"
"'else[ \\f\\t]+if'"
"'#+$'"
"'([\\$\\^\\*\\+\\.\\?\\{\\}\\[\\]\\(\\)\\|\\\\])'"
"'\\\\([1-9][0-9]*)'"
"'\\\\g<([a-zA-Z_][a-zA-Z_]*)>'"
"'^((-){80}|)$'"
"'^[ \t]*$'"
"'^(\\d:)?(\\S+)-(\\S+)$'"
"'\\d{5}'"
"'\\d{5}-\\d{4}'"
"'[a-zA-Z]{2}\\-\\d{2}'"
"'^[a-z0-9_]+$'"
"'.*elf'"
"'AppleWebKit\\/(\\d+)'"
"'(?u)\\.|\\\\|\\/|\\||\\:|\\?|\\*|""|<|>|[^\\u0000-\\u001f\\u007f-\\u009f]'"
"'(?u)/\\\\|\\/|\\||\\:|\\?|\\*|""|<|>|[^\\u0000-\\u001f\\u007f-\\u009f]/'"
"'([<>]|&(?![^\\s]+;))'"
"'(?P<class>OpenLayers\\..*?)\\('"
"'@requires:? (.*)\n'"
"'[\\s]*/\\*.*?\\*/[\\s]*'"
"'@requires (.*)\n'"
"'[\t ]+\n'"
"'[ ]+\t'"
"'([ ]+)\t'"
"u'\n    \x00 | # NULL\n\n    # Bidi control characters\n    \u202a | # LRE\n    \u202b | # RLE\n    \u202c | # PDF\n    \u202d | # LRM\n    \u202e   # RLM\n    '"
"'([+-]?[\\d\\.]+)(\\S+)'"
"'<[^>]+>'"
"'\\(\\s*;'"
"'[\\[\\]\\(\\);]'"
"'\\s*;\\s*'"
"'(java|vb)script:.*'"
"'\n( )+'"
"'^/([^/]+)(?:/(.*))?'"
"'^\\{.+\\}'"
"'/posts/([\\d]{4})/([\\d]{2})/([\\d]{2})'"
"'\n\\A\n\n<tr\\ bgcolor=""[^"">]+"">\n\n<td><a\\ href=""[^>""]+\\.php"">([^<>]+)</a></td>\n\n<td><a\\ href=""[^"">]+"">[^<>]+</a></td>\n\n<td>\n(?:\n    <a\\ href=""[^"">]+\\.php"">\n    ( [^<>]+ )\n    </a>\n|   ( [^<>]+ )\n)\n</td>\n\n</tr>\n\n\\Z\n'"
"'\n    [\\d.]+\\tplayer\\tRename\\t(?P<name>[\\S]+)\\t(?P<id>[\\d]+)\\s+        # name and id\n    [\\d.]+\\tplayer\\tTeamchange\\t(?P=id)\\t(?P<team>0|1)\\s+            # team\n    [\\d.]+\\tplayer\\tConnect\\t(?P=name)\\t(?P=id)\\tFalse\\s+            # spectator status\n    [\\d.]+\\tplayer\\tTeamName\\t(?P=id)\\t(Red|Blue|Green|Gold)\\s+      # team color\n    [\\d.]+\\tplayer\\tTeam\\t(?P=id)\\t(?P=team)\\s+                      #\n    [\\d.]+\\tplayer\\tTeamID\\t(?P=id)\\t(?P<teamid>[\\d]+)\\s+            # id on team\n    [\\d.]+\\tplayer\\tPing\\t(?P=id)\\t0\\s+                              # ping initially 0\n    [\\d.]+\\tplayer\\tIsABot\\t(?P=id)\\tFalse\\s+                        # exclude bots\n    [\\d.]+\\tplayer\\tSkill\\t(?P=id)\\t(?P<skill>[\\d.]+)\\s+             # skill\n    [\\d.]+\\tplayer\\tIP\\t(?P=id)\\t(?P<ip>160\\.129\\.[\\d]+\\.[\\d]+)      # ip\n    '"
"'([0-9a-f][0-9a-f]-){5}[0-9a-f][0-9a-f]'"
"'(\\s|&nbsp;)(&|&amp;|&\\#38;)(\\s|&nbsp;)'"
"""(\n                            (\\b[A-Z\\d]*        # Group 2: Any amount of caps and digits\n                            [A-Z]\\d*[A-Z]      # A cap string much at least include two caps (but they can have digits between them)\n                            [A-Z\\d]*\\b)        # Any amount of caps and digits\n                            | (\\b[A-Z]+\\.\\s?   # OR: Group 3: Some caps, followed by a '.' and an optional space\n                            (?:[A-Z]+\\.\\s?)+)  # Followed by the same thing at least once more\n                            (?:\\s|\\b|$))\n                            """
"'<(/)?(?:pre|code|kbd|script|math)[^>]*>'"
"'((<(p|h[1-6]|li|dt|dd)[^>]*>|^)              # start with an opening p, h1-6, li, dd, dt or the start of the string\n                                  \\s*                                          # optional white space! \n                                  (<(a|em|span|strong|i|b)[^>]*>\\s*)*)         # optional opening inline tags, with more optional white space for each.\n                                  ((""|&ldquo;|&\\#8220;)|(\'|&lsquo;|&\\#8216;))  # Find me a quote! (only need to find the left quotes and the primes)\n                                                                               # double quotes are in group 7, singles in group 8 \n                                  '"
"'((?:</?(?:a|em|span|strong|i|b)[^>]*>)|[^<>\\s]) # must be proceeded by an approved inline opening or closing tag or a nontag/nonspace\n                                   \\s+                                # the space to replace\n                                   ([^<>\\s]+                            # must be flollowed by non-tag non-space characters\n                                   \\s*                                  # optional white space! \n                                   (</(a|em|span|strong|i|b)>\\s*)* # optional closing inline tags with optional white space after each\n                                   ((</(p|h[1-6]|li|dt|dd)>)|$))                 # end with a closing p, h1-6, li or the end of the string\n                                   '"
"'(\'[^\']*\'|""[^""]*""|::|//?|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'"
"'ns\\d+$'"
"'[\\x80-\\xff]'"
"'[&<>\\""\\x80-\\xff]+'"
"'^\\s+$'"
"'[\x80-\xff]'"
"'encoding\\s*=\\s*[\'""]([^""\']+)[""\']'"
"'[\\)]'"
"'[\\(]'"
"'[#]'"
"'\\/\\/.*$'"
"'^([^\\[\\]]+)(\\[.*\\])?$'"
"'^[0-9]+$'"
"'/\\*'"
"'/\\*.*\\*/'"
"'\\$<\\d+>[/*]?'"
"'\\$\\$|\\${\\w+}'"
"'\nmd5_data = {\n([^}]+)}'"
"'([A-Z][0-9]{2})([0-9]{3})'"
"'(\\d+):(\\d\\d)\\Z'"
"'B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])'"
"'DEBUG DATE (\\d\\d)(\\d\\d)(\\d\\d)\\Z'"
"'OUT TYPE (\\S+)\\Z'"
"'OUT FLIGHT_KM (\\d+\\.\\d+)\\Z'"
"'OUT FLIGHT_POINTS (\\d+\\.\\d+)\\Z'"
"'OUT p\\d+ (\\d\\d):(\\d\\d):(\\d\\d) ([NS])\\s*(\\d+):(\\d+\\.\\d+) ([EW])\\s*(\\d+):(\\d+\\.\\d+)'"
"'..'"
"'\\[\\[([\\w ]+)\\]\\]'"
"'^[ 0-9a-zA-Z\\._\\+/\\$-]{1,256}$'"
"'\\.\\.|^\\./|\\.$|/\\./|^-'"
"'//|/$'"
"'^ | $|/ | /'"
"'^__.*__$'"
"None"
"'[\\._]|\\-(?=$)'"
"'.*?/video/tv/(.+?)/season (\\d{1,2})$'"
"'.*?/video/tv/(.+?)/season (\\d{1,2}) \\[720p\\]$'"
"'.*?/video/tv/(.+?)/season (\\d{1,2})/extras$'"
"'.*?/video/tv/Misc'"
"'^Icon.{1}$'"
"'^[.]{1}.*'"
"'^folder.jpg$'"
"'.*?/video/films$'"
"'.*?/video/films/Short Films(/.*?)?'"
"'(?=^[.]{1}.*)'"
"'\\\\(title|section|tabbed|sentence|paragraph|definition|subsection|verbatim|code|pythoncode)(\\[[^]]*\\])?({[^}]*})?'"
"'\\((\\w+) - ([\\w]+)'"
"'^(\\d+)\\) (\\w+): (.+)( \\(Bye: [\\?\\d]+\\))$'"
"'(.+) -- (.+)'"
"'\\[(\\w+)\\]'"
"'^\\d+\\) \\w+: (.+)( \\(Bye: [\\?\\d]+\\))$'"
"'^-?\\d+$'"
"'""|\\\\'"
"'\\$?([a-z]+)_\\{*(\\d)\\}*\\$?'"
"""\\{([a-zA-Z\\']+)\\}"""
"'([-_a-zA-Z0-9]+)(\\s*.*?)(?=,\\s+(?:/|-|--)|$)'"
"'``([^`\\s]+?)``'"
"'&nbsp;'"
"'^Monster'"
"'&#\\d+;'"
"'&\\w+;'"
"'\\r?\\n'"
"'viewType=fullRecord&(?:amp;)?UT.*?>([^<>]*?)</a>'"
"'http://rss.isiknowledge.com/rss\\?e=\\w*&(?:amp;)?c=\\w*'"
"'KeyUT=([^\\t ]+)'"
"' ((the|and|or|for|to|in|of|an?|is|it|-+) )+'"
"'(not recognized|No such file|not found)'"
"'^[ \\t]+$'"
"'[ ,]+'"
"'\r\n|\r'"
"'-\\*-\\s*([^\\r\\n]*?)\\s*-\\*-'"
"'^\n        (?P<prefix>(?:[^\\r\\n|\\n|\\r])*?)\n        [\\ \\t]*Local\\ Variables:[\\ \\t]*\n        (?P<suffix>.*?)(?:\\r\\n|\\n|\\r)\n        (?P<content>.*?\\1End:)\n        '"
"'(.*?)\\t'"
"'\\W'"
"'^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$'"
"'^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$'"
"'^[ ]{0,2}([ ]?\\_[ ]?){3,}[ \\t]*$'"
"' {2,}\\n'"
"'\n        (\n            # tag\n            </?         \n            (?:\\w+)                                     # tag name\n            (?:\\s+(?:[\\w-]+:)?[\\w-]+=(?:"".*?""|\'.*?\'))*  # attributes\n            \\s*/?>\n            |\n            # auto-link (e.g., <http://www.activestate.com/>)\n            <\\w+[^>]*>\n            |\n            <!--.*?-->      # comment\n            |\n            <\\?.*?\\?>       # processing instruction\n        )\n        '"
"'\n          # Match tail of: [text](/url/) or [text](/url/ ""title"")\n          \\(            # literal paren\n            [ \\t]*\n            (?P<url>            # \\1\n                <.*?>\n                |\n                .*?\n            )\n            [ \\t]*\n            (                   # \\2\n              ([\'""])            # quote char = \\3\n              (?P<title>.*?)\n              \\3                # matching quote\n            )?                  # title is optional\n          \\)\n        '"
"'\n          # Match tail of: [text][id]\n          [ ]?          # one optional space\n          (?:\\n[ ]*)?   # one optional newline followed by spaces\n          \\[\n            (?P<id>.*?)\n          \\]\n        '"
"'^(.+)[ \\t]*\\n(=+|-+)[ \\t]*\\n+'"
"""\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]*\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        """
"'\n            (?<!\\\\)\n            (`+)        # \\1 = Opening run of `\n            (?!`)       # See Note A test/tm-cases/escapes.text\n            (.+?)       # \\2 = The code block\n            (?<!`)\n            \\1          # Matching closer\n            (?!`)\n        '"
"'(\\*\\*|__)(?=\\S)(.+?[*_]*)(?<=\\S)\\1'"
"'(\\*|_)(?=\\S)(.+?)(?<=\\S)\\1'"
"'\\*\\*(?=\\S)(.+?[*_]*)(?<=\\S)\\*\\*'"
"'\\*(?=\\S)(.+?)(?<=\\S)\\*'"
"""\n        (                           # Wrap whole match in \\1\n          (\n            ^[ \\t]*>[ \\t]?          # '>' at the start of a line\n              .+\\n                  # rest of the first line\n            (.+\\n)*                 # subsequent consecutive lines\n            \\n*                     # blanks\n          )+\n        )\n        """
"'^[ \t]*>[ \t]?'"
"'(\\s*<pre>.+?</pre>)'"
"'(?m)^  '"
"'(?m)^'"
"'\\n{2,}'"
"'&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)'"
"'<(?![a-z/?\\$!])'"
"'<((https?|ftp):[^\\\'"">\\s]+)>'"
"'\n          <\n           (?:mailto:)?\n          (\n              [-.\\w]+\n              \\@\n              [-\\w]+(\\.[-\\w]+)*\\.[a-zA-Z]+\n          )\n          >\n        '"
"'[,;: ]+'"
"'((^| )+http://[^ ]+)'"
"'-+'"
"'&'"
"'<'"
"'>'"
"'&(?!\\#)'"
"'\\{@([^\\}]*)=([^\\}]*)}'"
"'^(> )+'"
"'^([-]*)$|^([=]*)$'"
"'(\\ ?\\ ?\\ ?)\\[\\^([^\\]]*)\\]:\\s*(.*)'"
"'\\[\\^([^\\]]*)\\]'"
"'memcached://([.\\w]+:\\d+)'"
"'https://www.google.com/a/google.com/ServiceLogin'"
"'https://www.google.com/a/[a-z0-9.-]+/ServiceLogin'"
"'^\\w+://'"
"'http'"
"'Payment'"
"'BTC'"
"'[0-9]'"
"'78\\d{6}'"
"' valign=""top""><td bgcolor=""#e3e3e3""><b>(.*)</b></td><td bgcolor=""#e3e3e3""><b>(.*)</b></td><td bgcolor=""#e3e3e3""><b>(.*)</b></td><td colspan=""1"" bgcolor=""#e3e3e3"" width=""45%"">(.*)</td><td bgcolor=""#e3e3e3"" width=""25%"" align=""right""><A HREF=""(.*)"">(.*)</A></td></tr>'"
"'<td colspan=""2"">(.*)</td>'"
"'><td colspan=""3"" /><td><i>(.*)</i></td></tr>'"
"'([^\\\\]|^)""'"
"'&#(\\d+|x[0-9a-fA-F]+);'"
"'&(?!#\\d+;|#x[0-9a-fA-F]+;|\\w+;)'"
"'&(\\w+);'"
"'[^ \\t\\n\\r\\f\\v""\\\']+\\s*\\=\\s*""[^""]*""'"
"'[^ \\t\\n\\r\\f\\v""\\\']+\\s*\\=\\s*\\\'[^\\\']*\\\''"
"'[^ \\t\\n\\r\\f\\v""\\\']+\\s*\\=\\s*[^ \\t\\n\\r\\f\\v""\\\']*'"
"'[^ \\t\\n\\r\\f\\v""\\\']+'"
"'\\s'"
"'\\${date}'"
"'\\${dir}'"
"'\\${log_file}'"
"'\\${output_dir}'"
"'\\${f107}'"
"'\\${f107a}'"
"'\\${ap}'"
"'\\${ecmwf_file}'"
"'%\\((?P<group>\\w*)\\[(?P<option>(.*))\\]\\)'"
"'\\[(?P<header>[^]]+)\\]'"
"'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'"
"'\\$\\((?P<envvar>\\w*)\\)'"
"'%c'"
"'(?P<year>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*Y|(?P<month>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*M|(?P<day>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*D|(?P<hour>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*H|(?P<minute>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*M|(?P<second>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(\\s)*S'"
"'\\n'"
"'((19|20|21)\\d\\d)[-/.]?(0[1-9]|1[012]|[1-9])[-/.]?(0[1-9]|[12][0-9]|3[01]|[1-9])([tT ]?([0-1][0-9]|2[0-3]|[0-9])([:]?([0-5][0-9]|[0-9]))?([:]([0-5][0-9]|[1-9]))?([.]([0-9])+)?)?'"
"'BEGIN'"
"'STOP'"
"'TO'"
"'OF'"
"'PART'"
"'MSG_TYPE'"
"'MSG_ID'"
"'LAT'"
"'LON'"
"'REF_ID'"
"'E-MAIL'"
"'FTP'"
"'TIME'"
"'STA_LIST'"
"'BULL_TYPE'"
"'MAG'"
"'MAG_TYPE'"
"'CHAN_LIST'"
"'RELATIVE_TO'"
"'HELP'"
"'PROD_ID'"
"'EVENT_LIST'"
"'ARRIVAL_LIST'"
"'GROUP_BULL_LIST'"
"'ORIGIN_LIST'"
"'BEAM_LIST'"
"'AUX_LIST'"
"'COMM_LIST'"
"'DEPTH_CONF'"
"'DEPTH_KVALUE'"
"'DEPTH_THRESH'"
"'DEPTH_MINUS_ERROR'"
"'DEPTH'"
"'EVENT_STA_DIST'"
"'MB_MINUS_MS'"
"'MS_ERR'"
"'MIN_MB'"
"'HYDRO_CP_THRESH'"
"'HYDRO_TE_THRESH'"
"'LOC_CONF'"
"'MB_ERR'"
"'MBMS_CONF'"
"'MBMS_SLOPE'"
"'MBMS_THRESH'"
"'MIN_DP_SNR_PP'"
"'MIN_DP_SNR_SP'"
"'MIN_MOUVEOUT_PP'"
"'MIN_MOUVEOUT_SP'"
"'MIN_NDEF'"
"'MIN_NDP_PP'"
"'MIN_NDP_SP'"
"'MIN_NSTA_MS'"
"'MIN_WDEPTH_THRESH'"
"'REG_CONF'"
"'BULLETIN'"
"'WAVEFORM'"
"'SLSD'"
"'ARRIVAL'"
"'STA_STATUS'"
"'CHAN_STATUS'"
"'CHANNEL'"
"'WAVE_MISSION'"
"'WAVE_QUALITY'"
"'STATION'"
"'EVENT'"
"'EXECSUM'"
"'COMMENT'"
"'COMM_STATUS'"
"'ORIGIN'"
"'OUTAGE'"
"'RESPONSE'"
"'DETBKPHD'"
"'GASBKPHD'"
"'BLANKPHD'"
"'CALIBPHD'"
"'QCPHD'"
"'SPHDP'"
"'SPHDF'"
"'RLR'"
"'ARR'"
"'RRR'"
"'ALERT_FLOW'"
"'ALERT_SYSTEM'"
"'ALERT_TEMP'"
"'ALERT_UPS'"
"'MET'"
"'RNPS'"
"'SSREB'"
"'NETWORK'"
"'RMSSOH'"
"'ARMR'"
"'FPEB'"
"'[A-Za-z]{3}(\\d+\\.\\d+)'"
"""[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?"""
"'[/\\*A-Za-z_\\+=\\(\\)\\<\\>]([\\w]|[/=\\<\\>\\(\\)\\.@\\*\\+-])*'"
"'(.*?)([0-9]+)(\\.af)'"
"'^\\d+(\\D*)'"
"'http://cmd/(.*?)/(.*)'"
"'^(<\\?xml version=[^\\n]*?\\n)'"
"'([a-z])([A-Z])'"
"'([A-Z])([A-Z][a-z])'"
"'^([0-9]{4})\\.([0-9]+)\\.([0-9]+)$'"
"'^\\s*([0-9]+:[0-9]+)\\s*(.+)'"
"'^\\s*([0-9]+:[0-9]+)\\s*\\|\\s*([0-9]+:[0-9]+)\\s*\\|\\s*(.+)'"
"'^\\s*([0-9]+:[0-9]+)\\s*\\|\\s*(.+?)(\\s+\\(([0-9]+:[0-9]+)\\))?\\s*$'"
"'([0-9]+):([0-9]+)'"
"""[^\\w\\d'\\[\\]{}\\\\| -]"""
"'[A-Za-z]'"
"'.+@.+\\...+'"
"'^(\\s*)'"
"'^\\s*[\\[(]?(?P<hour>\\d?\\d):(?P<minute>\\d\\d)(:(?P<second>\\d\\d))?[)\\]]?\\s*'"
"'^\\s*[\\[<\\(]?(?P<nickflag>[\\s@+])?(?P<nick>[\\w\\d^`\\[\\]{}\\\\|-]+)[\\]>\\):]+\\s?'"
"'[^\\w\\d]'"
"'[\\s,]'"
"'^/q/(?P<account>\\d+)/(?P<quote>\\d+)$'"
"'url\\((.*?)\\.(png|gif|jpg)\\)'"
"'\\d+\\.\\d+'"
"'^\\.|\\.\\.$'"
"'^(.*?)(\\.|)(\\w?[\\w\\d]*)$'"
"'^(def|class)\\s+([\\w\\d]+)'"
"'^[^\\n]+'"
"'^[ ]{4}'"
"'\\..*'"
"'\\):\\s*\\n'"
"' ?\\[([^\\[\\]]+)\\]'"
"'-[>-]* '"
"'(,\\n|[^\\n-])+'"
"'[nN]ew (.*)'"
"'\\s*:rtype:\\s*([^\\n]+)'"
"'\\s*@rtype:\\s*([^\\n]+)'"
"'(?:\\n(?:def|class|@.*?\\n(?:def|class))|^).*?(?=\\n(?:def|class|@)|$)'"
"'def|class|@'"
"'[\\w\\d]*'"
"'[^\\w\\s]+'"
"'(?:[^\\n]*\\n){0,2}'"
"'coding[=:]\\s*([-\\w.]+)'"
"'[\\w\\d\\\'""]'"
"'(?: +|$)'"
"'^(\\d+)\\s*(.*)$'"
"'(?:^|(?<=\\s))#([?!<])\\s*([^\\n]+)'"
"'\\[textile\\](.*)\\[/textile\\]'"
"'(?P<digit>\\d)(?P=digit){5}'"
"'=>?'"
"'([{}\\[\\]])'"
"' *\n'"
"'^List\\[(.*)\\]$'"
"'^#include\\s*[<""]?(.*)[>""]?$'"
"'(\\{\\w{2}\\})'"
"'valign=.top.>(.*?\\d\\d\\d\\d).?</td>.*?<td.valign=.top.>.*?<a href=.(.*?).>(.*?)</a>.*?</td>.*?</tr>'"
"' - '"
"'[<BR>]?.*?<A HREF=\'/cgi-bin/dcdev/forms/(C[0-9]*?/[0-9]*?)/\'>(?:<FONT COLOR =""#990000"">)?View(?:</FONT>)?</A>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF=\'/cgi-bin/dcdev/forms/DL/[0-9].*/\'>(?:<FONT COLOR =""#990000"">)?Download(?:</FONT>)?</A>&nbsp;&nbsp;.*?(Form F.*?)..-.(?:period.(.*?)-(.*?),.)?filed.(.*?).-.(.*?)(?:<BR>&nbsp;&nbsp;&nbsp;<B>Amended</B> by <A HREF=\'/cgi-bin/dcdev/forms/C[0-9]*?/([0-9]*?)/\'>.*?</A>)?\n'"
"'^(?P<attribute>.*?)=(?P<value>.*?),.*$'"
"'\\(([\\||\\&])?(.*)\\)'"
"'(\\(.*?\\))'"
"'.*?,'"
"'^\\d+$'"
"'^\\d+\\.\\d+$'"
"'^\\s+<spontaneous>\\s*$|^.*\\((\\d+)\\)$'"
"'^--+$'"
"'\\s\\s+'"
"'([^A-Z])([A-Z])'"
"'([A-Z][A-Z])([A-Z][0-9a-z])'"
"'^([A-Z])([A-Z])'"
"'([A-Z][a-z]*)([A-Za-z0-9]+)'"
"'enum\\s*{([^}]*)}\\s*([A-Z][A-Za-z]*)(\\s|;)'"
"'\\s*,\\s'"
"'\\\\\\n'"
"'^[#].*?$'"
"'^(typedef|struct|enum)(\\s|.|\\n)*?;\\s*'"
"'G_BEGIN_DECLS|BEGIN_LIBGTOP_DECLS'"
"'^\\s*(extern)\\s+\\""C\\""\\s+{'"
"';\\s*'"
"' \\s* ([*|&]+) \\s* (\\w+)'"
"'\\s+ (\\w+) \\[ \\s* \\]'"
"'\n(?P<ret>(-|\\w|\\&|\\*)+\\s*)  # return type\n\\s+                   # skip whitespace\n(?P<func>\\w+)\\s*[(]   # match the function name until the opening (\n(?P<args>.*?)[)]     # group the function arguments\n'"
"'\\s*,\\s*'"
"'(const-)?([A-Za-z0-9]+)\\*?\\s+'"
"'.*\\*$'"
"'(\\w+)_new$'"
"'[\\d\\+\\.]{7,15}'"
"'\\*\\*(?P<bold>.*?)\\*\\*'"
"'__(?P<underline>.*?)__'"
"'--(?P<strike>.*?)--'"
"'%%(?P<spoiler>.*?)%%'"
"'\\*(?P<italic>.*?)\\*'"
"'_(?P<italic>.*?)_'"
"'`(?P<code>.*?)`'"
"'(.*)#(.*)'"
"'[^\\.-z]'"
"'\\b(http|ftp|https)://\\S+(\\b|/)|\\b[-.\\w]+@[-.\\w]+'"
"'&gt;&gt;([0-9]+)'"
"'^&gt;(.*)$'"
"'&lt;b&gt;(.*)&lt;/b&gt;'"
"'&lt;i&gt;(.*)&lt;/i&gt;'"
"'&lt;u&gt;(.*)&lt;/u&gt;'"
"'&lt;strike&gt;(.*)&lt;/strike&gt;'"
"'&lt;pre&gt;(.*)&lt;/pre&gt;'"
"'T'"
"'^<\\?\\s*xml\\s+version\\s*=\\s*[\'""]([-a-zA-Z0-9_.:]*)[\'""]'"
"'.*\\w'"
"'\\d+\\.?\\d*\\s*\\w*'"
"'\\d+\\.?\\d*\\s*\\w*$'"
"'^[0-9A-Za-z]+$'"
"'^(now)|(\\d+(\\.\\d+)?)|(\\d+:\\d\\d:\\d\\d(\\.\\d+)?)$'"
"'\\d+\\.?\\d*'"
"'^(\\d+(,\\s*\\d+)*)?$'"
"'([^%]|%[a-fA-F0-9]{2})'"
"'^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$'"
"'[^\\s()<>,;:\\""/[\\]?=]+/[^\\s()<>,;:\\""/[\\]?=]+(\\s*;\\s*[^\\s()<>,;:\\""/[\\]?=]+=(""(\\""|[^""])*""|[^\\s()<>,;:\\""/[\\]?=]+))*$'"
"'^([-:,;#%.\\sa-zA-Z0-9]|\'[\\s\\w]+\'|""[\\s\\w]+""|\\([\\d,\\s]+\\))*$'"
"'^(\\s*[-\\w]+:\\s*[^:;]*(;|$))*$'"
"'([-\\w]+):\\s*([^:;]*)'"
"'([a-zA-Z0-9_\\-\\+\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$'"
"'^\\d\\d\\d\\d-\\d\\d-\\d\\d$'"
"""^urn:[a-zA-Z0-9][a-zA-Z0-9-]{1,31}:([a-zA-Z0-9()+,\\.:=@;$_!*'\\-]|%[0-9A-Fa-f]{2})+$"""
"""^tag:([a-z0-9\\-\\._]+?@)?[a-z0-9\\.\\-]+?,\\d{4}(-\\d{2}(-\\d{2})?)?:[0-9a-zA-Z;/\\?:@&=+$\\.\\-_!~*'\\(\\)%,]*(#[0-9a-zA-Z;/\\?:@&=+$\\.\\-_!~*'\\(\\)%,]*)?$"""
"'^\\w+://[^/].*'"
"'[\\\\](.)'"
"'\\([^(]*?\\)'"
"'&#?(\\w+);'"
"'<a\\s+href=(?:""(.*?)""|\'(.*?)\'|([\\w-]+))\\s*>'"
"'<img\\s+[^>]*src=(?:""(.*?)""|\'(.*?)\'|([\\w-]+))[\\s>]'"
"'\\w+:'"
"'</(\\w+)>'"
"'&#?\\w+;'"
"'http://'"
"'([0-9]?[0-9]:)?[0-5]?[0-9]:[0-5][0-9]$'"
"'^\\d+(,\\s*\\d+)*$'"
"'^[a-zA-z][a-zA-z0-9:._]*'"
"'<\\?xml\\s+version\\s*=\\s*(?:""[-a-zA-Z0-9_.:]+""|\\\'[-a-zA-Z0-9_.:]+\\\')\\s+(encoding\\s*=\\s*(?:""([-A-Za-z0-9._]+)""|\\\'([-A-Za-z0-9._]+)\\\'))'"
"'^(\\w*://)[-+.\\w]*(:[-+.\\w]+)?@'"
"'<!--\\s*Description:\\s*(.*?)\\s*Expect:\\s*(!?)(\\w*)(?:{(.*?)})?\\s*-->'"
"'[A-Za-z][-A-Za-z0-9._]*'"
"'/([a-z]+)_([-A-Za-z0-9]+)([-_A-Za-z0-9]*)\\.xml'"
"'VERSION\\s*=\\s""(.+?)""'"
"'(\\d{3}) (.+?)[\\r\\n]+'"
"'(\\S+) ([0-9a-fA-F]{8}) (.+)'"
"'(\\S+?)=(.+?)[\\r\\n]+'"
"'TTITLE(\\d+)'"
"'(.*?)\\s*/\\s*(.*)'"
"'^[a-zA-Z0-9_]+$'"
"'^\\s*(<[^>]+>)+([^<>]*)(<[^>]+>)*$'"
"'^[""<].*[>""]$'"
"'\\\\'"
"'\\b(std\\s*::|CXXTEST_STD|using\\s+namespace\\s+std\\b|^\\s*\\#\\s*include\\s+<[a-z0-9]+>)'"
"'\\b(throw|try|catch|TSM?_ASSERT_THROWS[A-Z_]*)\\b'"
"'\\bclass\\s+(\\w+)\\s*:\\s*public\\s+((::)?\\s*CxxTest\\s*::\\s*)?TestSuite\\b'"
"'\\bCXXTEST_SUITE\\s*\\(\\s*(\\w*)\\s*\\)'"
"'\\bCXXTEST_CODE\\s*\\('"
"'^([^/]|/[^/])*\\bvoid\\s+([Tt]est\\w+)\\s*\\(\\s*(void)?\\s*\\)'"
"'^.*\\{\\{'"
"'\\}\\}'"
"'\\b(E?TSM?_(ASSERT[A-Z_]*|FAIL))\\s*\\('"
"'\\bstatic\\s+\\w+\\s*\\*\\s*createSuite\\s*\\(\\s*(void)?\\s*\\)'"
"'\\bstatic\\s+void\\s+destroySuite\\s*\\(\\s*\\w+\\s*\\*\\s*\\w*\\s*\\)'"
"'\\s*\\#\\s*include\\s+<cxxtest/'"
"'^\\s*<CxxTest\\s+preamble>\\s*$'"
"'^\\s*<CxxTest\\s+world>\\s*$'"
"""^# Your branch is (ahead of|behind) '(.*)' by (\\d+) commit"""
"'^# and have (\\d+) and (\\d+) different'"
"'^# Changes to be committed:$'"
"'^# Changed but not updated:$'"
"'^# Untracked files:$'"
"'^# Unmerged paths:$'"
"'^[\\w\\d]+$'"
"'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'"
"'/.*'"
"'((\\d{6}) (tree|blob)) ([0-9a-f]{40})\t(start|(.+))$'"
"'first\n$'"
"'commit [0-9a-f]{40}\nAuthor: .+\nDate:   .+\n\ncommit [0-9a-f]{40}\nAuthor: .+\nDate:   .+\n'"
"'^(#[\\da-fA-F]{6})$'"
"'^=([A-Z]+)(\\(.*)$'"
"'([A-Z]+\\d+)'"
"'/\\*\\*(.*)'"
"'(.*)\\*/'"
"'(namespace|enum|class|struct|union)'"
"'(\\S+)\\('"
"'{'"
"'@{'"
"'}'"
"'@}'"
"'TRACE_[CD]TOR'"
"'//(.*)'"
"'//.*'"
"'\\.It Fl \\\\-([-A-Za-z]+)'"
"'\\[DEBUG\\] Option: (.*)'"
"'_'"
"'-$'"
"'(\\s+|\\$|,)'"
"'([-0-9.]+)'"
"'\\$cmd'"
"'\\s*([-$,0-9.]+)\\s+([-$,0-9.]+)'"
"' -[VGB] '"
"'\\$tests'"
"'^#ifndef NOT_FOR_PYTHON'"
"'^#endif // NOT_FOR_PYTHON'"
"'^(using|CPP|[#{}/])'"
"'^\\s+[{}]\\s+$'"
"'assert'"
"'^};'"
"'BOOST_.*_TEST_SUITE'"
"'^struct (.*?) {'"
"'BOOST_AUTO_TEST_CASE\\((.+?)\\)'"
"'void [^:]+::(test[^(]+|setUp|tearDown)\\(\\)'"
"'  ([a-z:_<>]+?)&?\\s+([a-z0-9_]+)(\\((.+?)\\))?;'"
"'  ([a-z:_<>]+?)&?\\s+([a-z0-9]+)\\s*=\\s*([^(]+);'"
"'  ([a-z:_<>]+?)\\s+([a-z0-9]+)\\s*=\\s*(.+?)$'"
"'BOOST_CHECK_NE'"
"'BOOST_CHECK_EQUAL'"
"'BOOST_CHECK_THROW\\(([^,]+), ([^,)]+?)\\)'"
"'BOOST_CHECK'"
"'amount_t::precision_t\\(([^)]+?)\\)'"
"'amount_t::'"
"'Amount\\.PARSE_'"
"'commodity_t\\(([^)]+?)\\)'"
"'commodity_t::'"
"'balance_t::'"
"'balance_pair_t::'"
"'value_t::'"
"'amount_t'"
"'commodity_t'"
"'balance_t'"
"'balance_pair_t'"
"'value_t'"
"'PARSE_DEFAULT'"
"'PARSE_PARTIAL'"
"'PARSE_SINGLE'"
"'PARSE_NO_MIGRATE'"
"'PARSE_NO_REDUCE'"
"'PARSE_NO_ASSIGN'"
"'PARSE_NO_DATES'"
"'PARSE_OP_CONTEXT'"
"'PARSE_SOFT_FAIL'"
"'ledger::'"
"'std::istringstream'"
"'std::ostringstream'"
"'set_session_context\\(&session\\)'"
"'set_session_context\\(\\)'"
"'([a-z_]+?)_t\x08'"
"'(""[^""]+"")'"
"'std::string\\(([^)]+?)\\)'"
"'string\\(([^)]+?)\\)'"
"'\\.print\\(([^)]+?)\\)'"
"'true'"
"'false'"
"'CURRENT_TIME\\(\\)'"
"'CURRENT_DATE\\(\\)'"
"'commodity\\(\\)'"
"'precision\\(\\)'"
"'([0-9]+)[FL]'"
"'([0-9]+)UL'"
"';'"
"'//'"
"'->'"
"'(\\s+|\\()(\\S+?) \\? (.+?) : (.+?)\\)'"
"'if \\((.+?)\\)( {)?$'"
"'(} )?else( {)?$'"
"'amount_error'"
"'^  '"
"'^@end\\s+smallexample\\s*$'"
"',\\s*'"
"':\\s*'"
"'-j([0-9]+)?'"
"'\\$ledger'"
"'^_.*'"
"'^_.*$'"
"'([# ]*?)([a-zA-Z0-9_]+)( +)([a-zA-Z0-9_]+)(.*)'"
"'line (\\d+) column (\\d+) - (\\w+): (.*)'"
"'(\\w+): (.*)'"
"'$'"
"'s$'"
"'(_controller|_test|_controller_test)?\\.(rb|yml)$'"
"'\\/app\\/views\\/'"
"'\\s*(\\d+)\\s*(\\d+)\\s*:\\s*(\\d+) .*'"
"'^([A-Fa-f0-9]{2,2}){3,4}$'"
"'(?P<address>.*?)(?:(?: \\(.*?@)|$)'"
"'{markers: (?P<markers>\\[.*?\\]),\\s*polylines:'"
"'world'"
"u'w\u1ec3rld'"
"u'joe'"
"'[ \\t]+'"
"'[ \\t]*(#)'"
"'.*?--(.*)\\.tar\\.gz$'"
"'.*?([a-zA-Z0-9\\-\\.]*)\\.tar\\.gz$'"
"'^#date\\s+(.+)$'"
"'^([0-9]{4})-([0-1][0-9])-([0-3][0-9])(-([0-2][0-9])-([0-5][0-9]))? +(.*)$'"
"'.'"
"'(!\\s*|)re:(.*)'"
"'^200|301|404$'"
"'^https?%3A%2F%2F'"
"'[^\t\n\r -~]+'"
"'^(?:\\d\\d? )?(.+)'"
"'^\\d\\d?'"
"'^(\\d\\d\\w? )?(.+?)( \\d{4})?$'"
"'\\d{4}$'"
"'[\\]()`\xc2\xb4\':;,!|?=\\/""~*\\[]'"
"'^m{,3}(c[md]|d?c{,3})(x[cl]|l?x{,3})(i[xv]|v?i{,3})$'"
"'<!'"
"'&#(x?[0-9A-Fa-f]+)[^0-9A-Fa-f]'"
"'(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))'"
"'<!((?!DOCTYPE|--|\\[))'"
"'<(\\S+)/>'"
"'[a-zA-Z][-_.a-zA-Z0-9:]*\\s*'"
"'[\\w-]+'"
"'[\x00-\x08\n-\x1f\x7f"",:;]'"
"'[\x00-\x08\n-\x1f\x7f""]'"
"'([\r]?\n)+[ \t]{1}'"
"'[,;:].'"
"'(?P<signal>[+-]?)(?P<relative>[\\d]?)(?P<weekday>[\\w]{2})$'"
"'[ ]*#+.*'"
"'{(.*?)}'"
"'\\w+'"
"'\\W+'"
"'\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a ""q"" or a ""b"", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  #(?=[ \\t]|$)           # whitespace or the end of the string\n  '"
"'^(.+?)(\\.muse)?$'"
"'file:\\/\\/\\/.\\/'"
"'file:\\/\\/\\/'"
"'(\\d+):(.*)'"
"'[NSEW]\\d*'"
"'^([A-Za-z][A-Za-z0-9+-.]*://)(/*)(.*?)'"
"'<([^<\\s]+?)\\s*/>'"
"'realm=""([^""]*)""'"
"'([a-zA-Z-]+):\\s*$'"
"'^[\\t ]*\\n?$'"
"'^\\W+'"
"'\\w'"
"'\\S+\\s(\\S+)\\t(.+)'"
"'^@@ -([0-9]*),([0-9]*) \\+([0-9]*),([0-9]*) @@'"
"'^@@ -([0-9]*)(?:,([0-9]*))? \\+([0-9]*)(?:,([0-9]*))? @@'"
"'([\\w-]+)([.#])(\\w+)'"
"'^---[ \t]*\n((?:[ \t]*[^ \t:]+[ \t]*:[^\n]*\n)+)---[ \t]*\n'"
"'\\s+markdown=(""1""|\'1\')'"
"'^[ ]{0,3}\\*(.*?)$'"
"'^[ ]{0,3}\\-(.*?)$'"
"'^[ ]{0,3}\\_(.*?)$'"
"'(?<!\\\\)\\|\\|'"
"'\n        (\n            # tag\n            </?\n            (?:\\w+)                                     # tag name\n            (?:\\s+(?:[\\w-]+:)?[\\w-]+=(?:"".*?""|\'.*?\'))*  # attributes\n            \\s*/?>\n            |\n            # auto-link (e.g., <http://www.activestate.com/>)\n            <\\w+[^>]*>\n            |\n            <!--.*?-->      # comment\n            |\n            <\\?.*?\\?>       # processing instruction\n        )\n        '"
"""\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]+\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        """
"'\n        (?:\\n\\n|\\A\\n?)\n        ^```([\\w+-]+)?[ \\t]*\\n      # opening fence, $1 = optional lang\n        (.*?)                       # $2 = code block content\n        ^```[ \\t]*\\n                # closing fence\n        '"
"""'(\\d\\d)(?=(\\s|,|;|\\.|\\?|!|$))"""
"""(?<!\\S)'(?=\\S)"""
"'(?<!\\S)""(?=\\S)'"
"""(?<=\\S)'"""
"'(?<=\\S)""(?=(\\s|,|;|\\.|\\?|!|$))'"
"'(?<![a-z0-9?!/\'""-])>'"
"'\n          <\n           (?:mailto:)?\n          (\n              [-.\\w]+\n              \\@\n              [-\\w]+(\\.[-\\w]+)*\\.[a-z]+\n          )\n          >\n        '"
"'[-\\s]+'"
"'(?P<tag><(?:img|script)[^>]+src=[""\'](?P<src>[^""\']+)[^>]*>)'"
"':\\s+\\(.*?\\)\\s+[-0-9x+]+\\s+[-0-9+]+$'"
"'^https?://github.com/[^/]+/[^/]+/?$'"
"'^https?://github.com/[^/]+/[^/]+/tree/[^/]+/?$'"
"'^https?://github.com/[^/]+/[^/]+/tree/([^/]+)/?$'"
"'^https?://github.com/([^/]+)/([^/]+)($|/.*$)'"
"'^https?://github.com/[^/]+/?$'"
"'^https?://github.com/([^/]+)/?$'"
"'^https?://bitbucket.org'"
"'^https?://bitbucket.org/'"
"'^https://([^/]+)'"
"'ERROR[: ]|failed: '"
"'^.*ERROR (\\d+):.*'"
"'^\\-\\t0x([0-9a-hA-H]{8})$'"
"'^\\+\\t0x([0-9a-hA-H]{8})\\t(\\d+)\\t(.+): (\\d+)$'"
"'\\n\\n+'"
"'.*\\.jpg'"
"""^([a-zA-Z\\.'-]+)$"""
"'[\\.\\?\\!]\\s*'"
"'[,;]?\\s*'"
"'<[^>]*>'"
"'^(.*)(\\stime\\selapsed:\\s*)(.*)\\s*$'"
"':'"
"'(\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d) ... \\[(\\d+)\\]: \\[(\\d*)-1\\] (LOG|ERROR|HINT|WARNING|STATEMENT):\\s*(.*)'"
"'(.*?)\\s+<(.*)>'"
"'^([0-7]+) (\\S+) ([0-9a-f]{40})\\t(.*)$'"
"'^([0-7]+) ([0-9a-f]{40}) ([1-3])\\t(.*)$'"
"'^[0-9a-f]{40}$'"
"'^QString$'"
"'^QByteArray$'"
"'^QList<.*>$'"
"'^QStringList$'"
"'^QQueue'"
"'^QVector<.*>$'"
"'^QStack<.*>$'"
"'^QLinkedList<.*>$'"
"'^QMap<.*>$'"
"'^QMultiMap<.*>$'"
"'^QHash<.*>$'"
"'^QMultiHash<.*>$'"
"'^QDate$'"
"'^QTime$'"
"'^QDateTime$'"
"'^QUrl$'"
"'^QSet<.*>$'"
"'^QChar$'"
"'^QUuid'"
"'<string>([0-9]+\\.[0-9]+\\.[0-9]+([-a-zA-Z\\.]+[0-9]*)?)</string>'"
"'<record>(.+?)</record>'"
"'<field>(.*?)</field>'"
"'<field>(.+?)</field>'"
"'(\\s*){\\s*$'"
"'(\\s*)}\\s*$'"
"'(\\w*)'"
"'^#define\\s{1,}(\\w{1,}_H)\\s{1,}<(.*)>'"
"'\\s*(\\w*|\\w(\\w|\\.)*\\w)\\s*::'"
"'/\\.svn'"
"'(?mxs)PlotKit.PlotKit.VERSION\\s*=\\s*[\'""]([^\'""]+)'"
"'(?mxs)PlotKit.PlotKit.SUBMODULES\\s*=\\s*\\[([^\\]]+)'"
"'/cruisecontrol(?:/?\\?log=|/?)(.*)$'"
"'/cruisecontrol(?:/(.*))?$'"
"'[0-9][0-9\\.,\\/:-_]*'"
"u'\\+==========================================\\+\n\\| \u05de\u05e2\u05e8\u05db\u05ea \u05e9\u05e2\u05d5\u05ea - (.*) +\\|\n\\|.*\\|\n\\+==========================================\\+'"
"u'\\+------------------------------------------\\+\n\\| (\\d\\d\\d\\d\\d\\d) +(.*) +\\|\n\\| \u05e9\u05e2\u05d5\u05ea \u05d4\u05d5\u05e8\u05d0\u05d4 \u05d1\u05e9\u05d1\u05d5\u05e2:\u05d4-(\\d) \u05ea-(\\d) +\u05e0\u05e7: (.*) *\\|\n\\+------------------------------------------\\+'"
"u'\\+===============================================================\\+\n| +\u05de\u05e7\u05e6\u05d5\u05e2\u05d5\u05ea \u05e1\u05e4\u05d5\u05e8\u05d8 -.*\\|\n\\+===============================================================\\+'"
"u'\n(\\| \u05de\u05d5\u05e8\u05d4  \u05d0\u05d7\u05e8\u05d0\u05d9 : (?P<lecturer_in_charge>.*?) *\\|)\n(\\| -+ +\\|)?\n(\\| \u05de\u05d5\u05e2\u05d3 \u05e8\u05d0\u05e9\u05d5\u05df :(?P<first_test_date>.*?) *\\|)\n(\\| -+ +\\|)?\n(\\| \u05de\u05d5\u05e2\u05d3 \u05e9\u05e0\u05d9   :(?P<second_test_date>.*?) *\\|)\n(\\| -+ +\\|)?\n(?P<remarks>(\\| \\d+\\..*\\|\n)*)'"
"u'\n\\|\\s(?P<course_id>\\d\\d\\d\\d\\d\\d) (?P<course_name>[\u05d0-\u05ea\u05e3\u05e5\u05da\u05df\u05dd0-9()\\/+#,.\\-""\' ]+?) *\\|\n\\| \u05e9\u05e2\u05d5\u05ea \u05d4\u05d5\u05e8\u05d0\u05d4 \u05d1\u05e9\u05d1\u05d5\u05e2\\:( *[\u05d0-\u05ea].+?[0-9]+)+ +\u05e0\u05e7: (?P<academic_points>\\d\\.?\\d) ?\\|'"
"u'\\| *([0-9]*) *([\u05d0-\u05ea]+) ?: ?(.*?) *\\|'"
"'^PIONEER/\\d+\\.\\d+ \\d\\d\\d .*\r\n(.+: ?.+\r\n)*\r\n'"
"'TEL:(\\+?\\d+)'"
"'X-NOK-DT:([\\dTZ]+)'"
"'Date:[\\d.: ]+\\n(.*)END:VBODY'"
"'vif[0-9]+\\.[0-9]+'"
"'ifcfg-([a-z0-9]+)'"
"'TYPE=Bridge'"
"'BRIDGE=([a-zA-Z0-9]+)'"
"'DEVICE=([a-zA-Z0-9\\.]+)'"
"'BRIDGE=(.*)'"
"'ifcfg-([a-z0-9]+)\\.([0-9]+)'"
"'([0-9]+)%'"
"'(([a-z]*)charg([a-z]+))'"
"'\\[playing\\]'"
"'\\[paused\\]'"
"'^(\\w+)\\|'"
"'SELECT.*?FROM (.*) ORDER BY .*'"
"'\\r\\n|\\r|\\n'"
"'\n{2,}'"
"'&(?!(\\w+|#\\d+);)'"
"'(\\s+)'"
"'^\\S+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+$'"
"'(<a [^>]*?)target=[^\\s>]+'"
"'(?:<br clear=""all"">|<i><\\/i>|<b><\\/b>|<em><\\/em>|<strong><\\/strong>|<\\/?smallcaps>|<\\/?uppercase>)'"
"'(?:<p>(?:&nbsp;|\\s|<br \\/>)*?</p>\\s*)+\\Z'"
"'(?P<dbn>[a-z]+)://((?P<user>[^:]+):(?P<pw>[^/]+))?/(?P<db>.+)'"
"'</*(br|pre)[ /]*>'"
"'\\$(?P<funcname>.*)\\((?P<args>.*)\\)\\$'"
"'^[\\w\\d_-]+$'"
"'[a-z\\d_-]+'"
"'<([^>]*)>: \\[0x([0-9a-f]+)-0x([0-9a-f]+)\\]'"
"'.*rlen=([0-9]+)'"
"'[a-z]'"
"'^\\${\\d+[:}]'"
"'^\\${VISUAL[:}/]'"
"'^\\${\\d+\\/'"
"'^\\$\\d+'"
"'^`!p\\s'"
"'^`!v\\s'"
"'\\\\([ul].)'"
"'\\\\([UL].*?)\\\\E'"
"'\\$(\\d+)'"
"'\\(\\?(\\d+):'"
"token.search"
"'[^ \\t]'"
"'tmux (\\d+).(\\d+)'"
"u'&\\w+?;'"
"'\\w+$'"
"'\\$\\{\\D'"
"'\\$\\{([^\\d}][^}:]*)(?::([^}]*))?\\}'"
"'<li>(.*?)</li>'"
"'<a\\s*href=""(.*)""\\s*>(.*)</a>'"
"'/'"
"'#(\\d{4,5})'"
"'r(\\d{4,5})'"
"'(<pre><code>(.*?)</code></pre>)'"
"'([\\""\']{3})(.*?)(\\1)'"
"'&quot;'"
"'\\S'"
"'""\'(?=\\w)'"
"'\'""(?=\\w)'"
"""\\b'(?=\\d{2}s)"""
"""'"""
"'``'"
"""''"""
"'`'"
"'--'"
"'\\.\\.\\.'"
"'\\. \\. \\.'"
"'&#8211;'"
"'&#8212;'"
"'&#8216;'"
"'&#8217;'"
"'&#8220;'"
"'&#8221;'"
"'&#8230;'"
"'\\\\\\\\'"
"'\\\\""'"
"""\\\\'"""
"'\\\\\\.'"
"'\\\\-'"
"'\\\\`'"
"'([^<]*)(<[^>]*>)'"
"'^[a-fA-F0-9]{40}$'"
"'^remote\\.([^.]+)\\.url (.+)$'"
"'branch\\.([^.]*)\\.remote (.+)'"
"'branch\\.([^.]*)\\.merge (?:(?:refs/)?heads/)?(.+)'"
"'^heads/(.+)$'"
"'^remotes/([^/]+)/(.+)$'"
"'^[\r\n]*(\\s*)'"
"'\\n\\s*$'"
"'(></)|("""")|(\\n\\s+)\\n|(.|\\s)'"
"'^(\\s*<[^>]+>\\s*)'"
"'(\\s*<[^>]+>[\\s\\n\\r]*)$'"
"'(<|>|\\+(?!\\s*\\+|$))'"
"'^([\\w\\-:]*)'"
"'\\[([^\\]]*)\\]'"
"'\\{([^\\}]*)\\}'"
"'\\.([\\$a-zA-Z0-9_\\-\\&]+)'"
"'#([\\$a-zA-Z0-9_\\-\\&]+)'"
"'\\*\\s*([0-9]+)'"
"'[\\+\\!]+$'"
"'label(\\s*)=(\\s*)""\\s%tmp(.\\w*)*(\\s*)""'"
"'.*?: (.*)$'"
"'^[^=><]*(.*?)[\'""]*$'"
"'^[\'""]*(.*?)[\'""]*$'"
"'^[A-Za-z][_.A-Z-a-z\\d]+'"
"'^my\\.'"
"'([^(]+)(?:\\((.*)\\))?'"
"'(\\W|_)'"
"'[ \\.,\\!\\?\'\\"";:/\\\\+=#]+'"
"'\\r?\\n(?P<spaces>[ ]*)(?P<fence>@{2,})[[ ]*(?P<syntax>[a-zA-Z0-9_+-]+)[ ]*(?P<linenos>[a-zA-Z]*)[ ]*\\r?\\n(?P<code>.*?)(?P=fence)[ ]*\\r?\\n?$'"
"'\r?\n'"
"'^~~~(?P<format>\\w*)\\r?\\n(?P<txt>.*?)^~~~$'"
"'Chorus'"
"'[/]([^/]*)([/].*)?'"
"'\\s(module|primitive|macromodule)\\s+([a-zA-Z_][a-zA-Z_$0-9]*)'"
"'\\\\[0-3][0-7][0-7]'"
"'[\\\\].'"
"'()'"
"'-'"
"'[^a-z ]'"
"' +'"
"'[^a-z]'"
"'title=""Edit this page"" href=""/w/index.php\\?title=(.*)\\&amp;action=edit"" /\\>'"
"'<text.*?>(.*)</text'"
"'\\{\\{.*?\\}\\}'"
"'\\[\\[Category:.*'"
"'==\\s*[Ss]ource\\s*==.*'"
"'==\\s*[Rr]eferences\\s*==.*'"
"'==\\s*[Ee]xternal [Ll]inks\\s*==.*'"
"'==\\s*[Ee]xternal [Ll]inks and [Rr]eferences==\\s*'"
"'==\\s*[Ss]ee [Aa]lso\\s*==.*'"
"'http://[^\\s]*'"
"'\\[\\[Image:.*?\\]\\]'"
"'Image:.*?\\|'"
"'\\[\\[.*?\\|*([^\\|]*?)\\]\\]'"
"'\\&lt;.*?&gt;'"
"'([^&#=]+)=([^&#=]*)'"
"'\\d*'"
"'current_directory'"
"'.+/'"
"'\\.py$'"
"'^\\.'"
"'.*<frob>(.+)</frob>.*'"
"'.*<token>(.+)</token>.*'"
"'.*<timeline>(.*)</timeline>.*'"
"'.*<list id=""(\\d+)""><taskseries id=""(\\d+)"".*<task id=""(\\d+)""'"
"'.*/ticket/(.+)$'"
"'\n        ^               # beginning of string\n        File:\\s?        # static text\n        ([^\\s]*)        # filename\n        \\s*Status:\\s?   # static text\n        (.*)            # status\n        $               # eol\n'"
"'/\\*\\s*@cssconstants(.*?)\\*/'"
"'@define'"
"'^\\s*(\\w*)\\s*(.*?)\\s*$'"
"'rc[0-9_]{1,3}$'"
"'([a-z])'"
"'t[gx]z$'"
"'^http|^ftp'"
"'[A-Z][a-z]{2} [A-Z][a-z]{2} [0-9 ]'"
"'^\\+--'"
"'<br.?/?>'"
"'list\\.php\\?.*""'"
"'<TD><A HREF="".*"">'"
"'tag:.*\\[(.*)\\]'"
"'^.*_test.py$'"
"'^run(.*)Test$'"
"'[A-Z][a-z]+'"
"'^(?:http(?:s)?:/)?/'"
"'\\(\\?P(<\\w+>).+?\\)'"
"'\\(.*?\\)'"
"'^scale:\\d+\\-\\d+\\:$'"
"'(<form\\W[^>]*\\bmethod=(\\\'|""|)POST(\\\'|""|)\\b[^>]*>)'"
"'^(-?\\d+)(\\d{3})'"
"'^(\\d{10})$'"
"'(\\(|\\)|\\s+|-)'"
"'^(\\d{2})[-\\.]?(\\d{4})[-\\.]?(\\d{4})$'"
"'(\\(|\\)|\\s+)'"
"'[-\\.]'"
"'[-/\\.]'"
"'^(?:1-?)?(\\d{3})[-\\.]?(\\d{3})[-\\.]?(\\d{4})$'"
"'^(\\d{3})-(\\d{3})-(\\d{3})$'"
"u'^@@ -([0-9,]+) \\+([0-9,]+) @@(.*)'"
"u'^\\[(\\s+)]$'"
"u'^\\[(\\s+) ""(\\s+)""\\]$'"
"u'^(\\d+)\\W(\\w+)\\W(\\w+)[ \\t]+(.*)$'"
"u'^([0-9a-f]{40}) (.*)$'"
"u'^(?P<remote>[^/]+)/(?P<branch>.+)$'"
"'\n                ^ # beginning of line\n                ( # formatting\n                    \\x02                          # bold\n                   |\\x03[0-9]{0,2}(\\,[0-9]{1,2})? # color code (can have 0 to 2 arguments)\n                   |\\x16                          # invert color\n                   |\\x1f                          # underline\n                   |\\x0f                          # reset formatting\n                )* # or lack thereof\n                !  # the magic bang\n                (?P<command>\\S+)    # the command can be of any non-space characters\n                (\\s+(?P<args>.*))?  # arguments should be separated from command with one or more space characters\n                $ # end of line\n                '"
"'(\n                 \\x02                          # bold\n                |\\x03[0-9]{0,2}(\\,[0-9]{1,2})? # color code (can have 0 to 2 arguments)\n                |\\x16                          # invert color\n                |\\x1f                          # underline\n                |\\x0f                          # reset formatting\n               )'"
"'""GsearchResultClass"":""GwebSearch"",""unescapedUrl"":""(?P<unescapedUrl>.*?)"",""url"":""(?P<url>.*?)"",""visibleUrl"":""(?P<visibleUrl>.*?)"",""cacheUrl"":""(?P<cacheUrl>.*?)"",""title"":""(?P<title>.*?)"",""titleNoFormatting"":""(?P<titleNoFormatting>.*?)"",""content"":""(?P<content>.*?)""}'"
"'^Signed-[Oo]ff-[Bb]y: (.+)$'"
"'([^<]+) (<[^>]+>)$'"
"'^[""]([^""]+)[""]$'"
"'^([^=]+)[ ]*=[ ]*(.+)$'"
"':.*!.*PRIVMSG\\s.*\\s:\\@(.*)'"
"':(.*)!.*PRIVMSG\\s(.*)\\s:\\@(.*)'"
"'(\\w+)(.*)'"
"'[^ ]* ([^@]*) .*'"
"'[^ ,]*@[^ ,]*.[^ ,]*'"
"'D\\((.*?)\\);'"
"',{2,}'"
"'CheckCookie\\?continue=([^""\']+)'"
"'\\((\\d+?)\\)\\Z'"
"'[0-9]+$'"
"'[0-9]+x$'"
"'^%%([^:]*):[ \\t]*(.*)[ \\t]*$'"
"'^%[%!\\w]([^:]*)[ \\t]*$'"
"'#\\w\\w\\w$'"
"'#\\w\\w\\w\\w\\w\\w$'"
"'rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$'"
"'rgb\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)$'"
"'hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)$'"
"'^([A-Za-z][^:]*):[ \\t]*(.*)[ \\t]*$'"
"'([a-z]*) ([^ \\r\\n]*)'"
"'#define[ \t]+[^_]*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+[^_]*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]'"
"'""([0-9]*) ([0-9]*) ([0-9]*) ([0-9]*)'"
"'\\.\\d+\\D'"
"'(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?'"
"'(?P<prefix>[+-])(?P<hours>[0-9]{2}).(?P<minutes>[0-9]{2})'"
"'[01]+'"
"'(<.*?>)|:|,|\\.|\\(|\\)|""|\\?|!|\\+|/|(&quot;)'"
"'(\\W-)|(-\\W)'"
"'\\<form method=""post"" name=""theForm"" id=""theForm""\\>(.+)\\</form\\>'"
"'\\<input type=""hidden""\\s+name=""(.+)?""\\s+value=""(.+)""\\>'"
"u'((?:\r\n|\r|\n)+|[^\r\n]+)'"
"u'[^a-zA-Z0-9]+'"
"'\\.egg.*$'"
"'[a-zA-Z_]\\w*'"
"'[a-zA-Z0-9]+'"
"'^frugalware-'"
"'(?s)<[^>]*>|&#?\\w+;'"
"'^[A-Fa-f0-9]{40}$'"
"'((?:<(?:[-\\w]+:)?[-\\w]+(?:\\s+(?:[-\\w]+:)?[-\\w]+="".*?"")*\\s*/?>)|(?:</(?:[-\\w]+:)?[-\\w]+\\s*>))'"
"'<((?:(?:[-\\w]+:)?[-\\w]+)|(?:/(?:[-\\w]+:)?[-\\w]+))'"
"'\\s+((?:[-\\w]+:)?[-\\w]+)=""(.*?)""'"
"'\\s{2,}'"
"'^(\\w+="".*"">)?\\W*|(</\\w+>)?\\W*$'"
"'^[\\w\\-.]+( ?[\\w\\-.]+)*$'"
"'""([^""]+)""|(\\S+)'"
"'([/&?])'"
"'([-@_])'"
"'([>;])'"
"'([<\\(\\[])'"
"'([-\\\'""/.,:;_%\\)\\]>])'"
"'https?:[\\w/\\.:;+\\-~\\%#\\$?=&,()]+|www\\.[\\w/\\.:;+\\-~\\%#\\$?=&,()]+|ftp:[\\w/\\.:;+\\-~\\%#?=&,]+'"
"'[\\w\\.\\-]+@[\\w\\.\\-]+'"
"'((?:<(?:[-\\w]+:)?[-\\w]+(?:\\s+(?:[-\\w]+:)?[-\\w]+="".*?"")*\\s*/?>)|(?:</(?:[-\\w]+:)?[-\\w]+\\s*>)|(?:&\\w+;))'"
"""(%\n                            (?:\\d+\\$)?                  # repeated references\n                            [#0\\-+'I]*                 # flags\n                            (?:                         # field width\n                                (?:[1-9][0-9]*)|\n                                (?:\n                                    \\*[0-9]+\\$|\n                                    \\*\n                                )\n                            )?\n                            (?:\\.                       # precision\n                                (?:\n                                    [0-9]*|\n                                    \\*[0-9]+\\$|\n                                    \\*\n                                )?\n                            )?\n                            (?:hh|h|l|ll|j|z|L|q|t)?    # length modifier\n                            [cCdiouxXeEfFgGaAsSpnm%@]   # conversion\n                           )"""
"'(%\n                                   (?:\\(\\w+\\))?             # key\n                                   [#0\\-+ ]*                # flags\n                                   (?:                      # field width\n                                        (?:[1-9][0-9]*)|\n                                        \\*\n                                    )?\n                                   (?:\\.                    # precision\n                                        (?:\n                                            [0-9]+|\n                                            \\*\n                                        )\n                                   )?\n                                   (?:h|l|L)?               # length modifier\n                                   [diouxXeEfFgGcrs%]       # conversion\n                                  )'"
"'({\n                                    (?:                                     # field_name\n                                        (?:                                     # arg_name\n                                            (?:[a-zA-Z_][a-zA-Z0-9_]*)|             # identifier\n                                            (?:                                     # integer\n                                                (?:(?:[1-9][0-9]*)|0)|                  # decimalinteger\n                                                (?:0[oO]?[0-7]+)|                       # octinteger\n                                                (?:0[xX][0-9a-fA-F]+)|                  # hexinteger\n                                                (?:0[bB][01]+)                          # bininteger\n                                            )\n                                        )\n                                        (?:\n                                            (?:\\.                               # attribute_name\n                                                (?:[a-zA-Z_][a-zA-Z0-9_]*)          # identifier\n                                            )|\n                                            (?:\\[                               # element_index\n                                                (?:                                     # integer\n                                                    (?:(?:[1-9][0-9]*)|0)|                  # decimalinteger\n                                                    (?:0[oO]?[0-7]+)|                       # octinteger\n                                                    (?:0[xX][0-9a-fA-F]+)|                  # hexinteger\n                                                    (?:0[bB][01]+)                          # bininteger\n                                                )|\n                                                [^\\]]+                                  # index_string\n                                            \\])\n                                        )*\n                                    )?\n                                    (?:!(?:r|s))?                           # conversion\n                                    (?:\\:                                   # format_spec\n                                        (?:[^}]?[<>=^])?                    # [[fill]align]\n                                        [+\\- ]?                             # [sign]\n                                        [#]?                                # [#]\n                                        [0]?                                # [0]\n                                        (?:                                 # width\n                                            (?:                                 # integer\n                                                (?:(?:[1-9][0-9]*)|0)|              # decimalinteger\n                                                (?:0[oO]?[0-7]+)|                   # octinteger\n                                                (?:0[xX][0-9a-fA-F]+)|              # hexinteger\n                                                (?:0[bB][01]+)                      # bininteger\n                                            )\n                                        )?\n                                        [,]?                                # [,]\n                                        (?:\\.                               # precision\n                                            (?:                                 # integer\n                                                (?:(?:[1-9][0-9]*)|0)|              # decimalinteger\n                                                (?:0[oO]?[0-7]+)|                   # octinteger\n                                                (?:0[xX][0-9a-fA-F]+)|              # hexinteger\n                                                (?:0[bB][01]+)                      # bininteger\n                                            )\n                                        )?\n                                        [bcdeEfFgGnosxX%]?                  # type\n                                    )?\n                                    })'"
"'\\$\n                                    (?:\n                                        (?:[0-9]+)|                     # digits\n                                        (?:[a-zA-Z_][a-zA-Z0-9_]*)|     # chars and digits\n                                        (?:{[a-zA-Z_][a-zA-Z0-9_]*})|   # chars and digits bracketed\n                                        (?:[*@#?\\-$!])|                 # special parameters\n                                        (?:{[*@#?\\-$!]})                # chars and digits bracketed\n                                    )\n                                '"
"'\\[\n                                        [A-Z]           # first letter uppercase\n                                        [a-z]           # second letter lowercase\n                                        [A-Za-z0-9_]*   # optional letters and digits\n                                     \\]'"
"'<\\#\n                                        [A-Z]           # first letter uppercase\n                                        [a-z]           # second letter lowercase\n                                        [A-Za-z0-9_]*   # optional letters and digits\n                                      \\#>'"
"'\\[[0-9]+\\]'"
"'%[0-9]+'"
"'\\[%[0-9]+\\]'"
"':[A-Z]{2,}'"
"'{\\\\[a-zA-Z0-9]+[^}]*}'"
"'[-+]?[0-9]*\\.?[0-9]+'"
"""(\n#                         (?:\\w+(?:[-'_.]\\w+)*[']?)|     # alphanumeric plus special chars\n                         \\w+                            # alphanumeric characters\n                         )"""
"'(\n                          [ ]+           # whitespace characters\n                          )'"
"'([ ]{2,})|(^[ ]+)|([ ]+$)'"
"'(\n                                      [\\n\\t\\r\\v\\f]+           # whitespace characters\n                                      )'"
"'^[0-9a-f]{32}[0-9a-f]{32}?$'"
"'[\'""\\w]+'"
"'(associated|association) with \\[\\[([^\\]]+)\\]\\]'"
"'\\[PMID (\\d+)\\]'"
"'{{ ?[Rr]snum ?[\\r\\n]*([\\S\\s]*)[\\r\\n]*}}'"
"'\\| ?rsid ?= ?(\\d+)'"
"'\\| ?[Cc]hromosome ?= ?(.*)'"
"'\\| ?position ?= ?(\\d+)'"
"'\\| ?geno1 ?= ?\\(([ACGT]+);([ACGT]+)\\)'"
"'\\| ?geno2 ?= ?\\(([ACGT]+);([ACGT]+)\\)'"
"'\\| ?geno3 ?= ?\\(([ACGT]+);([ACGT]+)\\)'"
"'\\| ?effect1 ?= ?(.*)'"
"'\\| ?effect2 ?= ?(.*)'"
"'\\| ?effect3 ?= ?(.*)'"
"'(?<![a-z?!/\'""-])>'"
"'<(/)?(pre|code|kbd|script|math)[^>]*>'"
"'@@ (.+?)\\r\\n(.+?)\\r\\n@@ end'"
"'(.+?)(@@.+?@@ end|$)'"
"'.*\\.svn*'"
"'__.*__'"
"'\\${[^\\{^\\}]*}'"
"'(\\${[^\\{^\\}]*})'"
"'\\$\\{[^\\}]*\\}|[^\\$^\\{^\\}]+'"
"'.*.cfg$'"
"'.*.tar.gz'"
"'.*.cfg'"
"'([^:]*):([^:]*):?(.*)'"
"' '"
"'^test'"
"'([a-z0-9])([A-Z])'"
"'\\A\\w\\w(-\\w\\w)?\\Z'"
"'^/r/([^/]{2,})'"
"'\\.([^/]+)\\Z'"
"'[\r\n]'"
"'[\r\n]+[ \t]*'"
"'[?\\\\&|!{}+~^()""\\\':*-]+'"
"'\\A[a-z][a-z](,[a-z][a-z])*\\Z'"
"'\\A(\\w[-\\w]*\\.)+[\\w]+\\Z'"
"'\\A([a-fA-F0-9]){3}(([a-fA-F0-9]){3})?\\Z'"
"'AppEngine-Google; \\(\\+http://code.google.com/appengine; appid: (?:dev|s)~([a-z0-9-]{6,30})\\)\\Z'"
"'\\A/r/[a-zA-Z0-9_-]+'"
"'\\A/s/'"
"'\\A/+'"
"'\\A[a-zA-Z_-]+:'"
"'\\Ahttps?:'"
"'\\Ahttps?:/[^/]'"
"u'[\x00-\x08\x0b\x0c\x0e-\x1f\ud800-\udfff\ufffe\uffff]'"
"'""([^""]+)""'"
"'\\A%%([a-zA-Z0-9\\-]+)%%\\Z'"
"'\\A%%([a-zA-Z0-9\\-]+)%%$'"
"'> +'"
"' +<'"
"'[^\\w.-]'"
"'^h[1-6]$'"
"'(.*)-GET_listing'"
"'(?<!%)%\\w|(?<!%)%\\(\\w+\\)[^s]'"
"'background-image: *url\\((.*)\\) *.*/\\* *SPRITE *(stretch-x)? *\\*/'"
"'<\\$>(.+?)(?:<|$)'"
"'/r/(\\w+)'"
"'<cardNumber>\\d+(\\d{4})</cardNumber>'"
"'<cardCode>\\d+</cardCode>'"
"'<([^/]+)/>'"
"'A duplicate record with ID (\\d+) already exists'"
"'/promoted.*'"
"'[a-z]+[a-z_0-9]+'"
"'^https?://'"
"'[A-Z]'"
"location.regexp"
"'PHPSESSID\\=[a-z0-9]*'"
"'^(.*?) (.*?) (.*?) \\[(.*?)\\] \\""(.*?)\\"" (.*?) (.*?) \\""(.*?)\\"" \\""(.*?)\\""$'"
"'^(\\w*?) (.*?) (.*?)$'"
"'^/users/0*(\\d+)'"
"'u=0*(\\d+)'"
"'usernum=0*(\\d+)'"
"'(.*)\\/'"
"','"
"'(http://[^\\r\\n \\""\\<]+)'"
"'_\\(("""""".*?"""""")\\)'"
"""_\\(('.*?')\\)"""
"'_\\((""[^""].*?"")\\)'"
"'^/users/(\\d+)'"
"'Authorization: ([^ ]+) (.*)'"
"'/users/([0-9]+)'"
"'\\&'"
"'^(.*?)\\=(.*)$'"
"'^(.*?)\\: (.*)$'"
"'; '"
"'(.*?)=(.*)'"
"'^/system/'"
"'\\.\\.'"
"'Host: (.*)'"
"'http://([^/]+)(/.*)'"
"'R=(\\d+)'"
"'H(.*?)=(.*)'"
"'^http://127\\.0\\.0\\.1:\\d+/'"
"'^http://localhost:\\d+/'"
"'[A-Za-z0-9\\_\\-\\.\\/]'"
"'href=""([^""]+)""'"
"'^create\\s+circuit\\s+(\\w+)$'"
"'^delete$'"
"'^evaluate(\\s+\\w+\\s+[01])+$'"
"'(\\w+)\\s+([01])'"
"'^add\\s+gate\\s+(AND|NOT|OR|NAND|NOR)\\s+(\\w+)$'"
"'^add\\s+line\\s+(\\w+)\\s+START\\s+(\\w+)\\s+(o1|0)\\s+END\\s+(\\w+)\\s+(i1|i2|0)$'"
"'^list$'"
"'^quit$'"
"'^switch\\s+gate\\s+(\\w+)\\s+(AND|NOT|OR|NAND|NOR)$'"
"u'images/shosai_tl_new\\.gif'"
"u'>\u30b5\u30fc\u30af\u30eb</td>'"
"u'>\u767b\u9332\u65e5</td>'"
"u'<div.+>(.+)</div>'"
"u'<a.+>(.+)</a>'"
"u'>(.+)</td>'"
"u'^(?:\n(?P<addr>\n    (?P<ipv4>\\d{1,3}(?:\\.\\d{1,3}){3}) |         # IPv4 address\n    (?P<ipv6>\\[[a-fA-F0-9:]+\\]) |               # IPv6 address\n    (?P<fqdn>[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*) # FQDN\n):)?(?P<port>\\d+)$'"
"""^\\s+tree_name\\s*=\\s*'(.*)'\\s*$"""
"'^\\s+def\\s+([a-zA-Z0-9_]+)\\(.*\\):\\s*$'"
"'[\\w\\d\\.\\-\\+]+@[\\w\\d\\.\\-\\+]+\\.[\\w\\d\\.\\-\\+]+'"
"'@(\\w+)'"
"'[^]]+?\\] +([0-9.]+): (\\w+) <-(\\w+)'"
"'struct target_core_fabric_ops {'"
"'\\(\\*'"
"'get_fabric_name'"
"'get_fabric_proto_ident'"
"'get_wwn'"
"'get_tag'"
"'get_default_depth'"
"'get_pr_transport_id\\)\\('"
"'get_pr_transport_id_len\\)\\('"
"'parse_pr_out_transport_id\\)\\('"
"'alloc_fabric_acl\\)\\('"
"'release_fabric_acl\\)\\('"
"'tpg_get_inst_index\\)\\('"
"'release_cmd_to_pool'"
"'shutdown_session\\)\\('"
"'close_session\\)\\('"
"'stop_session\\)\\('"
"'fall_back_to_erl0\\)\\('"
"'sess_logged_in\\)\\('"
"'sess_get_index\\)\\('"
"'write_pending\\)\\('"
"'write_pending_status\\)\\('"
"'set_default_node_attributes\\)\\('"
"'get_task_tag\\)\\('"
"'get_cmd_state\\)\\('"
"'new_cmd_failure\\)\\('"
"'queue_data_in\\)\\('"
"'queue_status\\)\\('"
"'queue_tm_rsp\\)\\('"
"'get_fabric_sense_len\\)\\('"
"'set_fabric_sense_len\\)\\('"
"'is_state_remove\\)\\('"
"'pack_lun\\)\\('"
"'(.*?) as (\\w+)'"
"'Ran (\\d*) test'"
"'\\((\\S)\\)'"
"'failures=(\\d*)'"
"'errors=(\\d*)'"
"u'^[+-]?(?:\\d+)?\\.\\d*$'"
"u'^[+-]?[01]+$'"
"u'^[+-]?[0-7]+$'"
"u'^[+-]?\\d+$'"
"u'^[+-]?[\\da-z]+$'"
"u'^([+-]?\\d+)\\/(\\d+)$'"
"u'^[^\\s()]+'"
"u'\\s+'"
"'^(ftp|http)_([0-9]{3})$'"
"'(?ims).*<\\s*(!DOCTYPE html|html|head|title|body)'"
"'\\+?(-?[0-9.]+)[%]?'"
"'([^ ]+)%([^ ]*)@([^ ]+):([^ ]+)'"
"'InnoDB free: ([0-9]+) kB'"
"'([0-9.]+)'"
"'(\\d+).'"
"'.+/(.+)'"
"'(\\S+) \\S+ \\S+ \\[[^\\]]+\\] ""[^""]+"" (\\d+) (\\d+|-)'"
"'\\S+:\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)'"
"'\\S+:\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)'"
"'\\S+ \\d+ \\S+ (\\S+) (\\S+): (.*)'"
"'[0-9A-F]+: client=(\\S+)'"
"'([0-9A-F]+: )?reject: '"
"'[0-9A-F]+: (?:reject|discard): '"
"' size=(\\d+)'"
"'(\\d+) (\\d+) (0[xX][\\dA-Fa-f]+) (\\S+)'"
"'[\\w\\s\\-]+'"
"'[\\s_\\-]+'"
"'\\b([A-Z]\\w+[A-Z]+\\w+)'"
"'<([a-zA-Z]+[0-9]?) ([^/>]*)(/?)>'"
"'</?span[^>]*>'"
"'</?div[^>]*>'"
"'<([a-zA-Z]+)>\\s*</\\1>'"
"'(\\n\\s*){3,}'"
"'<([wo]:[a-zA-Z]+)( [^>]+)?>.*</\\1>'"
"'<([wo]:[a-zA-Z]+)( [^>]+)?/>'"
"'\\s*style\\s*=\\s*[\\\'""][^\\\'""]+[\\\'""]\\s*'"
"'^(\\-|)[0-9]+$'"
"'^set\\s+([^\\=]+)\\s*\\=\\s*(.+)$'"
"'[^(href="")](http|https|ftp)(:\\/\\/[^\\s]*)'"
"'(?i)%2F'"
"'http://(?:www.)?openaustralia.org/[^\\s[\\]]+'"
"'[ \t]+'"
"'[\t ]+'"
"'(.+?):\\s*(.+?)(;|$)\\s*'"
"'Progress report (\\d+)/(\\d+) completed'"
"u'\\t+'"
"'[1379]+'"
"'1.2.3.4.5.6.7.8.9'"
"'^'"
"'\\$\\(([^)]+)\\)'"
"u'(\u0109|k|nen|t)i(a|e|o|u|om)'"
"',\\s*$'"
"'[\\[\\]]'"
"'(?<=\\[size=)[\\d]*(?=\\])'"
"'[a-zA-Z][a-zA-Z0-9_]*'"
"'^(\\w+)(?:\\s+(.*?))?:\\s*(#|$)'"
"'decode\\..+'"
"'(.+?)(\\(.*\\))'"
"'\\s*# SOURCE LINE (\\d+)'"
"'([&<""\\\'>])'"
"'\\A[\\x00-\\x7f]*\\Z'"
"'[""&<>]|[^\\x00-\\x7f]'"
"'& (?:\n                                          \\#(\\d+)\n                                          | \\#x([\\da-f]+)\n                                          | ( (?!\\d) [:\\w] [-.:\\w]+ )\n                                          ) ;'"
"'.+SPHEROID\\[\\""(?P<name>.+)\\"",(?P<major>\\d+(\\.\\d+)?),(?P<flattening>\\d{3}\\.\\d+),'"
"'.+UNIT ?\\[""(?P<unit_name>[\\w \\\'\\(\\)]+)"", ?(?P<unit>[\\d\\.]+)(,AUTHORITY\\[""(?P<unit_auth_name>[\\w \\\'\\(\\)]+)"",""(?P<unit_auth_val>\\d+)""\\])?\\]([\\w ]+)?(,AUTHORITY\\[""(?P<auth_name>[\\w \\\'\\(\\)]+)"",""(?P<auth_val>\\d+)""\\])?\\]$'"
"'^createdb: database creation failed: ERROR:  database "".+"" already exists'"
"'^(?P<major>\\d)\\.(?P<minor1>\\d)\\.(?P<minor2>\\d+)'"
"'^[012TF\\*]{9}$'"
"'^[0-9A-F]+$'"
"'^(?P<type>POINT|LINESTRING|LINEARRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)[ACEGIMLONPSRUTY\\d,\\.\\-\\(\\) ]+$'"
"'^\\{[\\s\\w,\\-\\.\\""\\\'\\:\\[\\]]+\\}$'"
"'^(EPSG:)?(?P<epsg>\\d+)$'"
"'^\\+proj'"
"'^(SRID=(?P<srid>\\d+);)?(?P<wkt>(POINT|LINESTRING|LINEARRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)[ACEGIMLONPSRUTY\\d,\\.\\-\\(\\) ]+)$'"
"'^\\{.+\\}$'"
"'^(?P<version>\\d+\\.\\d+\\.\\d+)(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$'"
"'^(?P<type>[A-Z]+) ?\\('"
"'<gml:Point srsName=""SDO:4326"" xmlns:gml=""http://www.opengis.net/gml""><gml:coordinates decimal=""\\."" cs="","" ts="" "">-104.60925199\\d+,38.25500\\d+ </gml:coordinates></gml:Point>'"
"'^(?P<w>\\d\\d?\\d?)\\.(?P<x>\\d\\d?\\d?)\\.(?P<y>\\d\\d?\\d?)\\.(?P<z>\\d\\d?\\d?)$'"
"'^GEO-\\d{3}FREE'"
"'^GEO-\\d{3}LITE'"
"p.regex"
"'([^ ]+) => not found'"
"'([^ /]+) => ([^ ]*) \\((0x[0-9A-Fa-f]+)\\)'"
"'(/[^ ]+) \\((0x[0-9A-Fa-f]+)\\)'"
"'now$'"
"'today$'"
"'yesterday$'"
"'tomorrow$'"
"'([-+]\\s*\\d+(?:\\.\\d+)?)\\s*(s|m|h|d|w|y)\\w*$'"
"'(\\d+(?:\\.\\d+)?)\\s*(s|m|h|d|w|y)\\w* ago$'"
"'last (s|m|h|d|w|y)\\w*$'"
"'next (s|m|h|d|w|y)\\w*$'"
"'\\s*:\\s*'"
"'\\s*=\\s*'"
"'\\$\\(([^\\):]+)(\\:[^\\)]+)?\\)'"
"'Created ((\\d+)[/-]\\d+[/-]\\d+)'"
"'^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?'"
"'[a-zA-Z_][a-zA-Z0-9_]*'"
"'(\\.(?P<microseconds>\\d+))?(?P<timezone>(\\+|-)\\d\\d)?'"
"'\\[[a-zA-Z0-9:_\\. -]*\\]\\s*'"
"'[^ -]+'"
"'"".+?""'"
"'[a-z_]+'"
"'\\$\\{([A-Za-z_0-9]+)\\}'"
"'\\$str\\{([A-Za-z_0-9]+)\\}'"
"'version\\s*=\\s*""([0-9.]+)""'"
"'lmem = ([0-9]+)'"
"'smem = ([0-9]+)'"
"'reg = ([0-9]+)'"
"'^\\\\usepackage(\\[.*\\])?\\{(\\w+)\\}'"
"'^\\\\(input|include)\\{(.*)\\}'"
"'.aux$'"
"'([^%]|^)\\\\makeindex(\\[([\\w]+)\\])?'"
"'((^|\\n)[^%]*?)(\\\\input|\\\\include)\\{([\\w /\\.\\-]+)\\}'"
"'((^|\\n)[^%]*?)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w,\\-]+)\\}'"
"'^%!TEX\\s+([\\w-]+)\\s?=\\s?(.*)'"
"'([`$\\\\""])'"
"'I found no \\\\\\w+ command'"
"""I couldn't open style file"""
"'This is BibTeX'"
"'The style'"
"'Database'"
"'LaTeX Warning:.*?input line (\\d+)(\\.|$)'"
"'^([^:]*):(\\d+):\\s+(pdfTeX warning.*)'"
"'.*pdfTeX warning.*'"
"'LaTeX Font Warning:.*'"
"'Overfull.*wide'"
"'Underfull.*badness'"
"'([^:]*):(\\d+): LaTeX Error:(.*)'"
"'([^:]*):(\\d+): (Emergency stop)'"
"'Runaway argument'"
"'Transcript written on (.*)\\.$'"
"'^Error: pdflatex'"
"'\\!.*'"
"'^\\s+==>'"
"'[Ee]rror'"
"'^ ==> Fatal error occurred'"
"'This is (pdfTeXk|latex2e|latex|XeTeXk)'"
"'^Latexmk: All targets \\(.*?\\) are up-to-date'"
"'This is makeindex'"
"'^Latexmk'"
"'^ChkTeX'"
"'Warning \\d+ in (.*.tex) line (\\d+):(.*)'"
"'Error \\d+ in (.*.tex) line (\\d+):(.*)'"
"'&#([xX]?[0-9a-fA-F]+)[^0-9a-fA-F]'"
"'&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));'"
"'^(.*?\\.pyc?):(\\d+):\\s+(.*)$'"
"'^pylint\\s*'"
"',$'"
"'[^a-zA-Z0-9_\\. ]+'"
"'^\\s*(:(?P<role>\\w+):`(?P<name>[a-zA-Z0-9_.-]+)`| (?P<name2>[a-zA-Z0-9_.-]+))\\s*'"
"'^([\\w., ]+=)?\\s*[\\w\\.]+\\(.*\\)$'"
"'.. \\[([a-z0-9._-]+)\\]'"
"'^\\s*[#*=]{4,}\\n[a-z0-9 -]+\\n[#*=]{4,}\\s*'"
"'^.. \\[([a-z0-9_.-])\\]'"
"'^[^(]*'"
"'^(.*\\s+)?(.*?)(\\(.*)?'"
"'^\\s*>>>'"
"'^\\s*(>>>|\\.\\.\\.) (.*)$'"
"'vector<(.*)>'"
"'-O[^ ]*'"
"'happyReduction_(\\d+)([_ ]*)= notHappyAtAll'"
"'notHappyAtAll = error ""Internal Happy error\\n""'"
"'[\\x00-\\x20]'"
"'[\\w\\-][\\w\\-\\.]+@[\\w\\-][\\w\\-\\.]+[a-zA-Z]{1,4}'"
"'( {1,100})'"
"'[^a-z\\-]'"
"'(-{2,50})'"
"'\\.\\w+'"
"'\n    (?isx)              # case-insensitive, multiline, verbose regexp\n    </?B> |             # bold\n    </?I> |             # italics\n    </?P.*?> |          # paragraph (alignment)\n    <A .+?> |           # anchors (links)\n    </A> |              # anchor close\n    </?OL> |            # ordered lists (numbered)\n    </?UL> |            # unordered lists (bulleted)\n    <LI> |              # list elements\n    </?EM> |            # emphasis\n    <BR> |              # link breaks\n    <HR> |              # horizontal rules\n    </?TT> |            # teletype font\n    </?STRONG> |        # strong emphasis\n    </?BLOCKQUOTE.*?> | # block quotes\n    </?ADDRESS> |       # addresses\n    </?H[1-6]>          # heading markers\n    '"
"'(?is)<.+?>'"
"'(?is)(<A .*?HREF="")(.+?)("".*?>)'"
"'([^\\-a-zA-Z0-9_]+)'"
"'[^a-z0-9\\-]'"
"'(\\s)'"
"'(\\d+|[^\\W\\d_]+)'"
"'(?P<title>.*)\\((?P<desc>disc (?P<number>\\d+).*)\\)'"
"'\\s+-\\s+'"
"'Mus: ([0-9]+)'"
"'Mys: ([0-9]+)'"
"'Mox: ([0-9]+)'"
"'Intrinsic Effect: ""([^""]+)""'"
"'Class: ""([^""]+)""'"
"'(?m)^((content|skin|locale).*\\s+)(\\S+/)(.*)$'"
"'^([^@]*@)?([^:]*)(:.*)?'"
"'%([0-9A-Fa-f]{2})'"
"'(author|committer) (?P<ident>.*) (?P<epoch>\\d+) (?P<tz>[+-]\\d{4})'"
"'^(.{40})\trefs/([^^]+)(?:\\^(..))?$'"
"'([\\x00-\\x7F])+'"
"'([A-Za-z])+'"
"'[\\x80-\\xFF]'"
"'(\\033|~{)'"
"'^""Throughput'"
"'^iozone test complete'"
"'^""Record size'"
"'^""Output is'"
"'^""CPU utilization'"
"'^""CPU'"
"'^set'"
"'^blkdevs'"
"'^blkdev:'"
"'^scheduler:'"
"'\\ +'"
"'^[0-9]'"
"'^\\('"
"'^RX bytes'"
"'^avg-cpu'"
"'^Device:'"
"'[\\/][^\\/]+[\\/]?$'"
"'sizeof\\(ParsedStr\\)=(\\d+)'"
"'^[a-foilsz]+$'"
"'[^\\w-]'"
"'^\\s*""\\s*(?P<arg0>[^""]+)\\s*""'"
"'^\\s*(?P<arg0>[^ ]+)'"
"'""([^ ]+?)""'"
"'\\A<\\?xml.* encoding=""(.*?)""'"
"'^//\\s*a2x:'"
"'[0-9]{4}-[0-9]{2}-[0-9]{2}'"
"'[0-9]{2}:[0-9]{2}:[0-9]{2}'"
"'as (\\w+)'"
"u'[\u201c\u201d,\\.!?;:\'""\\(\\)\\{\\}\\[\\]]+'"
"'@([A-Za-z0-9_]+)'"
"'(\\$\\{|\\})'"
"'\\.chm$'"
"'ISBN'"
"'\\.pdf$'"
"'\\.pdf'"
"'\\.chm'"
"'^.*?ISBN.*?$'"
"""\\'"""
"'\\('"
"'\\)'"
"'Slides download?'"
"""setvideo\\(\\'[\\d]\\'\\)"""
"'Description'"
"'Launch'"
"'^/.*/$'"
"'[<>\'""]'"
"'url\\s*\\(\\s*[^\\s)]+?\\s*\\)\\s*'"
"'^([:,;#%.\\sa-zA-Z0-9!]|\\w-\\w|\'[\\s\\w]+\'|""[\\s\\w]+""|\\([\\d,\\s]+\\))*$'"
"'^(\\s*[-\\w]+\\s*:\\s*[^:;]*(;|$))*$'"
"'([-\\w]+)\\s*:\\s*([^:;]*)'"
"'<option[^>]*value=""(.*?)"">(.*?)</option>'"
"'^([cku]?)x(.*)'"
"'(.*?\\+.*?)x(.*?)'"
"'.*\\((.+)\\)\r?$'"
"':(\\d+) (\\d+) (\\w+) (\\w+) ([A-Z])(\\d+)?\t(.*?)((\t(.*))|$)'"
"'^ *\\[git-p4: (.*)\\]$'"
"'[*#@%]'"
"'^Jobs:'"
"'[^a-z0-9]'"
"'[^ACGTURYMKSWBDHVN]'"
"'[,;]'"
"'^http'"
"'.url[s]?'"
"'^http[s]?://([^/]+)'"
"'\\.url'"
"'urlphrases/'"
"'(http[s]?://[^/]+/)(.*)'"
"'<p>(.*?)</p>'"
"'<([\\w\\s]+) at 0x\\w+>'"
"'\\s*#'"
"'[^a-z0-9_.+-]'"
"'^[a-z0-9.-]+([+][a-z0-9.-]+)?@([a-z0-9-]+[.])+[a-z0-9]+$'"
"opts.ignore_author"
"'^Folder: (\\w*)  \\(working dir: (.*)\\)$'"
"'^History for: (.*)$'"
"'^Author: (.*) Date: (.*) \\w+$'"
"'(\\d{4})\\-(\\d\\d)\\-(\\d\\d) (.*) (<|\\()'"
"'(\\w{3} .* \\d{4}) (.*) (<|\\()'"
"'\\*\\s([\\w\\./\\-_]*):?'"
"'[A-Za-z ]+ (\\d\\d\\d\\d)$'"
"'^depotFile'"
"'.*date\\s*=\\s*(\\\'|\\"")(\\d+)(\\\'|\\"").*'"
"'((ftp|http|https):\\/\\/[a-zA-Z0-9\\/\\\\:\\?\\%\\.\\&\\;=#\\-\\_\\!\\+\\~]*)'"
"'(www\\.[a-zA-Z0-9\\/\\\\:\\?\\%\\.\\&\\;=#\\-\\_\\!\\+\\~]*)'"
"False"
"'DECOR'"
"'^/'"
"'(.+?)'"
"'^\\s*Content-Length\\s*:\\s*([0-9]+)'"
"'^\\s*Content-Encoding\\s*:(.*)\r\n'"
"'^\\s*Content-Type\\s*:(.*)\r\n'"
"'\\s*charset=([\\w\\d_-]+)'"
"'^\\s*Location\\s*:(.*)\r\n'"
"'^\\s*Set-Cookie\\s*:(.*)\r\n'"
"'^\\s*Transfer-Encoding\\s*:\\s*chunked\\s*\r\n'"
"'<(form|input|select|option|textarea)'"
"'</?((\\w+:)?\\w+)'"
"'/?>'"
"'<[^<]+(href|src|url)\\s*=\\s*(\'[^\']*\'|""[^""]*""|[^ >]*)'"
"'class\\s*=\\s*[\'""]?([\\w\\-_\\d]+)'"
"'id\\s*=\\s*[\'""]?([\\w\\-_\\d]+)'"
"'href\\s*=\\s*(\'[^\']*\'|""[^""]*""|[^ ]*)'"
"'^(?P<name>(\\w+:)?[\\w\\d_\\-]+)?(?P<id>#[\\w\\d_\\-]+)?(?P<class>\\.[\\w\\d_\\-]+)?(?P<property>\\:[\\w\\d\\-]+)?(?P<count>\\[\\-?\\d+\\])?$'"
"'(?P<descriptor>\\w+\\|)(?P<subnet>\\d*\\.{0,1}\\d*\\.{0,1}\\d*\\|)(?P<host>\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\|)(?P<service>(\\W|\\w)+\\/)(?P<protocol>\\w{0,4}\\){0,1}\\|)(?P<pluginid>\\d*\\|)(?P<note>.*\\|)(?P<description>.*$)'"
"'(?P<descriptor>\\w+\\|)(?P<subnet>\\d*\\.{0,1}\\d*\\.{0,1}\\d*\\|)(?P<host>\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\|)(?P<service>(\\W|\\w)+\\/)(?P<protocol>\\w{0,4}\\)*)'"
"'(?P<descriptor>\\w+\\|)(?P<blank>\\|)(?P<host>\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\.{0,1}\\d{0,3}\\|)(?P<status>.{0,15}\\|)(?P<datetime>\\w{3}\\s\\w{3}\\s{1,2}\\d{1,2}\\s\\d{2}:\\d{2}:\\d{2}\\s\\d{4}\\|$)'"
"'(?P<cve>CVE-\\d{4}-\\d{4})'"
"'^[A-Z]'"
"'/ticketgraph(?:_trac)?(?:/.*)?$'"
"'\x03([a-zA-Z][a-zA-Z]?)\x03(.*?)(?=(?:\x03|$))'"
"'%%(.+?)%%'"
"'\\b(.+?)\\b'"
"'cam\\d'"
"'/obj/'"
"'Parse err'"
"'TODO'"
"'^\\s*!'"
"'^\\s*([-_a-zA-Z0-9?.*]+)\\s*:\\s*(.*)$'"
"'\\\\([ \tn\\\\]|[0-7]{3,3})'"
"'([.*]+)'"
"'^([-a-zA-Z0-9._/]*):([0-9]+)(\\.([0-9]+))?$'"
"'^([-a-zA-Z0-9._]*):([0-9]+)(\\.([0-9]+))?$'"
"'\\Argb:([0-9a-fA-F]{1,4})/([0-9a-fA-F]{1,4})/([0-9a-fA-F]{1,4})\\Z'"
"'\\A#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])\\Z'"
"'\\A#([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])\\Z'"
"'\\A#([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])\\Z'"
"'\\A#([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])\\Z'"
"'^[ \t]*'"
"'/{2,}'"
"'\\s*[\\n\\r]+'"
"'#.*?$'"
"'OpenLayers.Class\\((.*?){'"
"'collabot'"
"'(?P<year>\\d\\d\\d\\d)(?:-(?P<month>\\d\\d)(?:-(?P<day>\\d\\d)(?:T(?P<hour>\\d\\d)(?::(?P<minute>\\d\\d)(?::(?P<second>\\d\\d))?)?)?)?)?Z$'"
"'node/(\\d+)'"
"'(%25|%)(\\d\\d)'"
"'https?://[^/]*(/.*reset/\\S*)'"
"'^\\d{4} \\d{6}'"
""".*adding new server URL to database \\'(.*)\\': (.*)"""
"'""http.*""'"
"'tt[0-9]*$'"
"'[-/]20[0-9]'"
"'[-/]19[789][0-9]'"
"'(?:e7-)?(.*?)[^A-Za-z0-9] *-? *[Ss]? *([0-9][0-9])[Eex]([0-9]+).*\\.([^.]+)$'"
"'^the[^a-z]'"
"'[^A-Za-z0-9]'"
"' *((?P<hours>\\d+) *h(ours?)?)? *((?P<minutes>\\d+) *m(inutes?)?)? *'"
"'[\\x00-\\x1f\\\\""\\b\\f\\n\\r\\t]'"
"'([\\\\""]|[^\\ -~])'"
"':([^/]+)'"
"'[sxz]$'"
"'[^aeioudgkprt]h$'"
"'[^aeiou]y$'"
"'y$'"
"'module (.*) where'"
"'[.]lhs:(\\d+):(\\d+):'"
"'\\{[^\\}]+\\}'"
"'File ""(.+)"",'"
"', line\\s(\\d+),'"
"', in ([A-Za-z]+)'"
"'<(.+)>'"
"'\\(.*\\)'"
"'Book #[\\d]'"
"'^bookinfo_section_line'"
"'(\\$\\S+\\))'"
"'\\s*'"
"'t*'"
"'\\${.*}'"
"'^s'"
"'^r'"
"'^d'"
"'^t'"
"'-t ([0-9.]*)'"
"'-Ni (\\d+)'"
"'-Nx (\\d+) -Ny (\\d+) -Nz (\\d+)'"
"'-Ne (-[0-9.]*)'"
"'-Nl ([A-Z]+)'"
"'-Nw ([A-Z]+)'"
"'-Is (\\d+).(\\d+)'"
"'-Id (\\d+).(\\d+)'"
"'-It ([a-z]+)'"
"'-Il (\\d+)'"
"'-If (\\d+)'"
"'-Ii (\\d+)'"
"'-Iv (\\d+)'"
"'-Hs (\\d+)'"
"'-Hd (\\d+)'"
"'-Ma (\\d+)'"
"'-Md (\\w+)'"
"'-Ms (\\w+)'"
"'-Mt (\\d+)'"
"'-Pn (\\w+)'"
"'-Pi (\\d+)'"
"'-Pf (\\d+)'"
"'-Po (\\d+)'"
"'-Nl AGT'"
"'-Nl RTR'"
"'-Nl MAC'"
"'-P arp'"
"'-P dsr'"
"'-P cbr'"
"'-P tcp'"
"'-Pn arp'"
"'-Pn dsr'"
"'-Pn cbr'"
"'-Pn tcp'"
"'<\\?.*\\?>\\n'"
"'^###.*'"
"'^[ \\t]*$'"
"'[^\\t]*=[^\\t]*'"
"'([^\\t]+)\\t([^\\t]+)\\t([^t]+)(\\t.*)?$'"
"' *[^\\s]+ *\\t *[^\\s]+ *$'"
"' *([^\\s]+) *\\t *([\\x00-\\xff]{3}) *\\t *[^\\s]+ *$'"
"'^#.*'"
"'(.*)\\t(.*)\\t(.*)'"
"'[a-z]+[1-5]'"
"'(.*)\\t(.*)'"
"'.*\\.bz2'"
"'(.*)###(.*)###(.*)'"
"'(.*)@@@(.*)'"
"'c([ea])(\\d):(.*)'"
"'p(-{0,1}\\d)(-{0,1}\\d)'"
"'.*\\((.*)\\)'"
"'%\\(()\\)s'"
"'http[s]?://(?:www.)?escapistmagazine.com/videos/view/.+?/([\\d]+)-.*?'"
"'</?[a-z]+>'"
"'([0-9]+)'"
"'(.*)\\.php$'"
"'type=""track"" name=""(?P<name>[^""]+)""'"
"'type=""trackpoint""\\s+altitude=""(?P<alt>[^""]+)""\\s+latitude=""(?P<lat>[^""]+)""\\s+longitude=""(?P<lon>[^""]+)""'"
"'type=""trackend""'"
"'type=""waypointlist""'"
"'.*name=""(?P<name>[^""]+)""\\s+altitude=""(?P<alt>[^""]+)""\\s+latitude=""(?P<lat>[^""]+)""\\s+longitude=""(?P<lon>[^""]+)""'"
"'\\.ics$'"
"'([+-])?(\\d)(\\w+)$'"
"'(\\d{4})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:\\.\\d+)?(.*)$'"
"'([+-])(\\d\\d):?(.*)$'"
"'(\\d{4})-(\\d\\d)-(\\d\\d)(Z)?'"
"'\\d+ \\d+'"
"'\\[\\[[:\\-_a-z0-9]+]]'"
"'([^\n])\n([^\n])'"
"'\\n[A-Z][^\\n]+\\n'"
"tag.article_regex"
"'%(r|h)'"
"'(?P<ip>[0-9.]*) (?P<domain>[a-zA-Z0-9.]*) - \\[(?P<date>[0-9a-zA-Z/]*):(?P<time>[0-9:]*) (?P<timezone>[0-9+]*)\\] ""(?P<method>[A-Z]*) (?P<path>.*?) (?P<protocol>[0-9A-Z/.]*)"" (?P<status>[0-9]*) (?P<process>[0-9-]*) ""(?P<refer>.*?)"" ""(?P<useragent>.*?)""'"
"'%redirect:""(.*)""%'"
"'(.*?)\n---\n(.*)'"
"'TITLE (.*)'"
"'ID (.*)'"
"'URL (.*)'"
"'(.*?)\n---\n'"
"'MIME text/html.*'"
"'<CODE>(.*?)</CODE>'"
"'<REPEAT>(.*?)</REPEAT>'"
"'\\$__bc\\d'"
"'<title>(.*?)</title'"
"'<text xml:space=""preserve"">(.*?)</text>'"
"'\\{.*?\\}'"
"""\\[\\[([\\?:\\w\\s\\-'\\(\\)]+)]\\]"""
"""\\|([\\?:\\w\\s\\-'\\(\\)]+)\\]\\]"""
"""\\[\\[[\\?:\\w\\s\\-'\\(\\)]+\\|"""
"'\\[\\[[Ii]mage:.+?\\| '"
"'site(:|%3A)([a-z0-9\\.]+)'"
"'(?u)\\W+'"
"'/\\w+|/"".+?""'"
"'[^\\w"" ]'"
"'[\\.\\*\n].+?\\.'"
"'(?u)\\W'"
"'\\.*?\\]'"
"'[\\[\\]\\|]'"
"'[,;]$'"
"'^.*{'"
"'^.*=.*'"
"'^.}'"
"'[\n ]+$'"
"'^[0-9]+[Ee]$'"
"'^(.+)$'"
"'^\\s*\\/\\*'"
"'^\\s*\\/\\/'"
"'^var _0x[a-f0-9]+ ?\\= ?\\['"
"'var (_0x[a-f\\d]+) ?\\= ?\\[(.*?)\\];'"
"""^var _escape\\='<script>(.*)<\\/script>'"""
"'eval\\(\\w+\\(\\w+\\((\\w+)\\)\\)\\);'"
"'\\b\\w+\\b'"
"""}\\('(.*)', *(\\d+), *(\\d+), *'(.*)'\\.split\\('\\|'\\), *(\\d+), *(.*)\\)\\)"""
"'var *(_\\w+)\\=\\[""(.*?)""\\];'"
"'\\S+?p=(\\d+)$'"
"'\\S+/archives/(\\d+)'"
"'<\\S+?p=(\\d+)>'"
"'\\d+\\.\\d+\\.\\d+'"
"'\\.cpp$'"
"'""id"":'"
"'([0-9]*).*focused"":(false|true).*""geometry"":{.*?""width"":(?!0).*""name"":""(.*?)""'"
"'([\\s]+)'"
"'.*\\.html$'"
"'src=""\\.\\./helper.js""'"
"'\\s*\\[\\s*'"
"'\\s*\\]\\s*=\\s*'"
"'\\s|,'"
"'^(\\d+)(\\d\\d)([a-z])$'"
"'^\\-$'"
"'\\$[^\\$]+\\$'"
"'[^A-Za-z0-9_\\!\\?\\.\\,\\-]'"
"'^\\s*#.*'"
"'^\\[([^\\]]+)\\]'"
"'^\\s*(?P<key>\\w+)\\s*=\\s*(?P<value>.*)'"
"'^""(.*)""\\s*$'"
"'([^a-z0-9\\._-])'"
"'^s3://([^/]+)/?(.*)'"
"'^s3fs://([^/]*)/?(.*)'"
"'^(\\w+://)?(.*)'"
"'^cpu[1-9].'"
"'^Active:'"
"'^MemTotal:'"
"'otp_src_(R)(\\d+)(\\w+)(?:-(\\d+))?\\.tar.gz'"
"'(R)(\\d+)(\\w+)-(\\d+)'"
"'ELF .* executable'"
"'.*{\\s*force_binary_app\\s*,\\s*true}.*'"
"'^-+|-+$'"
"'name=""(.*?)""'"
"'value=""(.*?)""'"
"'processor\\s*:'"
"'.*/(\\d+)'"
"'[-+]?\\d+'"
"'[-+]?(\\d+(\\.\\d*)?|\\d*\\.\\d+)([eE][-+]?\\d+)?'"
"'[a-zA-Z]+'"
"'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(?P<second_float>(\\.\\d+)?)Z'"
"'%\\(([^)]*)\\)s'"
"'\n        \\$(?:\n          (?P<escaped>\\$)              |   # Two $ signs\n          (?P<named>[_a-z][_a-z0-9]*)  |   # $name format\n          {(?P<braced>[^}]*)}              # ${name} format\n        )\n        '"
"'^ # line start\n        (\\s*)                   # indentation\n        (                       # keyword\n            (?:"".*?"")|          # double quotes\n            (?:\'.*?\')|          # single quotes\n            (?:[^\'""=].*?)       # no quotes\n        )\n        \\s*=\\s*                 # divider\n        (.*)                    # value (including list values and comments)\n        $   # line end\n        '"
"'^\n        (\\s*)                     # 1: indentation\n        ((?:\\[\\s*)+)              # 2: section marker open\n        (                         # 3: section name open\n            (?:""\\s*\\S.*?\\s*"")|    # at least one non-space with double quotes\n            (?:\'\\s*\\S.*?\\s*\')|    # at least one non-space with single quotes\n            (?:[^\'""\\s].*?)        # at least one non-space unquoted\n        )                         # section name close\n        ((?:\\s*\\])+)              # 4: section marker close\n        \\s*(\\#.*)?                # 5: optional comment\n        $'"
"'^\n        (?:\n            (?:\n                (\n                    (?:\n                        (?:\n                            (?:"".*?"")|              # double quotes\n                            (?:\'.*?\')|              # single quotes\n                            (?:[^\'"",\\#][^,\\#]*?)    # unquoted\n                        )\n                        \\s*,\\s*                     # comma\n                    )*      # match all list items ending in a comma (if any)\n                )\n                (\n                    (?:"".*?"")|                      # double quotes\n                    (?:\'.*?\')|                      # single quotes\n                    (?:[^\'"",\\#\\s][^,]*?)|           # unquoted\n                    (?:(?<!,))                      # Empty value\n                )?          # last item in a list - or string value\n            )|\n            (,)             # alternatively a single comma - empty list\n        )\n        \\s*(\\#.*)?          # optional comment\n        $'"
"'\n        (\n            (?:"".*?"")|          # double quotes\n            (?:\'.*?\')|          # single quotes\n            (?:[^\'"",\\#].*?)       # unquoted\n        )\n        \\s*,\\s*                 # comma\n        '"
"'^\n        (\n            (?:"".*?"")|          # double quotes\n            (?:\'.*?\')|          # single quotes\n            (?:[^\'""\\#].*?)|     # unquoted\n            (?:)                # Empty value\n        )\n        \\s*(\\#.*)?              # optional comment\n        $'"
"""^'''(.*?)'''\\s*(#.*)?$"""
"'^""""""(.*?)""""""\\s*(#.*)?$'"
"""^(.*?)'''\\s*(#.*)?$"""
"'^(.*?)""""""\\s*(#.*)?$'"
"'(.*).zip'"
"'.xml'"
"'{project_vsn, ""(.+)""}'"
"'{([^}]+)}'"
"'^[A-Za-z0-9]\\w*$'"
"'=\n([^ \t])'"
"'(?P<source_filename>.+)_(?P<x>\\d+)x(?P<y>\\d+)(?:_(?P<options>\\w+))?_q(?P<quality>\\d+).jpg$'"
"'(.*)_(.*)'"
"'(\\d+)x(\\d+)$'"
"'quality=([1-9]\\d?|100)$'"
"'roll ([0-9]+)d([0-9]+)'"
"'  +'"
"'(\\d+)-(\\d+)'"
"'[\\s|,]'"
"'[^a-zA-Z0-9]+'"
"'-k *([^ =]+)(?:=(\\d+))?'"
"'[a-zA-Z][-_.:a-zA-Z0-9]*\\s*'"
"'<\\s*meta[^>]+charset=([^>]*?)[;\'"">]'"
"'(?P<type>[\\[\\(\\{]+)(?P<name>[^\\ \\[\\]\\(\\)\\{\\}][^\\[\\]]*?)[\\]\\)\\}]+'"
"'\\s*\\*'"
"'<img[^>]*>'"
"'(\\w+)=""([^""]*)'"
"'MSIE (.*?);'"
"'^~(.*)\\((.*)-(.*)\\)$'"
"'^~(.*)\\((.*)\\)$'"
"'(?P<action>[A-Za-z]*).?(?P<ticket>#[0-9]+(?:(?:[, &]*|[ ]?and[ ]?)#[0-9]+)*)'"
"'#([0-9]*)'"
"'<(.+)@'"
"'[\\r\\n]+'"
"'([0-9]+)([DdHhMm]|[sS]?)'"
"'\\.\\.|^\\./|\\.$|/\\./|^-|^_ah/'"
"'([0-9]+)(.*)'"
"'\\.([1-9][0-9]*)([ACGTURYMKSWBDHVN]+)'"
"'INS([ACGTURYMKSWBDHVN]+)'"
"'\\+([ACGTURYMKSWBDHVN]+)'"
"'^""(.*?)""$'"
"""^'(.*?)'$"""
"'(^|[\\r\\n]+)(?=\\[\\w)'"
"'[\\r\\n]\\s*(?=\\[\\[)'"
"'\\s*\\[\\[Samples\\]\\]'"
"'Sample.*?}'"
"'SampleName\\s*=\\s*(.*)'"
"'SampleSize\\s*=\\s*(\\d+)'"
"'SampleData\\s*=\\s*{([^}]+)'"
"'^LOCUS[^\\r\\n]*'"
"'\\d\\d-[A-Z][A-Z][A-Z]-\\d\\d\\d\\d'"
"'[\\r\\n]DEFINITION(.*?)[\\r\\n]\\S'"
"'[\\r\\n]VERSION     (.+?)\\.(\\d)\\s+GI:(\\d+)\\s*?[\\r\\n]\\S'"
"'[\\r\\n]SOURCE      ([^\\r\\n]+)[\\r\\n]  ORGANISM\\s+([^\\r\\n]+)\\s+(.*?)\\S'"
"'[\\r\\n](FEATURES.*?)[\\r\\n]\\S'"
"'[\\r\\n]     (?=\\S)'"
"'[\\r\\n](ORIGIN.*?)[\\r\\n]\\S'"
"'[\\r\\n] {21}'"
"';\\s+'"
"'^[^\\r\\n]+(.*)'"
"'[\\d\\s]'"
"'[0-9]+'"
"'\\s*[0-9]+\\s+(?P<label>\\S+)\\s+\\((?P<missing>[0-9.]+)\\)\\s+(?P<pop>[0-9]+)\\s+:(?P<probs>.*)'"
"'\\s*Pop\\s+(?P<pop>[0-9]+)\\s*:\\s+(?P<prob>[0-9.]+)'"
"'MAXPOPS=(?P<K>[0-9]+)'"
"'^<!-- ?([ \\w]+): ?([\\w ,.:\\+\\/-]+)-->'"
"'^<!-- ?([ \\w]+): ?([\\w ,.:\\/-]+)-->'"
"'(<.*?>)'"
"'(<[^>]$)'"
"'<code (?:\\s*lang=(.*?))*>(.*?)<(?#)/code>'"
"'^\\w'"
"'\\w$'"
"'\\[([WE])(, (.+?))?\\]'"
"'[^0-9a-fA-F]'"
"'(.+)\\(.*\\)'"
"'<\\s*([^/][^ ]*)(?:\\s+[^>]+)?>'"
"'^\\s*'"
"'File ""(/[^\n]+)"", line'"
"'^MacSS::send - Sending -'"
"'^MacSS::recvUL_MAP - UL_MAP: '"
"'^MacBS::sendUL_MAP - UL_MAP: '"
"'^MacBS::FrameHandler -'"
"'^MacBS::HandlerUL -'"
"'^MacSS::ToHandler -'"
"'^MacSS::SsWaitHandler -'"
"'^MacSS::SPHandler -'"
"'NodeId: (\\d+),'"
"'Time: ([0-9.]*)'"
"'start: ([0-9.]*)'"
"'Duration: ([0-9.]*)'"
"'ShortPreamble: ([0-9.]*)'"
"'PktId: ([0-9.]*),'"
"'^(?P<type>.*):(?P<msg>.*) in (?P<file>.+) on line (?P<line>\\d+)$'"
"'setuptools'"
"""<(module '(.*?)') \\(built-in\\)>$"""
"'mNaLgP1c'"
"'\\?'"
"'(\\.(zip|jar|7z|tgz|tbz|rar|dmg)|\\.tar(\\.gz|\\.bz2)?)$'"
"'/(dev|Network|automount)/'"
"'/\\.Trashes$'"
"'(\\.tar(\\.gz|\\.bz2)?|\\.tgz|\\.tbz)$'"
"'\\*'"
"'%'"
"'20'"
"'-----'"
"'Software License Agreement: true'"
"'Encrypted: true'"
"'(/tmp/.+)'"
"'([0-9]{4})-([0-1][0-9])-([0-3][0-9]) ([0-2][0-9]):([0-5][0-9])'"
"'#(\\w+)\\s+(.*)'"
"""<h2>[a-zA-Z ]*?<a href='(.+?)'"""
"'href=[\'""](.+?)[\'""]'"
"'([a-zA-Z]+?):'"
"'Voted'"
"'Rated'"
"'[Cc]o-sponsored'"
"'Sponsored'"
"'[Ii]ntroduced'"
"'([A-Z][a-z][a-z] [0-9]{1,2}, [0-9]{4})$'"
"'<TITLE> (.+?) on (.+)'"
"'([^<]+)'"
"'SIZE=1>(.+?)</center></font>'"
"'</center>(.+?)<center>'"
"'\\.eng$'"
"'<<(.+?)>>'"
"'{W([^}]+)}'"
"'{[^}]+}'"
"'\\s+$'"
"'(.+)\\1'"
"'='"
"'{P[0-9]+}'"
"'\\s*{P[0-9]+}'"
"'<([^>]+)>'"
"'(^al-|-i$)'"
"'\\s*$'"
"'([0-9.]+in)?>\\s+'"
"'<<([^>]+)>>'"
"'(\\\\|})'"
"'\\\\begin{(arabtext|RLtext)}'"
"'\\\\end{(arabtext|RLtext)}'"
"'[A-Za-z0-9]'"
"'A/'"
"'/A'"
"'^(?P<month>\\d{1,2})/(?P<day>\\d{1,2})/(?P<year>\\d{4})$'"
"'\\d{6}'"
"'[ ,-/]'"
"'[,\\n\\r\\t;()]'"
"'^((?:[a-z][0-9])|(?:[a-z][0-9][0-9])|(?:[a-z][0-9][a-z])|(?:[a-z][a-z][0-9])|(?:[a-z][a-z][0-9][0-9])|(?:[a-z][a-z][0-9][a-z]))$'"
"'^((?:[a-z][0-9])|(?:[a-z][0-9][0-9])|(?:[a-z][0-9][a-z])|(?:[a-z][a-z][0-9])|(?:[a-z][a-z][0-9][0-9])|(?:[a-z][a-z][0-9][a-z])) *([0-9][a-z][a-z])?$'"
"'[0-9]{4}'"
"'YES$'"
"'Prediction'"
"'Signal peptide'"
"'([a-zA-Z_][a-zA-Z0-9_]*?)\\((.*?)\\)'"
"'(http://rafb.net/p/[0-9a-zA-Z]+\\.html)'"
"'\x01([a-z])([a-z]?)'"
"'\x01[a-z][a-z]?'"
"'[^\t]'"
"' |\\('"
"'MESSAGES\\s+(\\d+)'"
"'UNSEEN\\s+(\\d+)'"
"':.{2}-.*$'"
"'%(.)'"
"'[0-9]+\\.[0-9]+'"
"'\\[(\\d?\\d?\\d?)%\\]'"
"'([0-9a-z]+)(.*)'"
"'(\\w+)(?:\\s+(\\S+))?'"
"' [^ ]*%[fFuUdDnNickvm]'"
"'WS(.+)/WS'"
"' CURRENT(.+)/CURRENT '"
"' URGENT(.+)/URGENT '"
"'(.+?)!n?=?(.+?)@(.+)'"
"'[\\r\\n @]+'"
"'[\\r\\n]'"
"'^:\\S+ ([A-Z0-9]+)'"
"'^PING'"
"'^:(\\S+) PRIVMSG (\\S+) :(.+)$'"
"'[\\0\\n\\r\\032\\\'\\""\\\\]'"
"'[A-Z]\\w+'"
"'\n    (?:                 # non-capturing group\n        \\A              # start: match the beginning of line\n        | [\\s\\.,:;\'""]   # or any of: whitespace, period, comma, colon, etc...\n    )\n    (                   # capture group \\1, this is where the @username is\n        @(\\w{1,15})     # @ followed by 1-15 char word captured into \\2\n    )\n    (?!                 # but don\'t match if followed by\n        \\.?             # zero or one periods\n        \\w              # followed by any word character\n    )'"
"'^http://www.youtube.com/watch\\?v=([-a-z0-9A-Z_]+)'"
"'\n            (?:(?:::+)|(?P<shebang>[#]!))\t#shebang or 2 or more colons\n            (?P<path>(?:/\\w+)*[/ ])? # zero or 1 path ending in either a / or a single space\n            (?P<lang>\\w*)\t# the language (a single /  or space before lang is a path)\n            '"
"'h[123456]'"
"'\\+'"
"'\\d+\\.\\d+\\.\\d+\\.\\d+'"
"'var current_serie_url = ""(.*)""'"
"'var current_chapter_url = ""(.*)""'"
"'[?/:|]+'"
"'(?:\\r\\n)?[ \\t]+'"
"'^(?:\\s*(?:,\\s*)?([^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\""/[\\]?={} \\t]+)\\s*=\\s*\\""?((?<=\\"")(?:[^\\0-\\x08\\x0A-\\x1f\\x7f-\\xff\\\\\\""]|\\\\[\\0-\\x7f])*?(?=\\"")|(?<!\\"")[^\\0-\\x1f\\x7f-\\xff()<>@,;:\\\\\\""/[\\]?={} \\t]+(?!\\""))\\""?)(.*)$'"
"'^(?:\\s*(?:,\\s*)?([^ \\t\\r\\n=]+)\\s*=\\s*\\""?((?<=\\"")(?:[^\\\\\\""]|\\\\.)*?(?=\\"")|(?<!\\"")[^ \\t\\r\\n,]+(?!\\""))\\""?)(.*)$'"
"'\\\\(.)'"
"'\r(?!\n)|(?<!\r)\n'"
"'ssh-\\w+ \\S+ \\S+'"
"'<<<(-?\\d+?)>>>'"
"'^\\s*(\\S+)\\s*$'"
"'[^\\s!-~]'"
"'<code> \\[implementation\\]</code>'"
"'Static Public Member Functions'"
"'Public Member Functions'"
"'Protected Attributes'"
"'Member Function Documentation'"
"'Member Data Documentation'"
"'(AppKit|Foundation)\\.doc'"
"'\\s*<tr>\\n(\\s*<td></td>\\n){2}\\s*(<td></td>){2}<td>&emsp;</td>\\n\\s*</tr>'"
"'^[A-F0-9]{24}$'"
"' \\((.*?)\\) '"
"'(\\d+\\.\\d+\\.\\d+\\.\\d+)\\s+(.*)'"
"'(\\w+)\\((-?\\d+.?\\d*),(-?\\d+.?\\d*)\\)'"
"'^(?P<digest>[a-z0-9]+) (?P<name>[^0-9]+) (?P<date>.+):\\s+(?P<msg>.*)'"
"'^:(?:[^A-Z]+) (?P<type>[A-Z])\t(?P<path>.*)'"
"'^([^:]+): (.*)$'"
"'^\\((.+)\\)$'"
"'<[^>]*?>'"
"u'\u96e3\u6613\u5ea6\uff1a([0-9]+)'"
"'^HP([0-9]+)\\%$'"
"'^MP([0-9]+)$'"
"'^MAG([0-9]+)$'"
"'<namespace key=""([^""]+)"">([^<]+)</namespace>'"
"'([{}\\[\\]|])'"
"'[-.0-9]+,[-.0-9z]+'"
"'^(?P<proto>unix):(?P<path>.*)$'"
"'^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'"
"'^(?P<host>[^:]+):(?P<port>[0-9]+)$'"
"'zc.buildout(-\\S+)?[.]egg(-link)?'"
"'[-d] setuptools-[^-]+-'"
"'[_a-zA-Z]\\w*$'"
"'^\\s*(\\d+)\\s+(\\d+)\\s+(\\d+)'"
"'\t'"
"'([#%&~$_^{}])'"
"""`([^`']*)'"""
"'""([^""]*)""'"
"'\\\\end{Verbatim}'"
"'^;;;($|[^#f])'"
"'^;;;(#+)'"
"'^;;;f\\s+""(.+)""\\s+([^\\s]+)\\s+(.*)'"
"'^;;;t\\s+(.+)'"
"'^(\\s|/)*\\*\\*($|[^f#/])'"
"'^/\\*\\*(#+)'"
"'\\*\\*+/'"
"'^/\\*\\*f ""(.+)""\\s+([^\\s]+)\\s(.*)'"
"'define\\.php\\?term=(.*?)\\\\\\""'"
"'<font[^>]*>'"
"'\\*([^\\s].*?)\\*(?!\\*)'"
"'_(?=\\S)([^_]+)(?<=\\S)_'"
"'/\\*.*?\\*/'"
"'^(INT|EXT|EST)[ .]'"
"'^(INT\\.?/EXT\\.?)[ .]'"
"'^I/E[ .]'"
"'^ +\\(.*\\)$'"
"'#([a-zA-Z0-9\\-]+) (.*)'"
"'\\\\..'"
"'def (test[a-zA-Z0-9_]*)\\('"
"'\\b(\\w){3}\\b'"
"'\\b(\\w){4}\\b'"
"'\\b(\\w){5}\\b'"
"'\\b(\\w){6}\\b'"
"'\\b(\\w){7}\\b'"
"'\\b(\\w){10}\\b'"
"'^00000000.*'"
"'^(\\w+)\\s+\\((\\s*.+)\\s+(\\d{4}.*\\+\\d{4})\\s+(\\d+)\\)(.*)'"
"'[+:\\-\\s]'"
"u'^(?:[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*(?:[eE][-+][0-9]+)?\n                    |[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*\n                    |[-+]?\\.(?:inf|Inf|INF)\n                    |\\.(?:nan|NaN|NAN))$'"
"'(\\S*)\\s*'"
"'(\\d+)%'"
"'[/|?*<>:+\\[\\]""\\\\]'"
"'^(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)\t(.*)$'"
"'\\$\\{([_a-zA-Z][_a-zA-Z0-9]+)(\\?[^}]+)?\\}'"
"'^(__\\w+__)\\s*=\\s*[\\\'""]([^\\\'""]*)[\\\'""]'"
"'^([A-Za-z0-9_-]+)=(.*)$'"
"'^db\\.'"
"'^driver\\.'"
"'^settings$'"
"'^[\\s\t\n]*([^\n]*)'"
"'[\\s\\(\\)]+'"
"'^Thread\\-'"
"'^[a-z]+$'"
"'\\Z(?ms)'"
"'^.+\\.((en|fr)\\.[^.]+)$'"
"'^.+\\.([^.]+)$'"
"'(?P<pad>[=]*)$'"
"'[^0-9A-F]'"
"'^[ -~]{0,200}[!-~]$'"
"'^([^:]+):\\s+Room:\\s+([^,]+),\\s+Rack:\\s+([^,]+),\\s+Unit:\\s+(.*)$'"
"'^([^:]+):\\s+NO POSITION DEFINED!$'"
"'^([^:]+):\\s+(.*)$'"
"'(http[s]?://\\S+)'"
"'name=tinyurl value=""(.*)""'"
"'"".*?/([\\w]*)\\.keychain""'"
"'""acct""<blob>=""(.*?)""'"
"'password: ""(.*?)""'"
"'timeout=(\\d+)s'"
"'[^a-z]+'"
"'\\[( +)'"
"'pt\\d{1,2}'"
"'_\\d{2,3}'"
"'12\\d{2}'"
"'_\\d{2,3}_'"
"'(6|7)\\d{6}'"
"'(.*?)/(.+)'"
"'(\\w+)\\s+(\\S+)'"
"'(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+)(.(\\d+))?Z$'"
"'(^|/)\\.s3mirror-MANIFEST$'"
"'([^(]*)\\s+\\(([^)]*)\\)\\s+(\\d+)\\s+(\\d+)\\s+(\\w+)'"
"'(!\\s*)?(\\[([^\\]]+)]\\s*)?(.*)'"
"'^\\w+\\s*\\*?\\s*$'"
"'purple_signal_register[^;]+""([\\w\\-]+)""[^;]+(purple_marshal_\\w+)[^;]+;'"
"'[-_][a-z]'"
"'^}\\s+(\\w+)\\s*;'"
"'(/.*?):(\\d+):\\s*(.*)$'"
"'(</head>)'"
"'(</body>)'"
"'(<pre>\\s*)<br />'"
"'(<span class=""k"">[^<>]+</span>\\s*)<br />(<span class=""k"">)'"
"'<br />(<span class=""k"">(IN|LIKE)</span>)'"
"'^(\\S+)\\((\\S+)\\):(.*)'"
"'FOREIGN_FUNCTION\\((\\S+)\\)'"
"'(\\S+)_func'"
"'.*_func_(\\d+)'"
"'(\\S+)\\s*\\*\\s*(\\S+).*'"
"'.*char\\s*(\\S+).*'"
"'.*char\\s*?\\*\\s*?(\\S+).*'"
"'.*short\\s*(\\S+).*'"
"'.*long\\s*(\\S+).*'"
"'.*int\\s*(\\S+).*'"
"'.*unsigned char\\s*(\\S+).*'"
"'.*unsigned short\\s*(\\S+).*'"
"'.*unsigned long\\s*(\\S+).*'"
"'.*unsigned int\\s*(\\S+).*'"
"'.*float\\s*(\\S+).*'"
"'.*double\\s*(\\S+).*'"
"'.*bool\\s*(\\S+).*'"
"'void *[^\\*]'"
"'bool *[^\\*]'"
"'char *?\\*'"
"'data_t *?\\*'"
"'float\\ *[^\\*]'"
"'double\\ *[^\\*]'"
"'.*int|long|float\\ *[^\\*]'"
"' (u?n?s?i?g?n?e?d?\\s*[:\\w]*\\s?\\*?\\s\\*?)([a-zA-Z_][:a-zA-Z_0-9]*)\\(([^\\)]*)\\)'"
"'[\n\t\\s]+'"
"'sw'"
"'lw'"
"'mflo'"
"'mfhi'"
"'jr'"
"'jal'"
"'j'"
"'sltiu'"
"'sltu'"
"'slti'"
"'slt'"
"'bne'"
"'beq'"
"'ori'"
"'andi'"
"'or'"
"'and'"
"'mult'"
"'divu'"
"'div'"
"'subu'"
"'addiu'"
"'addi'"
"'addu'"
"'sub'"
"'add'"
"'bgtz'"
"'bgtu'"
"'ble'"
"'bge'"
"'blt'"
"'bgt'"
"'move'"
"'li'"
"'la'"
"'.space'"
"'.asciiz'"
"'.text'"
"'.data'"
"'-?[0-9]+'"
"'0x[0-9]+'"
"'\\$(gp|sp|fp|ra|v[0-1]|a[0-3]|t[0-9]|s[0-7]|k[0-1]|zero|[0-9]+)'"
"'syscall'"
"'""[^""]*""'"
"'#[^\n]*\n'"
"'BREAK'"
"'(.+?)=(.+)'"
"'[^A-Za-z0-9_.!~*()-]'"
"'[&<>""\'+]'"
"'^(.*),\\s*(.*)$'"
"'([A-Z]+[a-z]+([A-Z]+[a-z]+)+)'"
"'wiki:([A-Za-z]+)'"
"'^[\\s\t]|'"
"'[\\:\\<\\>/\\(\\)\\[\\]\\{\\}\\$\\~]|\\.\\.'"
"'^\\w\\w(\\-\\w\\w)?$'"
"'(\\d\\d\\d\\d)/?(\\d\\d|\\w+)?/?(\\d\\d)?[/T]?(\\d\\d)?[:h]?(\\d\\d)?[:m]?(\\d\\d)?s?'"
"'^[\\w]+$'"
"'([SU][0-9]+)\\-(\\w+)\\.py'"
"'text/'"
"'(?:_|im_|func_|tb_|f_|co_).*'"
"'!([a-zA-Z]+)\\s*\\:\\s*(.*)'"
"'\\W*'"
"'(\\d+)\\.(\\d+)\\.(\\d+)'"
"'^(SRID=(?P<srid>\\d+);)?(?P<wkt>(?P<type>POINT|LINESTRING|LINEARRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)[ACEGIMLONPSRUTYZ\\d,\\.\\-\\(\\) ]+)$'"
"'^(\\s+)?\\{[\\s\\w,\\[\\]\\{\\}\\-\\.""\\\':]+\\}(\\s+)?$'"
"'^<Point><coordinates>-95.363\\d+,29.763\\d+,18</coordinates></Point>$'"
"'^{""type"":""Point"",""coordinates"":\\[-95.363151,29.763374,18(\\.0+)?\\]}$'"
"'(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?'"
"'[&?]acl($|=|&)'"
"'[&?]logging($|=|&)'"
"'[&?]torrent($|=|&)'"
"'[&?]location($|=|&)'"
"'[&?]requestPayment($|=|&)'"
"'[&?]versions($|=|&)'"
"'[&?]versioning($|=|&)'"
"'[&?]versionId=([^&]+)($|=|&)'"
"'Event\\.(?P<n>\\d+)\\.(?P<param>\\w+)'"
"'^#import[\\s\t]*([^\\s^\t]*)[\\s\t]*$'"
"'^s3:\\/\\/([^\\/]*)\\/(.*)$'"
"'^[0-9a-f]{20,40}$'"
"'\\d+\\.\\d+(?:\\.\\d+)?'"
"'\\w+(?u)'"
"'&([^;]+);'"
"'(<!--.*-->|<[^>]*>)'"
"'[_-]'"
"'([^\\s;,]+)(?:[^,]*?;\\s*q=(\\d*(?:\\.\\d+)?))?'"
"'([Ww]/)?(?:""(.*?)""|(.*?))(?:\\s*,\\s*|$)'"
"'\n    (?P<static>[^<]*)                           # static rule data\n    <\n    (?:\n        (?P<converter>[a-zA-Z_][a-zA-Z0-9_]*)   # converter name\n        (?:\\((?P<args>.*?)\\))?                  # converter arguments\n        \\:                                      # variable delimiter\n    )?\n    (?P<variable>[a-zA-Z][a-zA-Z0-9_]*)         # variable name\n    >\n'"
"'(?P<htmlchars>[<&>\\\'""])|(?P<space>^[ \\t]+)|(?P<lineend>\\r\\n|\\r|\\n)|(?P<protocol>((https|http|ftp)://.*?))([^\\x00-\\xff]|\\s|$|"")'"
"'({[^{}$]*\\$[^{}$]*\\$[^{}]*})'"
"'(?<!\\$)(?<!\\\\)\\$([^\\$]+?)\\$'"
"'\\\\\\$'"
"'.*<property name=""icon"">(.*)\\.png</property>'"
"'old'"
"'busted'"
"'.*?application: ([\\w\\-]+)'"
"'.*?\nRevision: (\\d+)'"
"'^<tr( name=""hook"")? id=""pair-(?P<rowcount>\\d+)"">'"
"'^Initialized empty Git repository in (.*)'"
"'(?P<tag>\\#\\w+)'"
"'(?P<username>@\\w+)'"
"'RT\\s+(?P<username>@\\w+)'"
"'https?://(?:(?:[A-Z0-9-]+\\.)+[A-Z]{2,6}|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?::\\d+)?(?:/\\S+|/?)'"
"'\\[\\[\\s*(.*?)\\s*\\]\\]'"
"'^[-+]?[0-9]+$'"
"'^\\d[a-zA-Z]+'"
"'exe [\'""](GlobalSnip|Snipp)(!)? (\\S+) (.*)[\'""]'"
"'\\s*\\\\""(.*?)\\\\""\\s*(.*)'"
"'\\s*""(.*?)""\\s*(.*)'"
"'^""(.*)'"
"'\\\\t'"
"'^(\\#|snippet|$)'"
"'^\\s+(\\\\\\s*)?(\\.\\s*)?[\'\\""](.*)[\'\\""]'"
"'\\s*@(\\w+){((\\S+),)?(.*)}\\s*'"
"'(\\S+?)\\s*=\\s*(.)'"
"'{|}'"
"'(?!\\\\)(\\\\\\\\)*""'"
"',|$'"
"'(.*)\\.(h|cpp|c)$'"
"'(\\/\\*.*?\\@doc:[\t ]+(.*?)\n.*?\\*\\/)'"
"'^[\t ]+\\@(type|title|short|syntax|description|doc):(.*)$'"
"'^[\t ]+(.*)$'"
"'\\d{1,5}/open'"
"'^\\[.*PATCH.*\\].+'"
"'<(.*)>'"
"'^(https|http)'"
"'(width=""[0-9]+"")'"
"'(height=""[0-9]+"")'"
"""(\n                            (\\b[A-Z\\d]*        # Group 2: Any amount of caps and digits\n                            [A-Z]\\d*[A-Z]      # A cap string much at least include two caps (but they can have digits between them)\n                            [A-Z\\d']*\\b)       # Any amount of caps and digits or dumb apostsrophes\n                            | (\\b[A-Z]+\\.\\s?   # OR: Group 3: Some caps, followed by a '.' and an optional space\n                            (?:[A-Z]+\\.\\s?)+)  # Followed by the same thing at least once more\n                            (?:\\s|\\b|$))\n                            """
"'((?:</?(?:a|em|span|strong|i|b)[^>]*>)|[^<>\\s]) # must be proceeded by an approved inline opening or closing tag or a nontag/nonspace\n                                   \\s+                                             # the space to replace\n                                   ([^<>\\s]+                                       # must be flollowed by non-tag non-space characters\n                                   \\s*                                             # optional white space! \n                                   (</(a|em|span|strong|i|b)>\\s*)*                 # optional closing inline tags with optional white space after each\n                                   ((</(p|h[1-6]|li|dt|dd)>)|$))                   # end with a closing p, h1-6, li or the end of the string\n                                   '"
"'[^aeiouy]*[aeiouy]+[^aeiouy](\\w*)'"
"'^[aeiouy][^aeiouy]$'"
"'.*[^aeiouy][aeiouy][^aeiouywxY]$'"
"'([aeiouy])y'"
"'[aeiouy].'"
"'[aeiouy]'"
"'([^\\s]+)\\s.+\\s+""([^\\s]+)\\s+([^\\s]+)\\s+HTTP/\\d+\\.\\d+""\\s+200\\s+.*'"
"'^[a-z0-9_$()+-/]+$'"
"'(?P<func>\\w+)(?P<args>.*)'"
"'([a-zA-Z]\\w+)'"
"'^- '"
"'(?m)^- '"
"'\\w+\\(.*\\)'"
"'time[^\\]]*$'"
"'int[^\\]]*$'"
"'(create (?:unique )?index )(.*)'"
"'\\.'"
"'\\.ini$|\\.xml$'"
"'2\\.3'"
"'\\.vec$|\\.sca'"
"'End run of OMNeT'"
"'Calling finish'"
"'\\| _(\\S*funambolAutoRegisterRegistry\\S*)'"
"'^:(\\w+)(![^ ]*)?'"
"'#[^ \r\n]+'"
"'[^.,!?]+'"
"'\\$[a-z].*'"
"'^.*@(.*)$'"
"'^test_.*.py$'"
"'([a-zA-Z]*:)'"
"'(Epic|Feat|Racial)'"
"'^[a-zA-Z0-9._]+$'"
"'^(test_.*)\\.py$'"
"'.*\\<(?P<email>.+)\\>.*'"
"'^(?P<series>(.*?)) - S(?P<seasonNumber>([0-9]+))(?P<episodeNumbers>((E[0-9]+)+)).*'"
"'^[ ]{0,2}([ ]?-[ ]?){3,}[ \\t]*$'"
"'^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$'"
"' {2,}\n'"
"' (                 # wrap whole match in $1\n                  \\[\n                    (.*?)        # link text = $2 \n                    # [for bracket nesting, see below]\n                  \\]\n\n                  [ ]?           # one optional space\n                  (?:\\n[ ]*)?    # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)        # id = $3\n                  \\]\n                )\n    '"
"' (                   # wrap whole match in $1\n                  \\[\n                    (.*?)          # link text = $2\n                  \\]\n                  \\(               # literal paren\n                        [ \\t]*\n                        <?(.+?)>?  # href = $3\n                        [ \\t]*\n                        (          # $4\n                          ([\\\'\\""]) # quote char = $5\n                          (.*?)    # Title = $6\n                          \\5       # matching quote\n                        )?         # title is optional\n                  \\)\n                )\n    '"
"' (                       # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n\n                  [ ]?                  # one optional space\n                  (?:\\n[ ]*)?           # one optional newline followed by spaces\n\n                  \\[\n                    (.*?)               # id = $3\n                  \\]\n\n                )\n    '"
"' (                        # wrap whole match in $1\n                  !\\[\n                    (.*?)               # alt text = $2\n                  \\]\n                  \\(                    # literal paren\n                        [ \\t]*\n                        <?(\\S+?)>?      # src url = $3\n                        [ \\t]*\n                        (               # $4\n                        ([\\\'\\""])        # quote char = $5\n                          (.*?)         # title = $6\n                          \\5            # matching quote\n                          [ \\t]*\n                        )?              # title is optional\n                  \\)\n                )\n    '"
"'^(\\#{1,6})[ \\t]*(.+?)[ \\t]*\\#*\\n+'"
"'\\n{2,}\\Z'"
"'\n    (\\n)?                            # leading line = $1\n    (^[ \\t]*)                        # leading whitespace = $2\n    ([*+-]|\\d+[.]) [ \\t]+            # list marker = $3\n    ((?:.+?)                         # list item text = $4\n    (\\n{1,2}))\n    (?= \\n* (\\Z | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n    '"
"'\n    (`+)            # $1 = Opening run of `\n    (.+?)           # $2 = The code block\n    (?<!`)\n    \\1              # Matching closer\n    (?!`)\n    '"
"'(\\*\\*|__) (?=\\S) (.+?[*_]*) (?<=\\S) \\1'"
"'(\\*|_) (?=\\S) (.+?) (?<=\\S) \\1'"
"'^[ \\t]*>[ \\t]?'"
"""\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*>[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"""
"'^([ \\t]*)'"
"'<((https?|ftp):[^\\\'\\"">\\s]+)>'"
"'\n      <\n      (?:mailto:)?\n      (\n         [-.\\w]+\n         \\@\n         [-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+\n      )\n      >'"
"'>.+?:'"
"'.*GIRepository[^/]+\\.gir$'"
"'<option value=""[\\w/]+"">\\([A-Z]+(?:\\+|\\-)\\d{4}\\)\\s[\\w/]+</option>'"
"'(?:\'.*?\')|(?:"".*?"")|(?:(?:\\S|(?:\\\\s))+)'"
"'^\r\n'"
"'(?:\'.*?\')|(?:"".*?"")'"
"'^\\s*#'"
"'^(https?)://.*'"
"'^(https?)://([^/]+)(/?.*)'"
"'(ww[^\\.]*\\.)?(.+)'"
"'summarycount"">.*?([,\\d]+)</div>.*?Reputation'"
"'iv class=""summarycount"".{10,60} (\\d+)</d.{10,140}Badges'"
"'Questions</h.*?Answers</h'"
"'Answers</h.*?</table>'"
"'question-summary narrow.*?vote-count-post""><strong.*?>(-?\\d*).*?/questions/(\\d*).*?>(.*?)</a>'"
"'(answer-summary""><a href=""/questions/(\\d*).*?votes.*?>(-?\\d+).*?href.*?>(.*?)<.a)'"
"'for (.*?) (.*?) as (\\w+)'"
"'^pip-.*(zip|tar.gz|tar.bz2|tgz|tbz)$'"
"'/Python(?:-32|-64)*$'"
"'^_.+__(.*)'"
"'%local_bootstrap_repro%'"
"'%local_repro%'"
"'_.*'"
"'^sms_(\\d+)_'"
"'\\b(a|about|above|across|after|afterwards|again|against|all|almost|alone|along|already|also|\nalthough|always|am|among|amongst|amoungst|amount|an|and|another|any|anyhow|anyone|anything|anyway|anywhere|are|\naround|as|at|back|be|became|because|become|becomes|becoming|been|before|beforehand|behind|being|below|beside|\nbesides|between|beyond|bill|both|bottom|but|by|call|can|cannot|cant|co|computer|con|could|couldnt|cry|de|describe|\ndetail|do|done|down|due|during|each|eg|eight|either|eleven|else|elsewhere|empty|enough|etc|even|ever|every|everyone|\neverything|everywhere|except|few|fifteen|fify|fill|find|fire|first|five|for|former|formerly|forty|found|four|from|\nfront|full|further|get|give|go|had|has|hasnt|have|he|hence|her|here|hereafter|hereby|herein|hereupon|hers|herself|\nhim|himself|his|how|however|hundred|i|ie|if|in|inc|indeed|interest|into|is|it|its|itself|keep|last|latter|latterly|\nleast|less|ltd|made|many|may|me|meanwhile|might|mill|mine|more|moreover|most|mostly|move|much|must|my|myself|name|\nnamely|neither|never|nevertheless|next|nine|no|nobody|none|noone|nor|not|nothing|now|nowhere|of|off|often|on|once|\none|only|onto|or|other|others|otherwise|our|ours|ourselves|out|over|own|part|per|perhaps|please|put|rather|re|same|\nsee|seem|seemed|seeming|seems|serious|several|she|should|show|side|since|sincere|six|sixty|so|some|somehow|someone|\nsomething|sometime|sometimes|somewhere|still|such|system|take|ten|than|that|the|their|them|themselves|then|thence|\nthere|thereafter|thereby|therefore|therein|thereupon|these|they|thick|thin|third|this|those|though|three|through|\nthroughout|thru|thus|to|together|too|top|toward|towards|twelve|twenty|two|un|under|until|up|upon|us|very|via|was|\nwe|well|were|what|whatever|when|whence|whenever|where|whereafter|whereas|whereby|wherein|whereupon|wherever|whether|\nwhich|while|whither|who|whoever|whole|whom|whose|why|will|with|within|without|would|yet|you|your|yours|yourself|\nyourselves)\\b'"
"'^Version: \\s+ (\\d+)\\.(\\d+)\\.(\\d+) (?: -beta(\\d+))?'"
"'(\\d+).(\\d+).(\\d+) (?: -(\\d+)-g[0-9a-z]+)?'"
"'\\* (\\w+)'"
"'^v\\d+$'"
"'DRIVER={([^}]+)}'"
"'@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@\\s*(.*)'"
"'diff --git a/(.*) b/(.*)$'"
"'(?:index|new file|deleted file) '"
"'(?:new file|deleted file) '"
"'(?:index|new|deleted|copy|rename) '"
"'^(\\s*)([A-Za-z_]\\w*)\\(\\s*(.*)\\s*\\);\\s*$'"
"'""(mms://[^""]+)""'"
"'<div class=""editiondate""><h1>([^<>]+)</h1></div>'"
"'http://videojts.francetv.fr/player/script.php\\?pn=VideoPlayer&url=([^&]+)&'"
"'<span class=""etxblanc14"">([^<>]+)</span>'"
"'<span class=""etxtblanc10"">([^<>]+)</span>'"
"'control.hasfocus\\(([0-9]+)\\)'"
"'control.isvisible\\(([0-9]+)\\)'"
"'(^[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+(\\.[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+)*|^""([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-\\011\\013\\014\\016-\\177])*"")@(?:[A-Z0-9-]+\\.)+[A-Z]{2,6}$'"
"'\\#c(?P<index>\\d+)\\s*\\{\\s*background(?:-image)?\\:\\s*url\\(data\\:,(?P<value>[^\\)]+)\\);?\\s*}'"
"',[^,]+,[ ]*([0-9]+)'"
"'([0-9]+)[ ]*\\*[ ]*([0-9]+)'"
"'^([0-9]+):([0-9]+)s:([0-9]+)s:([0-9]+)s:([^\\:]*)[;:]'"
"'^[^0-9]* ([0-9]+) '"
"'/[a-zA-Z\\-_/]*$'"
"'.*?^(title.*)'"
"'/+'"
"'^/+'"
"'^www\\.'"
"'(?<=.)/$'"
"'\\.html$'"
"'^[a-zA-Z_0-9.-]*'"
"', ([a-zA-Z0-9_]+)='"
"'\\(([a-zA-Z0-9_]+)='"
"'=[^,)]+,'"
"'=[^,)]+\\)$'"
"'(\\[.{16,16}[^,)]*?),.*?\\]\\)'"
"'\\s*([^\\s]+)\\s+(.+)'"
"'(.+)-.+'"
"'/$'"
"'/static/(.*)'"
"'/out$'"
"'/signin$'"
"'/contactClicked$'"
"'/sendMsg$'"
"'/closeCW$'"
"'/logout$'"
"'/changeMe$'"
"'/changePresence$'"
"'ror.log.'"
"'\\n$'"
"'\\[|\\]'"
"'^(.*)[:|,]'"
"'thank|thx|props|kudos|big ups|10x|cheers'"
"'([a-z0-9_, ]*) \\(([a-z0-9_, ]*)\\)(?: => ([a-z0-9_, ]*))?'"
"'^\\s*#\\s*define\\s+([A-Za-z0-9_]+)\\s+.*?([0-9]+)'"
"'(?i)\\.(anki)$'"
"'\\[sound:([^\\Z]+?)\\]'"
"'\\[image:([^\\Z]+?)\\]'"
"'font-size:([0-9]+)px'"
"'(function[ \\w+\\s*]\\(([^\\)]*)\\)\\s*{)'"
"'(function(\\s+\\w+|)\\s*\\(([^\\)]*)\\)\\s*{)'"
"'(function (\\w+)\\()'"
"'\\s|\n'"
"'<!--.*?-->'"
"'^\\W*(\\w+)\\W*s?\\W?$'"
"'\\\\(\\d+)'"
"'TITLE: (.*)'"
"'DATE: (.*)'"
"'\nBODY:\n(.*?)\n-----\n'"
"'\nEXTENDED BODY:\n(.*?)\n-----\n'"
"'<REUTERS(.*?)</REUTERS>'"
"'<BODY>(.*?)&#3;</BODY>'"
"'<TITLE>(.*?)</TITLE>'"
"'&lt;[A-Z\\s]+>'"
"'target name=""([^""]+)""'"
"'fileset.*SRC_DIR.*includes=""([^""]+)""'"
"'\\s+(get|set)\\s+(\\w+)\\s*\\(([^)]*)\\)'"
"'^\\s*?\n'"
"'PLAYER_\\w+_CODE'"
"'player-([\\w-]+)-code'"
"'typedef\\s+struct\\s+player_\\w+[^}]+\\}[^;]+'"
"'.*\\{\\s*(.*?)\\s*\\}'"
"'\\s*([^;]*?;)'"
"'\\s*\\S+'"
"'\\s*([^,;]+?)\\s*[,;]'"
"'\\[(.*?)\\]'"
"'library file'"
"'SUFFIX (.*)'"
"'\\(.+\\)'"
"'//\\s*(.+)'"
"'EXCLUDE'"
"'Midi Through Port|TiMidity'"
"'^NSWindow Frame (?:.*)$'"
"'^NSNav(?:LastRootDirectory|PanelExpandedSizeForOpenMode)$'"
"'^SU(?:LastCheckTime|HasLaunchedBefore)$'"
"'^Working Directory$'"
"'^([0-9]*(\\.[0-9]+)?)(([:/][0-9]*(\\.[0-9]+)?)|M)?$'"
"'.*([a-fA-Z0-9]{8}-[a-fA-Z0-9]{4}-[a-fA-Z0-9]{4}-[a-fA-Z0-9]{4}-[a-fA-Z0-9]{12}).*'"
"'^(.*?)( \\(disc (\\d+)(: (.*))?\\))?$'"
"'\\((.*), (CD.*)\\)'"
"'\\(disc'"
"'{.*}'"
"'.*\\(([0-9]+)\\).*'"
""".*<type '(.*)'>.*"""
"'(\\D*?)(\\d+)\\D*'"
"'  MIME type: (.*)'"
"'  description: (.*)'"
"'  type: ([0-9]*)'"
"'\\[.*\\]'"
"'\\{.*\\}'"
"'^.*:'"
"'^syscall'"
"'^(beq|bne)\\s\\$.{1,2},\\s\\$.{1,2},.*'"
"'^(j|b|jr)\\s.*'"
"'^(lw|sw)\\s.*'"
"'^(slt|slti)\\s\\$.{1,2},\\s\\$.{1,2},.*'"
"'^move.*'"
"'^[a-zA-Z]{2,4}\\s\\$.{1,2},\\s\\$.{1,2},.*'"
"'^[a-zA-Z]{2,4}\\s'"
"'\\$.{1,2}'"
"'(\\$.{1,2})'"
"'\\d+\\('"
"'\\(\\$.{1,2}\\)'"
"'^jr\\ +\\$.*'"
"'^.*\\+empty_dir:\\strunk/'"
"'^(dot)'"
"'^create'"
"'(?P<urlcmd>\\s*url\\s.*)|(?P<nfscmd>\\s*nfs\\s.*)'"
"'[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F0-9]{2}:[A-F:0-9]{2}:[A-F:0-9]{2}'"
"'[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'"
"'(\\s+|-*\\w{2,}-(?=\\w{2,})|(?<=[\\w\\!\\""\\\'\\&\\.\\,\\?])-{2,}(?=\\w))'"
"'&(#?)(\\d{1,5}|\\w{1,8});'"
"'[ .!]+'"
"'^(\\s*background(?:-image)?\\s*:url\\([\'""])(.*)([\'""]\\).*)'"
"'^zz9\\s*9z[zy]$'"
"'^[0-9\\.]+$'"
"'@tiapi\\(([^\\)]*)\\)(.*)\n'"
"'@tiarg\\[([^]]+)\\](.*)\n'"
"'@tiresult\\[([^]]+)\\](.*)\n'"
"'@tiapi (.*)\n'"
"'@tiarg\\(([^\\)]*)\\)(.*)\n'"
"'@tiresult\\(([^\\)]*)\\)(.*)\n'"
"'@tideprecated\\(([^\\)]*)\\)(.*)\n'"
"'diff --git a/(.*) b/'"
"'^-'"
"'.*Pop: .* Locus: (.+)'"
"' +([0-9]+) , ([0-9]+) * ([0-9]+)'"
"'^(\\w\\s)+'"
"'^\\w+'"
"'""\\s+""'"
"'^TEST-SUMMARY: (\\d+)/(\\d+)'"
"'\n?TEST-SUMMARY: (\\d+)\\/(\\d+)(\nLINES-CALLED: ([\\d,]+))?\n?'"
"'^LINES-CALLED: ([\\d,]+)'"
"'(Changed|Untracked)'"
"'asm-([\\w\\d_\\+\\.\\-]+)(/.*)'"
"'(uapi)/([\\w\\d_\\+\\.\\-]+)(/.*)'"
"'asm-([\\w\\d_\\+\\.\\-]+)'"
"'((\\d|\\w|_)+)'"
"'^\\s*package\\s+([^\\s;]+)\\s*;.*'"
"'(pid: [0-9]+, tid: [0-9]+.*)'"
"""(ABI: '(.*)')"""
"""(Revision: '(.*)')"""
"'(signal [0-9]+ \\(.*\\).*)'"
"""(Abort message: '.*')"""
"'(.*)(\\-\\-\\- ){15}\\-\\-\\-'"
"'("".*"" prio=[0-9]+ tid=[0-9]+ NATIVE.*)'"
"'("".*"" sysTid=[0-9]+ nice=[0-9]+.*)'"
"'$a'"
"'-I(\\S+)'"
"'-l(\\S+)'"
"'-L(\\S+)'"
"'(\\$\\([^\\)]*\\))'"
"""('|\x00|%)"""
"'%(..)'"
"'[&<]'"
"'&([a-zA-Z][a-zA-Z0-9]*|#[0-9]*)?|<([a-zA-Z][^<>]*|/([a-zA-Z][^<>]*)?|![^<>]*)?'"
"'&([a-zA-Z][a-zA-Z0-9]*)[^a-zA-Z0-9]'"
"'&#([0-9]+)[^0-9]'"
"'<[>a-zA-Z]'"
"'<[a-zA-Z][a-zA-Z0-9]*/'"
"'<([a-zA-Z][a-zA-Z0-9]*)/([^/]*)/'"
"'</[<>a-zA-Z]'"
"'[<>]'"
"'<![^<>]*>'"
"'<!--'"
"'--[ \t\n]*>'"
"'[a-zA-Z][a-zA-Z0-9]*'"
"'[ \t\n]*([a-zA-Z_][-.a-zA-Z_0-9]*)([ \t\n]*=[ \t\n]*(\\\'[^\\\']*\\\'|""[^""]*""|[^ \\t\\n]*))?'"
"'<[^!][^>]*?>'"
"'<\\?.+?\\?>'"
"'\\s*([a-zA-Z_][-.a-zA-Z_0-9]*)(\\s*=\\s*(\\\'[^\\\']*\\\'|""[^""]*""|[^ \\t\\n<>]*))?'"
"'tmpl/[^ ]*_js.cs'"
"'File (.*) changed from revision (.*) to (.*)'"
"'File (.*) is new; current revision (.*)'"
"'File (.*) is removed;'"
"'date: ([^; ]*) ([^;]*);  author: ([^;]*);'"
"'/\\*(.*)'"
"'\\s*#\\s*define (\\S+) (.*)'"
"'typedef (\\S+) (.*)'"
"'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*\\);'"
"'[^#]*(\\S+)([ \\*]+)(\\S+)\\s*\\([^\\)]*'"
"'function:\\s*(\\S+)(.*)'"
"'description:\\s*(.+)'"
"'(arguments|input):\\s*(.+)'"
"'(return|returns):\\s*(.+)'"
"'output:\\s*(.+)'"
"'(\\S+):\\s*(.+)'"
"'[ \\*]*(.+)'"
"'([0-9a-f]+) <([^>]+)>:'"
"' <([^>]+)> *$'"
"'^(\\/[^:].*):[0-9]+$'"
"'([^+]+)\\+[0-9a-fx]+'"
"'T ([^ \n]+)$'"
"'\\s*(#.*)?$'"
"'\\s*\\[auto-props\\]'"
"'\\s*[^\\s]+\\s*='"
"'(?<!;);(?!;)'"
"'^\\s*#\\s*include\\s*<(gtest/.+)>'"
"'^\\s*#\\s*include\\s*""(src/.+)""'"
"'/ParamTest'"
"'^\\[\\-+\\] \\d+ tests? from (\\w+(/\\w+)?)'"
"'^\\[\\s*RUN\\s*\\].*\\.(\\w+(/\\w+)?)'"
"'.*[/\\\\](.+)(\\:\\d+|\\(\\d+\\))\\: '"
"'Stack trace:(.|\\n)*?\\n\\n'"
"'\\(\\d+ ms'"
"'\\d+ tests, listed below'"
"'\\d+ FAILED TESTS'"
"'\\d+ tests from \\d+ test cases'"
"'\\d+ tests from ([a-zA-Z_])'"
"'\\d+ tests\\.'"
"'^\\d+(\\.\\d+)?$'"
"'^.*[/\\\\](.*:)\\d+\\n'"
"'\\nStack trace:\\n(.|\\n)*'"
"'AC_INIT\\(.*?\\[(\\d+)\\.(\\d+)\\.(\\d+)\\].*?\\)'"
"'.*/(\\w+).kcm'"
"'(\\w+)\\s*(.*)'"
"""('.')\\s*(.*)"""
"'(0x\\w+)\\s*(.*)'"
"'^\\s*(?P<keyword>[\\w-]+)\\s+{\\s*$'"
"'^(?P<start>\\s*)(?P<xy>[x|y]\\s+)(?P<num>\\d+)(?P<end>\\s*)$'"
"'([^""]*"")([^,]*,)([^,]*,)([^""]*)("".*)'"
"'([^\\s=]+)(?:=(\\S+))?'"
"'skia bench:((?:\\s+([^\\s=]+)(?:=(\\S+))?)*)'"
"'running bench (?:\\[\\d+ \\d+\\] )?\\s*(\\S+)'"
"'(?:(\\w*)msecs = )?\\s*((?:\\d+\\.\\d+)(?:,\\s*\\d+\\.\\d+)*)'"
"'(\\S+[^\\]>]):\\s+((?:(?:(\\w*)msecs = )?\\s*((?:\\d+\\.\\d+)(?:,\\s*\\d+\\.\\d+)*)\\s+)+)'"
"'  tile_(\\S+): tile \\[\\d+,\\d+\\] out of \\[\\d+,\\d+\\] <averaged>: ((?:(?:(\\w*)msecs = )?\\s*((?:\\d+\\.\\d+)(?:,\\s*\\d+\\.\\d+)*)\\s+)+)'"
"' out of \\[(\\d+),(\\d+)\\] <averaged>: '"
"'(\\d+)x(\\d+)'"
"'Bench (\\S+) out of range \\[(\\d+.\\d+), (\\d+.\\d+)\\] \\((\\d+.\\d+) vs (\\d+.\\d+), '"
"'<a href=""/skia/\\+/([0-9a-f]+)"">'"
"'(.+)/(.+)/(.+).png'"
"gm_json.IMAGE_FILENAME_PATTERN"
"'[^\\w\\-]'"
"'.*'"
"'.*-Trybot'"
"'importScripts\\([\\\'""]([^\\\'""]+)[\\\'""]\\)'"
"'interface[\\s]*\\[[^\\]]*Conditional=([\\_0-9a-zA-Z&|]*)'"
"'[|&]$'"
"'([|&])'"
"'messages -> ([A-Za-z_0-9]+) {'"
"'([A-Za-z_0-9]+)\\((.*?)\\)(?:(?:\\s+->\\s+)\\((.*?)\\)(?:\\s+(.*))?)?'"
"'Vector<(.+)>'"
"'^WTF::Vector<.*>$'"
"'^WTF::AtomicString$'"
"'^WTF::CString$'"
"'^WTF::String$'"
"'^WebCore::KURLGooglePrivate$'"
"'^WebCore::QualifiedName$'"
"'^JSC::UString$'"
"'^JSC::Identifier$'"
"'^JSC::JSString$'"
"'bug (?P<bug_id>\\d+)'"
"'patch (?P<patch_id>\\d+)'"
"'^\\s+Reviewed by (?P<reviewer>.*?)[\\.,]?\\s*$'"
"'^(?P<date>\\d{4}-\\d{2}-\\d{2})\\s+(?P<name>.+?)\\s+<(?P<email>[^<>]+)>$'"
"'^== Rolled over to ChangeLog-\\d{4}-\\d{2}-\\d{2} ==$'"
"'^INSTRUMENTATION_STATUS_CODE: -?(\\d+)'"
"'^INSTRUMENTATION_STATUS: test=(.*)'"
"'^INSTRUMENTATION_STATUS: stack=(.*)'"
"'^$'"
"'<.+?>'"
"'[\\s(),;]+'"
"'^([a-z0-9]{7,}) \\(<([^>]+)>.+?\\) (.+?)$'"
"'android\\.R\\.[a-z]+'"
"'[A-Z0-9_]+'"
"'[A-Z]{2,}'"
"'[^A-Z]'"
"'on[A-Z][a-z]*'"
"'[a-z]([a-zA-Z]+)?'"
"'[ms][A-Z]'"
"'[A-Z_]+'"
"'on[A-Z]'"
"'[^\\w-]+'"
"'^INSTRUMENTATION_STATUS_CODE: -1'"
"'^OK \\([0-9]+ tests?\\)'"
"'DTSTART;TZID=(.*):(.*)'"
"'DTSTART:(.*)'"
"'DURATION:(.*)'"
"'RRULE:(.*)'"
"'(....)-(..)-(..)T(..):(..):(..)....([+-])(..):(..)'"
"'(....)-(..)-(..)T(..):(..):(..)....Z'"
"""^.*[$ \t'].*$"""
"'^([^@:]*@?[^:/]{1,}):'"
"'^([a-z][a-z+]*)://([^@/]*@?[^/]*)/'"
"'^VERSION *='"
"'^(.*) <([^>]*)> '"
"'^([1-9][0-9]*)(?:[/\\.-]([1-9][0-9]*))?$'"
"'^[a-z0-9A-Z_/\\.-]+$'"
"'^\\n?([^\\n]{1,})\\n([=~-]{2,})$'"
"'^.*-[0-9]{1,}-g[0-9a-f]{1,}$'"
"'^#?\\s*project\\s*([^\\s]+)/:$'"
"'^\\s*branch\\s*([^\\s(]+)\\s*\\(.*'"
"'^\\s*Change-Id: I([0-9a-f]{40})\\s*$'"
"'_([0-9]{1,6})_'"
"'(.*)\\?'"
"'""([0-9]{1,6})"".*""(.*)""'"
"'.*(?<!__init__)\\.py$'"
"'^[a-zA-Z0-9+\\(\\);.$][a-zA-Z0-9+\\(\\);.$-]{0,199}$'"
"'(.+)-\\w+\\.cml'"
"'\\s\\*+\\sSymmetrised\\sStress\\sTensor\\s\\*+\n.+\n.+?\\((\\w+)\\).+\n.+\n.+\n.+\n\\s\\*\\s+x\\s+([\\+\\-]?\\d+.\\d+)\\s+([\\+\\-]?\\d+.\\d+)\\s+([\\+\\-]?\\d+.\\d+)\\s+\\*\n\\s\\*\\s+y\\s+[\\+\\-]?\\d+.\\d+\\s+([\\+\\-]?\\d+.\\d+)\\s+([\\+\\-]?\\d+.\\d+)\\s+\\*\n\\s\\*\\s+z\\s+[\\+\\-]?\\d+.\\d+\\s+[\\+\\-]?\\d+.\\d+\\s+([\\+\\-]?\\d+.\\d+)\\s+\\*\n'"
"'\\s*(#|$)'"
"'\\s*else\\s*:\\s*(#|$)'"
"'(http://|www\\.)[^ ]*'"
"'(?ms)^.*\\*\\*\\*\\s*START\\s[^\n]*\\sPROJECT\\s+GUTENBERG\\s*EBOOK[^\n]*'"
"'(?ms)\\*\\*\\*\\s*END\\s[^\n]*\\sPROJECT\\s+GUTENBERG\\s+EBOOK.*\\Z'"
"'[^a-zA-Z0-9.-]'"
"'__[0-9]+__'"
"""\n^                               # BEGIN\n\\{                              # meta decorator, open\nFSHP                            # fshp signature\n(?P<variant>\\d+)                # variant\n\\|                              # meta separator\n(?P<saltlen>\\d+)                # salt length\n\\|                              # meta separator\n(?P<rounds>\\d+)                 # number of hash iterations\n\\}                              # meta decorator, close\n(?P<b64saltdigest>[\\d\\w\\+\\/=]+) # Base64 encoded 'salt' + 'digest'\n$                               # END\n"""
"'^.*:(?=[^:]*:$)'"
"'[\\w\\d-]*'"
"'^[a-f0-9]{5}$'"
"'/([a-z]{2})'"
"'(?:(?<=>)|\\A)([^<>]+)(?:(?=<)|\\Z)'"
"'\\bmy\\b'"
"'Version:\\s*(\\S*)'"
"'\\.(mak|mdp|ide|exe|ico|gz|zip|xls|sxd|gif|vcp|vcproj|vcw|sln|dfm|jpg|png|vsd|bz2|pdf|ppt|graffle|pptx|odt)$'"
"'^\\s*(\\w+) +VERSION ?:'"
"'(\\d\\.)+\\d?'"
"'(libace|libkokyu|libtao)(.*)(\\d+\\.\\d+\\.\\d+)(.*)'"
"'tao'"
"'^(Package|Depends|Suggests):'"
"'(\\d+)x(\\d+)[\\+-](\\d+)[\\+-](\\d+)'"
"'http://en.pastebin.ca/\\d+'"
"'content=[""]7;([^""]*)'"
"'[&]amp[;]'"
"'[&]quot[;]'"
"'[&][#]039[;]'"
"'[&]lt[;]'"
"'[&]gt[;]'"
"'([a-zA-Z0-9_.]+)'"
"'[a-z0-9]+'"
"'>>> (.*)'"
"'<newLocation[^>]*>(.*?)</newLocation>'"
"'([^\'""<>]|""[^""]*""(?=>|/|\\s|\\w+=)|\'[^\']*\'(?=>|/|\\s|\\w+=))*(?=[<>])|.*?(?=[<>])'"
"'</?(\\w+)'"
"'(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))(\\?subject=\\S+)?'"
"';+$'"
"'<\\S[^>]*>'"
"'\\bvcard\\b'"
"'\\btag\\b'"
"'\\benclosure\\b'"
"'.+'"
"'\\{(\\w+)\\}'"
"'^[- \\+\\\\]'"
"'^@@ -(\\d+)(,(\\d+))? \\+(\\d+)(,(\\d+))?'"
"'^--- ([^\t]+)'"
"'^\\+\\+\\+ ([^\t]+)'"
"u'(?P<year>\\d\\d\\d\\d)(?:-(?P<month>\\d\\d)(?:-(?P<day>\\d\\d)(?:T(?P<hour>\\d\\d)(?::(?P<minute>\\d\\d)(?::(?P<second>\\d\\d))?)?)?)?)?Z'"
"u'[\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x0b\\x0c\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f]'"
"'^%!TEX\\s+([\\w-]+)\\s*=\\s*(.*)'"
"'([^%]|^)(\\\\include)\\{([\\w /\\.\\-]+)\\}'"
"'([^%]|^)(\\\\input)\\{([\\w /\\.\\-]+)\\}'"
"'([^%]|^)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w\\-]+)\\}'"
"u'([`$\\\\""])'"
"u'^%!TEX\\s+([\\w-]+)\\s*=\\s*(.*)'"
"u'([^%]|^)(\\\\include)\\{([\\w /\\.\\-]+)\\}'"
"u'([^%]|^)(\\\\input)\\{([\\w /\\.\\-]+)\\}'"
"u'([^%]|^)\\\\usepackage(\\[[\\w, \\-]+\\])?\\{([\\w\\-]+)\\}'"
"u'.aux$'"
"u'([^%]|^)\\\\makeindex(\\[([\\w]+)\\])?'"
"'Input index file (.*) not found'"
"'Warning--(.*)'"
"'--line (\\d+) of file (.*)'"
"""I couldn't open \\w+ file"""
"'This is'"
"'Document Class'"
"'Output written on (.*) (\\(.*\\))'"
"'Package \\w+ Warning:.*?input line (\\d+)(\\.|$)'"
"'Package \\w+ Warning:.*'"
"'([^:]*):(\\d+):\\s+(pdfTeX warning.*)'"
"'.*?([^:]+\\.\\w+):(\\d+):\\s+(.*)'"
"'Error: pdflatex'"
"'\\s+==>'"
"'([\\(\\)])([\\w/\\.\\-]*)'"
"'(.*[^a-zA-Z])([a-zA-Z]*[Tt]e[Xx] (?:warning|error).*)'"
"'Package (\\w+) Warning:.*'"
"u'Input index file (.*) not found'"
"u'Warning--(.*)'"
"u'--line (\\d+) of file (.*)'"
"u'I found no \\\\\\w+ command'"
"u""I couldn't open style file"""
"u""I couldn't open \\w+ file"""
"u'This is BibTeX'"
"u'The style'"
"u'Database'"
"u'---'"
"u'This is'"
"u'Document Class'"
"u'.*\\<use (.*?)\\>'"
"u'Output written on (.*) (\\(.*\\))'"
"u'LaTeX Warning:.*?input line (\\d+)(\\.|$)'"
"u'Package \\w+ Warning:.*?input line (\\d+)(\\.|$)'"
"u'LaTeX Warning:.*'"
"u'Package \\w+ Warning:.*'"
"u'([^:]*):(\\d+):\\s+(pdfTeX warning.*)'"
"u'.*pdfTeX warning.*'"
"u'LaTeX Font Warning:.*'"
"u'Overfull.*wide'"
"u'Underfull.*badness'"
"u'([^:]*):(\\d+): LaTeX Error:(.*)'"
"u'([^:]*):(\\d+): (Emergency stop)'"
"u'.*?([^:]+\\.\\w+):(\\d+):\\s+(.*)'"
"u'Transcript written on (.*)\\.$'"
"u'Error: pdflatex'"
"u'\\!.*'"
"u'\\s+==>'"
"u'^\\s*$'"
"u'([\\(\\)])([\\w/\\.\\-]*)'"
"u'[Ee]rror'"
"u'^ ==> Fatal error occurred'"
"u'This is (pdfTeXk|latex2e|latex|XeTeXk)'"
"u'^Latexmk: All targets \\(.*?\\) are up-to-date'"
"u'This is makeindex'"
"u'^Latexmk'"
"u'Run number'"
"u'(.*[^a-zA-Z])([a-zA-Z]*[Tt]e[Xx] (?:warning|error).*)'"
"u'Package (\\w+) Warning:.*'"
"'^[^ ]+ +[^ ]+ +SECT[^ ]+ +[^ ]+ +\\(\\) +External +\\| +(\\?[^ ]*)(.*)\\n'"
"'^[^ ]+ +[^ ]+ +SECT[^ ]+ +[^ ]+ +External +\\| +(\\?[^?][^ ]*)(.*)\\n'"
"'deleting destructor[^(]+\\(unsigned int\\)|anonymous namespace'"
"'^code\\( ([^ \\t,]+)[ \\t]*,[ \\t]*([^ ]+)'"
"'([/\\.\\\\])'"
"'@([^@]*)@'"
"""'classes':\\s*'(.*?)'"""
"'fields\\s*='"
"'^class (\\w+).*$'"
"'(\\w+) *= *([a-zA-Z0-9._]+)'"
"'prepopulate_from=(\\(.+?\\))'"
"'_xx_'"
"'_x_'"
"'__.*'"
"'^\\./'"
"'([\\s\\xa0]+|&nbsp;)'"
"'^(var )?sc_project\\=\\d+;$'"
"'^http://www\\.google\\.com/calendar/embed\\?[\\w&;=\\%]+$'"
"'(.*)\\(\\)'"
"'line (\\d+), column (\\d+)'"
"'\\$([a-zA-Z]\\w*)'"
"'[A-Z]+'"
"'""([^\\""]+|\\\\.)*""'"
"'\n    (?:                 # non-capturing group\n        \\A              # start: match the beginning of line\n        | [\\s\\.,:;\'""]   # or any of: whitespace, period, comma, colon, etc...\n    )\n    (@                  # capture group \\1, contains the full @username\n        (\\w{1,15})      # capture group \\2, the 1-15 char username without @\n    )\n    (?!                 # but don\'t match if followed by\n        \\.?             # zero or one periods\n        \\w              # followed by any word character\n    )'"
"'(.*)(<h3.*>.*</h3>)?(.*)<dl class.*'"
"'(.*)(\\sposted a \\w+\\sworkout)'"
"'\n                   BEGIN:VCARD.*END:VCARD\n                   '"
"'\n                    \n                    \\n                        # lessen the chance of picking up something from the body.\n                    Subject:\\s*               # find our line\n                    ([^\\r]*)                  # grab anything up to a new line\n                    \\r?\\n                     # end of line, go home.\n                        \n                  '"
"'\n                    \n                    Date:\\s{0,5}\\w{3},\\s        #     find the beginning of the delivery date string, including the day of the week.\n                    (\\d{1,2})                   # (1) date: 1-31\n                    \\s                          #     space\n                    (\\w{3})                     # (2) month: 3 letter abbrev\n                    \\s                          #     space\n                    (\\d{2,4})                   # (3) year: 2 or 4 digit\n                    \\s                          #     space\n                    (                           # (4) we capture the entire time as a string, might as well.\n                        (\\d{1,2})               # (5) hour: 0-24\n                        :                       #     time separator\n                        (\\d{1,2})               # (6) minutes: 0-59\n                        :                       #     time separator\n                        (\\d{1,2})               # (7) seconds: 0-59\n                    )\n                    \\s                          #     space\n                    (-)                         # (8) plus or minus from UTC/GMT\n                    (\\d{4})                     # (9) time offset\n\n                  '"
"'-|T|:|\\.| '"
"'[, _]+'"
"':\\d\\d '"
"'books = ""<strong>[\\d,]+</strong>""'"
"'[^[:alphanum:] ]'"
"'^/languages/([a-z]{3})$'"
"'</div>\n</body>\n</html>[ \n]*$'"
"'Personalized for (.*) \\((Boy|Girl)\\)'"
"'/dp/([^/]*)'"
"'Showing (?:[\\d,]+ - [\\d,]+ of )?([\\d,]+) Result'"
"'%2Cn%3A(\\d+)'"
"u'^\xa0\\(([\\d,]+)\\)$'"
"',n:(4|28)(?:&page=\\d+)?$'"
"'; charset=(.+)\r\n'"
"'^([A-Z0-9]{10}),(\\d+):(.*)$'"
"'[^\\w ]'"
"'^(.+) \\([^)]+?\\)$'"
"'([^/]+)_(meta|marc)\\.(mrc|xml)'"
"'^http://www.amazon.com/[^/]+/dp/([0-9A-Z]{10})/'"
"'^Showing ([,0-9]+) - ([,0-9]+) of ([,0-9]+) Results$'"
"'^http://www\\.amazon\\.com/(?:(.*)/dp|gp/product)/(\\d{9}[\\dX]|B[A-Z0-9]+)$'"
"'^ \\(([^)]+)\\)'"
"'\n    (?:\\ \\[([A-Za-z, ]+)\\])? # flags\n    (?:\\(\\ ([^()]+|[^()]*\\(.*\\)[^()]*)\\))?\n    '"
"'^\n    (.+?(?:\\ \\(.+\\))?)\n    (?::\\ (\\ *[^:]+))?$\n'"
"'\n\n(~  )?\\(([A-Za-z, ]+)\\), '"
"'^\\$([\\d,]+)\\.(\\d\\d)$'"
"'^\\$([\\d,]+)\\.(\\d\\d)\\s*\\((\\d+)%\\)\\s*$'"
"'^\\s*(\\d+)(?:\\.0)? pages\\s*$'"
"'^ #([0-9,]+) in Books'"
"'</?(i|em|br)>'"
"'^<li>(?:This is item <b>(\\d+)</b> in|This item is part of) <a href=""?/gp/series/(\\d+).*?><b>The <i>(.+?)</i> Series</b></a>\\.</li>'"
"'^(.*) \\((.*\\d{4})\\)$'"
"'^(.*); (.*)$'"
"'\\s*(.*?) latest blog posts'"
"'^/gp/blog/([A-Z0-9]+)$'"
"'\nThis book cites (\\d+) \nbook(?:s)?:'"
"'\n(\\d+) \nbook(?:s)? \ncites? this book:'"
"'<title>Amazon.com: (.*?)(:?, Page \\d+)?</title>'"
"'\\d{2,}[- ]*(\\.+)$'"
"'Full version: (\\d+[.]\\d+[.]\\d+)'"
"'ATLAS version (?P<version>\\d+[.]\\d+[.]\\d+)'"
"'^Driving:'"
"'\\S+\\.a'"
"'-l\\S+'"
"'-lang*'"
"'^-[LRuYz]$'"
"'^-[RL]'"
"'gcc version ([0-9-.]+)'"
"'Intel.*?C Compiler.*?Version ([0-9-.]+)'"
"'Intel.*?Fortran Compiler.*?Version ([0-9-.]+)'"
"'Sun Ceres C ([0-9-.]+)'"
"'Sun C ([0-9-.]+)'"
"'Sun Ceres C\\+\\+ ([0-9-.]+)'"
"'Sun C\\+\\+ ([0-9-.]+)'"
"'Sun Ceres Fortran 95 ([0-9-.]+)'"
"'Sun Fortran 95 ([0-9-.]+)'"
"'([0-9]).([0-9])'"
"'^\\s*\\|'"
"'include\\s*[\'\\""](\\S+)[\'\\""]'"
"'^\\s*-'"
"'[(]([^)]*)[)]\\*(\\d+)'"
"'([^*]+)\\*(\\d+)'"
"'\\n\\s*\\*?'"
"'#\\s*(\\w*)\\s*=([^#]*)#'"
"'@([\\w]+)@'"
"'(\\n|\\A)#include\\s*[\'\\""](?P<name>[\\w\\d./\\\\]+[.]src)[\'\\""]'"
"'(\\n|\\A)((     (\\$|\\*))|)\\s*(subroutine|function)\\b'"
"'\\n\\s*end\\s*(subroutine|function)\\b.*(\\n|\\Z)'"
"'\\n     (\\$|\\*)\\s*function\\b'"
"'<\\s*(\\w[\\w\\d]*)\\s*>'"
"'<\\s*(\\w[\\w\\d]*)\\s*=\\s*(.*?)\\s*>'"
"'<\\s*((.*?))\\s*>'"
"'\\A\\\\(?P<index>\\d+)\\Z'"
"'\\A\\s*(\\w[\\w\\d]*)\\s*\\Z'"
"'(\\n|\\A)\\s*include\\s*[\'\\""](?P<name>[\\w\\d./\\\\]+[.]src)[\'\\""]'"
"' *'"
"'^[\'""](.*)[\'""]$'"
"'[^A-Z0-9_]'"
"'flags'"
"'mmx'"
"'http://\\S*'"
"'\\s*ERROR:'"
"'Missing value encountered in output field (?P<field>\\w*)\n'"
"'^\\s*name\\s*=\\s*(?P<val>\\w*)\\s*$'"
"'[+-]?[0-9]+'"
"'[+-]?([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)'"
"'\\b(([\\+\\-]?[0-9]+)?\\.)?[0-9]*([eE][-+]?[0-9]+)?'"
"'(\\.(true|false|t|f)\\.)'"
"'(\\.(true|t)\\.)'"
"'[\\s\\t]*[\\\'\\""]'"
"'(::|\\.\\.|\\(\\)|[/.*:\\[\\]\\(\\)@=])|((?:\\{[^}]+\\})?[^/:\\[\\]\\(\\)@=\\s]+)|\\s+'"
"'([a-zA-Z][a-z][a-z])\\s*([0-9][0-9]*)\\s*([0-9][0-9]:[0-9][0-9])\\s*Eiffel([0-9][0-9])_gpl_([0-9][0-9]*)-([a-z][a-z0-9-]*)\\.([a-z0-9][a-z0-9\\.]*)'"
"'([a-zA-Z][a-z][a-z])\\s*([0-9][0-9]*)\\s*([0-9][0-9]:[0-9][0-9])\\s*eiffelstudio-[0-9].[0-9]_([0-9].[0-9]).([0-9].[0-9][0-9]*)-[0-9]_([a-z][a-z0-9-]*)\\.([a-z0-9][a-z0-9\\.]*)'"
"'^\\s*([0-9][0-9]*)\\s*'"
"'^([a-z0-9][a-zA-Z0-9_]+)\\.py$'"
"'^([a-z0-9][a-zA-Z0-9_-]+)\\.py$'"
"'^.*(<table.*<\\/table>).*$'"
"'^/[^ \t\n]*$'"
"'\\b(([A-Z]+[a-z]+){2,})\\b'"
"'[/\\\\]'"
"'^(?P<line>.*)\\[\\[(?P<commands>.*)\\]\\]$'"
"'(?P<func>\\w+)\\(\\s*\\""(?P<param>.*)\\""\\s*\\)'"
"'^[^#]+[#$] '"
"'^[^>]+> '"
"'[^#]*\\s+\\bdo\\b(\\s*|(\\s+\\|.+\\|\\s*))|\\s*(\\bif\\b\\s+.*|\\belsif\\b.*|\\belse\\b.*|\\bdo\\b(\\s*|\\s+.*)|\\bcase\\b\\s+.*|\\bwhen\\b\\s+.*|\\bwhile\\b\\s+.*|\\bfor\\b\\s+.*|\\buntil\\b\\s+.*|\\bloop\\b\\s+.*|\\bdef\\b\\s+.*|\\bclass\\b\\s+.*|\\bmodule\\b\\s+.*|\\bbegin\\b.*|\\bunless\\b\\s+.*|\\brescue\\b.*|\\bensure\\b.*)+'"
"'^\\s*(else.*|end\\s*|elsif.*|rescue.*|when.*|ensure.*)$'"
"'\\s*[^#]{3,}:\\s*(#.*)?'"
"'^\\s*(else|elif\\s.*|except(\\s.*)?|finally)\\s*:'"
"'\\s*(((if|while)\\s*\\(|else\\s*|else\\s+if\\s*\\(|for\\s*\\(.*\\))[^{;]*)'"
"'^.*(default:\\s*|case.*:.*)$'"
"'\\s*(((if|while|else\\s*(if)?|for(each)?|switch|declare)\\s*\\(.*\\)[^{:;]*)|(do\\s*[^\\({:;]*))'"
"'.*?(?:(private|protected) +)?function +(\\w+)(\\(.*\\)) *\\{$'"
"'.*class +(\\w+)(?: +extends +(\\w+))? *\\{$'"
"'<(.*?)>'"
"'(?P<client_ip>\\d+\\.\\d+\\.\\d+\\.\\d+) (?P<ident>-|\\w*) (?P<user>-|\\w*) \\[(?P<date>[^\\[\\]:]+):(?P<time>\\d+:\\d+:\\d+) (?P<tz>.\\d\\d\\d\\d)\\] ""(?P<method>[^ ]+) (?P<path>[^ ]+) (?P<proto>[^""]+)"" (?P<status>\\d+) (?P<length>-|\\d+) ""(?P<referrer>[^""]*)"" (?P<user_agent>"".*"")\\s*\\Z'"
"'([ \\""\'\\\\\\$])'"
"'private(.*)function'"
"'protected(.*)function'"
"'var(.*)\\$'"
"'private(.*)\\$'"
"'protected(.*)\\$'"
"'(^[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+(\\.[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+)*|^""([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-011\\013\\014\\016-\\177])*"")@(?:[A-Z0-9-]+\\.)+[A-Z]{2,6}$'"
"'^(?P<century>\\d{2})?(?P<year>\\d{2})(?P<month>\\d{2})(?P<day>\\d{2})(?P<sign>[\\-+])?(?P<serial>\\d{3})(?P<checksum>\\d)$'"
"'^[1-9]\\d{2} ?\\d{2}$'"
"'""(?:[^\\\\""]|\\\\.)*""|[-\\w.]+'"
"'[ \t\r\x0c\x0b]*\n\\s*'"
"'%(%|[0-9]+)'"
"'^[a-z]*$'"
"'\\[\\[([\\w\\W]+?)\\]\\]'"
"'\\A(\\d{4})-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)Z\\Z'"
"'\\A0+'"
"'\\A[ -~]{1,79}\\Z'"
"'\\A\\$(.{1,79})\\*([0-9A-F]{2})\r\n\\Z'"
"'[^ -~]'"
"'\\APBRMEMR,([0-9A-F]+),([0-9A-F]+(?:,[0-9A-F]+)*)\\Z'"
"'\\APBRRTS,(\\d+),(\\d+),0+,(.*)\\Z'"
"'\\APBRRTS,(\\d+),(\\d+),(\\d+),([^,]*),(.*?)\\Z'"
"'\\APBRSNP,([^,]*),([^,]*),([^,]*),([^,]*)\\Z'"
"'\\APBRTL,(\\d+),(\\d+),(\\d+).(\\d+).(\\d+),(\\d+):(\\d+):(\\d+),(\\d+):(\\d+):(\\d+)\\Z'"
"'\\APBRWPS,(\\d{2})(\\d{2})\\.(\\d{3}),([NS]),(\\d{3})(\\d{2})\\.(\\d{3}),([EW]),([^,]*),([^,]*),(\\d+)\\Z'"
"'\\APBRWPS,(\\d{2})(\\d{2})\\.(\\d{3}),([NS]),(\\d{3})(\\d{2})\\.(\\d{3}),([EW]),([^,]*),([^,]*),(\\d+),(\\d+)\\Z'"
"'\\.0*\\Z|0+\\Z'"
"'([ \\t]*)'"
"'raise\\s+\\w+\\s*(,)'"
"'(Okay|W\\d\\d\\d|E\\d\\d\\d):\\s(.*)'"
"'\\blambda\\b'"
"'^[a-zA-Z0-9]+$'"
"'^[0-9a-f]{40}\n$'"
"""^'/*(?P<path>[a-zA-Z0-9][a-zA-Z0-9@._-]*(/[a-zA-Z0-9][a-zA-Z0-9@._-]*)*)'$"""
"'^[a-zA-Z][a-zA-Z0-9_.-]*(@[a-zA-Z][a-zA-Z0-9.-]*)?$'"
"'(\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\x1b\\][0-9];.*?\x07|[\x01-\x0f]|\x1b\\([AB0])'"
"'^[\x01-\x0f]$'"
"'^\x1b\\['"
"'^\x1b\\]'"
"'^\x1b#'"
"'^\x1b.$'"
"'^\x1b[()]'"
"'^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$'"
"'(\x1b\\[[0-9;]+VK)'"
"'((.)\\2*)'"
"'X-Transmission-Session-Id:\\s*(\\w+)'"
"'(high|normal|low|off)'"
"'^~'"
"'</h\\d+>'"
"'</p>'"
"'(\\d{3})'"
"'\n        ([A-Za-z]{1,8}(?:-[A-Za-z]{1,8})*|\\*)   # ""en"", ""en-au"", ""x-y-z"", ""*""\n        (?:;q=(0(?:\\.\\d{,3})?|1(?:.0{,3})?))?   # Optional ""q=1.00"", ""q=0.8""\n        (?:\\s*,\\s*|$)                            # Multiple accepts per header.\n        '"
"'^\\s*trans\\s+((?:"".*?"")|(?:\'.*?\'))\\s*'"
"'^\\s*blocktrans(?:\\s+|$)'"
"'^\\s*endblocktrans$'"
"'^\\s*plural$'"
"'_\\(((?:"".*?"")|(?:\'.*?\'))\\)'"
"'[ivx\\d]'"
"'^/\\d{1,2}/items/.+_djvu.xml$'"
"'\\n\\r?\\n$'"
"'^\\r?\\n\\r?\\n'"
"'^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$'"
"'\\.\\W*$'"
"'(\\{\\{\\{|\\}\\}\\})'"
"'^/\\d+/items/([^/]+)'"
"'^[^<]*<title>[^<]*</title>.*$'"
"'^[ ]*#title[ ]*(.*)[ ]*$'"
"'^[ ]*\\*[ ]+(.*)[ ]*$'"
"'^([a-fA-F\\d]{32})$'"
"'fax-.*\\.txt'"
"'voice-.*\\.la'"
"'voice-([0-9]+)\\.la'"
"'(.*?)=(.*?)[;|$]'"
"'--mode (.*) '"
"'--resolution (.*)dpi '"
"'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>\\d+)'"
"'(?P<table>\\w+)\\.(?P<field>\\w+)=(?P<value>.+)'"
"'\\[(.*?)\\][^\\:]+\\:\\s+(\\-?\\d+)'"
"'#\\s*(todo)+\\s+(.*)'"
"'^@|\n'"
"'^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2}).\\d+Z$'"
"'(\\d\\d?):(\\d\\d)(:(\\d\\d))? *([aApP]\\.?[mM]\\.?)?$'"
"'(^[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+(\\.[-!#$%&\'*+/=?^_`{}|~0-9A-Z]+)*|^""([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-011\\013\\014\\016-\\177])*"")$'"
"'^(?!(item|comment)-[0-9]+$)'"
"'(item|comment)-(\\d+)'"
"'(?i)<img[^>]+transclusion_(\\d+)[^>]*>'"
"'\none(![ir])\n'"
"'\n[aeio]|\nu([aeiou]|[^n][^aeiou]|ni[^dmnl]|nil[^l])|\nh(ier|onest|onou?r|ors\\b|our(!i))|\n[fhlmnrsx]\\b\n'"
"'coding *: *(.+)[ \n]'"
"'revtpl=\\S*'"
"'\\{(.*)\\}(.*)'"
"'(\\d+):(\\d+)(\\S+)'"
"'(.*) - (.*)'"
"'(\\d+:\\d+.m - \\d+:\\d+.m)'"
"'<link rel=""pavatar"" href=""([^""]+)"" ?/?>'"
"'<link rel=""icon"" href=""([^""]+)"".*/?>'"
"'@(\\S+)'"
"'#.*'"
"'\\.pack'"
"'^[A-Z]+$'"
"'\\.json$'"
"'^\\w+:'"
"'^/([-._a-z0-9]*)/([-._a-z0-9]+)$'"
"'(?P<neg>-)?(?P<numer>\\d{1,2})?pi/?(?P<denom>\\d)?'"
"'<td style=""width: 45px;"">\\s*<i>(?P<date>[^<]+)</i>\\s*</td>\\s*<td>\\s*\\$(?P<amount>\\d+) - (<a href=""http://forums\\.alliedmods\\.net/member\\.php\\?u=(?P<forum_uid>\\d+)"">)?(?P<name>[^<]+)(</a>)?\\s*(\\(<a href=""(?P<homepage>[^""]*)"">homepage</a>\\))?\\s*</td>'"
"'<td style=""width: 45px;"">\\s*\\$(?P<amount>\\d+)\\s*</td>\\s*<td>\\s*(<a href=""http://forums\\.alliedmods\\.net/member\\.php\\?u=(?P<forum_uid>\\d+)"">)?(?P<name>[^<]+)(</a>)?\\s*(\\(<a href=""(?P<homepage>[^""]*)"">homepage</a>\\))?\\s*</td>'"
"'(\\??([\\w\\d_-]+::)?[\\w\\d_-]+)(=(\'[^\']+\'|""[^""]+""|([^),]+)))?'"
"'^#.*$'"
"'^(\\s)*%include (.+)$'"
"'\t*'"
"'[ ]*'"
"'[\\s\n]'"
"'\\d[.]\\d+[.]\\d+'"
"'a\\d'"
"'b\\d'"
"'rc\\d'"
"'.dev-'"
"'[-0-9 ]*-[ ]*(.*)'"
"'[\\s\\n,]+'"
"'^\\d+\\.\\d+\\.\\d+\\.\\d+$'"
"'(\\[[-\\w.# ]+\\])|(\\[\\[\\])'"
"'^[\\d.:]+$'"
"'^[^:]*[\\d:]+$'"
"u'(?u)#(x?\\d+)'"
"u'(?u)&(.+?);'"
"u'[<>:""\\|\\?\\*]'"
"'(?i)^(\\d+(?:\\.\\d+)?)([kMGTPEZY]?)$'"
"u'(?u)%\\(.+?\\)s'"
"'^((?:http://)?(?:\\w+\\.)?youtube\\.com/(?:(?:v/)|(?:(?:watch(?:\\.php)?)?[\\?#](?:.+&)?v=)))?([0-9A-Za-z_-]+)(?(1).+)?$'"
"'(?i)<form[^>]* name=""loginForm""'"
"'<meta name=""description"" content=""(.*)""(?:\\s*/)?>'"
"'(?:http://)?(?:www\\.)?metacafe\\.com/watch/([^/]+)/([^/]+)/.*'"
"'^yt-(.*)$'"
"'(?m)&mediaURL=([^&]+)'"
"'(?im)<title>(.*) - Video</title>'"
"'(?ms)By:\\s*<a .*?>(.+?)<'"
"'(?:http://)?video\\.google\\.(?:com(?:\\.au)?|co\\.(?:uk|jp|kr|cr)|ca|de|es|fr|it|nl|pl)/videoplay\\?docid=([^\\&]+).*'"
"""download_url:'([^']+)'"""
"'(?i)videoUrl\\\\x3d(.+?)\\\\x26'"
"'<title>(.*)</title>'"
"'<span id=short-desc-content>([^<]*)</span>'"
"'<img class=thumbnail-img (?:.* )?src=(http.*)>'"
"'(?:http://)?(?:[a-z0-9]+\\.)?photobucket\\.com/.*[\\?\\&]current=(.*\\.flv)'"
"'<link rel=""video_src"" href="".*\\?file=([^""]+)"" />'"
"'<title>(.*) video by (.*) - Photobucket</title>'"
"'(?:http://)?(?:[a-z]+\\.)?video\\.yahoo\\.com/(?:watch|network)/([0-9]+)(?:/|\\?v=)([0-9]+)(?:[#\\?].*)?'"
"'\\(""id"", ""([0-9]+)""\\);'"
"'\\(""vid"", ""([0-9]+)""\\);'"
"'<meta name=""title"" content=""(.*)"" />'"
"'<h2 class=""ti-5""><a href=""http://video\\.yahoo\\.com/(people|profile)/[0-9]+"" beacon="".*"">(.*)</a></h2>'"
"'<link rel=""image_src"" href=""(.*)"" />'"
"'<meta name=""description"" content=""(.*)"" />'"
"'<meta name=""video_height"" content=""([0-9]+)"" />'"
"'<meta name=""video_width"" content=""([0-9]+)"" />'"
"'<STREAM APP=""(http://.*)"" FULLPATH=""/?(/.*\\.flv\\?[^""]*)""'"
"'(?u)&(.+?);'"
"'flashvars: [\\\'""](?:.*&)?file=(http[^\\\'""&]*)'"
"'[^A-Za-z0-9]?(?:file|source)=(http[^\\\'""&]*)'"
"'(?:https?://)?([^/]*)/.*'"
"'ytsearch(\\d+|all)?:[\\s\\S]+'"
"'gvsearch(\\d+|all)?:[\\s\\S]+'"
"'yvsearch(\\d+|all)?:[\\s\\S]+'"
"'(?:http://)?(?:\\w+\\.)?youtube.com/(?:(?:view_play_list|my_playlists)\\?.*?p=|user/.*?/user/)([^&]+).*'"
"'(?:http://)?(?:\\w+\\.)?youtube.com/user/(.*)'"
"'[\\?\\&]gsessionid=(\\w*)'"
"'(http://)(\\w*)'"
"'(tag:blogger.com,1999:blog-)(\\w*)'"
"'tag:blogger.com,1999:user-(\\d+)\\.blog-(\\d+)'"
"'(tag:blogger.com,1999:blog-)(\\w*)(.post-)(\\w*)'"
"'.*-(\\w*)$'"
"'.*\\.([a-zA-Z]{3,}$)'"
"'^([a-z]*)(:|%3A)([\\w-]*)$'"
"'/maps/feeds/maps/(?P<user_id>\\w+)/(?P<map_id>\\w+)$'"
"'/maps/feeds/features/(?P<user_id>\\w+)/(?P<map_id>\\w+)/(?P<feature_id>\\w+)$'"
"'.*(kind=)(album|tag|photo|comment)'"
"'[^a-zA-Z0-9_:-]'"
"'^http:\\/\\/(\\w+\\.douban\\.com)(\\/.*)$'"
"'/chr(.*).geno'"
"'hello'"
"'^(svn([+]ssh)?|http[s]?|file)://.*$'"
"'([^ ]+)/([^ /]+)/\n                    (TRUNK|BRANCHES|TAGS|trunk|branches|tags|Trunk|Branches|Tags)\n                    (/([^ ]*))?$'"
"'/(.+?:)/'"
"'#(.+?)#'"
"'(\\[[\\w ]+\\])?\\\\\\$'"
"'[a-zA-Z]\\w*'"
"'/view/'"
"'/gallery/'"
"'/image/'"
"'/art/'"
"'\n(.)'"
"'\\..*$'"
"'[^a-zA-Z_0-9]'"
"'^[^a-zA-Z_]'"
"'>\\s+<'"
"'>\\s+'"
"'\\s+<'"
"'/page/([0-9]+)'"
"'/([0-9]+)'"
"u'<po name=""(.+).po"">'"
"'<b><a[^>]*>([^<]*)</a>'"
"'<b>([^<]*)</b>'"
"'<a[^>]*>([^<]*)</a>'"
"'UsernameToken\\s+Username=""(.*)"",\\s+PasswordDigest=""(.*)"",\\s+Created=""(.*)"",\\s+Nonce=""(.*)""'"
"'[*+=~]{2,}|[-]{3,}|\\.\\. .+?(\\Z|\n)|__ .+?(\\Z|\n)|:\\w+: \\w+(\\Z|\n)|::|[_`\\|]+'"
"'[]\\-[`~!@#$%^&*()_=+{}\\|,<.>/?]'"
"'^[-A-Za-z0-9_]*$'"
"'(\\d+\\.\\d+\\.\\d+\\.\\d+)'"
"'([a-zA-Z0-9_\\-]+@[a-zA-Z0-9_\\-]+\\.[a-zA-Z0-9_\\-]+)'"
"'([\\d\\.]+)'"
"'%\\d\\d'"
"'[\\W\\/]'"
"'/group/([^/]*)/ws/([^/]+)/$'"
"'/group/([^/]*)/ws/([^/]+)$'"
"'/group/([^/]*)/([^/]+)/$'"
"'/group/([^/]*)/([^/]+)$'"
"'(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d).(\\d+)'"
"""ConflictError.*('\\\\x00.*')"""
"'td|th'"
"' *([A-Z]+): (\\S+)\\s(.*)'"
"'expire='"
"'expire=(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)'"
"'^([a-zA-Z0-9_:]+)<.*>$'"
"'n_(?:.*?)'"
"'mask(?:.*?)'"
"'mod(?:.*?)'"
"'rb_tree_mmap_rb_tree_set(?:.*?)'"
"'rb_tree_mmap_lu_mtf_set(?:.*?)'"
"'splay(?:.*?)'"
"'rb_tree(?:.*?)'"
"'ov_tree(?:.*?)'"
"'splay_tree(?:.*?)'"
"'pat_trie(?:.*?)'"
"'lc_1div8_1div2(?:.*?)'"
"'lc_1div8_1div1(?:.*?)'"
"'mcolc_1div2(?:.*?)'"
"'mmap_'"
"'http:\\/\\/(?P<host>[\\w\\.]+)(?P<extra>.*)'"
"'\r?\n ?'"
"'atm\\((d\\d+),(d\\d+\\_\\d+),(\\S+),(\\S+),(\\S+)\\)'"
"'bond\\((d\\d+),(d\\d+\\_\\d+),(d\\d+\\_\\d+),(\\d+)\\)'"
"'[\\*]'"
"'[/]'"
"'[\\\\]'"
"'[ \t]'"
"'[\n\r]'"
"'[\'""]'"
"'[a-zA-Z]'"
"'[-+]'"
"'[a-zA-Z0-9_]'"
"'[\\.]'"
"'[Ee]'"
"'[ \\.:-]'"
"'POINT\\((.*)\\)'"
"'LINESTRING\\((.*)\\)'"
"'POLYGON\\((.*)\\)'"
"'<skipped>'"
"'([\\{-\\~\\[-\\` -\\&\\(-\\+\\:-\\@\\/])'"
"'^-?[-0-9.e\\+]+$'"
"'([\\x00-\\x1f\\x7f])'"
"'\\\\x0([0-7])(?=[^0-7]|$)'"
"'\n+'"
"'[-/.: ]+'"
"'^([0-9]{4})$'"
"'^([0-9]{4})~([01][0-9])~([0-9]{2})$'"
"'^([0-9]{4})~([01][0-9])~([0-9]{2})~([0-9]{1,2})~([0-9]{2})~([0-9]{2})$'"
"'^([01]?[0-9])~([0-9]{2})~([0-9]{4})~([0-9]{1,2})~([0-9]{2})~([0-9]{2})$'"
"'^(.*)~([+-][0-9]{2})00$'"
"'^[a-z0-9][a-z0-9_]{2,}$'"
"'([A-Z][a-z]+[A-Z][^ ]+)'"
"'ustar *\x00|[ \x00]*$'"
"'\\[[^]]+]$'"
"'\\d{1,3}\\stracks?.'"
"'(?:^|\\.)_?[A-Z][A-Za-z0-9]+$'"
"'_PYCFRT\\(([^()]+)\\)'"
"'^\\s+([A-Z]+) = (""[A-Z\\s]+?"")'"
"'^\\s+([A-Z]+) = (""[A-Za-z()\\- ]+"")'"
"'^[a-zA-Z_][a-zA-Z_0-9.]*$'"
"' ^(?P<indent>\\s*) ~ (?P<rest> \\}\\}\\} \\s*) $'"
"'(?P<item>\n            ^ \\s*\n            (?P<item_head> [\\#*]+) \\s*\n            (?P<item_text> .*?)\n            $\n        )'"
"'release-(\\d+)-(\\d+)-(\\d+)\\s+(.+)$'"
"'candidate-(\\d+)-(\\d+)-(\\d+)-(\\d+)$'"
"'__version__\\s*=\\s*[\'""]\\d+\\.\\d+\\.\\d+(rc\\d+)?[\'""]'"
"'.+?@.+?(\\..+?)+'"
"'[^\\d]'"
"'.+@.+\\..+'"
"'^yes$'"
"'^no$'"
"'^1$'"
"'^2$'"
"'^3$'"
"'^4$'"
"'[A-Z|a-z][0-9]{2}'"
"'.*django_dzenlog'"
"'[#&;`|*?~<>^()\\[\\]{}$\\\\]+'"
"'^[0-9a-zA-Z_]+$'"
"'#define +VERSION +""(.[0-9\\.a-z]+)""'"
"u'^\\s*[#*=]{4,}\\n[a-z0-9 -]+\\n[#*=]{4,}\\s*'"
"u'^.. \\[([a-z0-9_.-])\\]'"
"u'^\\d+$'"
"u'^[^(]*'"
"'^\\s*(>>>|...) (.*)$'"
"'.+?([0-9]+?)\\%.*?'"
"'.*dis.*'"
"'.+(\\d\\d:\\d\\d:\\d\\d).+'"
"'\\d* \\(UID (\\d*)'"
"'<[^<]+?>'"
"'&[^;]*;'"
"u'&(?![a-zA-Z]{1,8};)'"
"'^[a-zA-z]+:\\/\\/[^\\s].*'"
"'^([A-Z]\\w+[A-Z]+\\w+)'"
"'^.+@[^\\.].*\\.[a-z]{2,}$'"
"'([^a-z0-9\\.-])'"
"'([^A-Za-z0-9\\._-])'"
"'-\\.'"
"'^[0-9a-z]'"
"'[0-9a-z]$'"
"'(https?://)?([^/]+)/?(.*)'"
"'^cf://([^/]*)/?'"
"'^(<?[^>]+?>\\s?)(<\\w+) xmlns=[\'""](http://[^\'""]+)[\'""](.*)'"
"'\\.\\d\\d\\dZ'"
"'^((warn)|(critical)|(fatal))(_action)?(_clear)?$'"
"'(<Filesystem>.*</Filesystem>\n<kUsed>\\d+</kUsed>\n<kFree>\\d+</kFree>\n<PercentUsed>\\d+\\.\\d+</PercentUsed>\n<WarningThreshold>\\d\\.?\\d*</WarningThreshold>\n<WarningThresholdAction>.*</WarningThresholdAction>\n<WarningThresholdClearAction>.*</WarningThresholdClearAction>\n<CriticalThreshold>\\d\\.?\\d*</CriticalThreshold>\n<CriticalThresholdAction>.*</CriticalThresholdAction>\n<CriticalThresholdClearAction>.*</CriticalThresholdClearAction>\n<FatalThreshold>\\d\\.?\\d*</FatalThreshold>\n<FatalThresholdAction>.*</FatalThresholdAction>\n<FatalThresholdClearAction>.*</FatalThresholdClearAction>\n)+'"
"'^\t<p>This is covered elsewhere<sup class=""footnote""><a href=""#fn[a-z0-9-]+"">1</a></sup>.</p>$'"
"'^\t<p>YACC<sup class=""footnote""><a href=""#fn[a-z0-9-]+"">1</a></sup></p>'"
"'^\t<p id=""fn[a-z0-9-]+"" class=""footnote""><sup>1</sup>Down here, in fact.</p>$'"
"'\\n{3,}'"
"'\\n\\s*\\n'"
"'""$'"
"'/(\\d+)'"
"'\\{([^}]*)\\}'"
"'\\[([^\\]]+)\\]'"
"'\\(([^()]+)\\)'"
"'([(]+)'"
"'([)]+)'"
"'^(.*)#(.*)$'"
"'<(p|blockquote|div|form|table|ul|ol|pre|h\\d)[^>]*?>.*</\\1>'"
"'<(hr|br)[^>]*?/>'"
"'^_'"
"'^([#*]+)\\s.*'"
"'^#+'"
"'<(p)([^>]*?)>(.*)(</\\1>)'"
"'(.+)(?:(?<!<br>)|(?<!<br />))\\n(?![#*\\s|])'"
"'(Frequency) (.{8}) (Document) (.+)'"
"'#.*(?=$|\\n)'"
"'[ \\t\\n\\r]+'"
"'\\$(0x[a-fA-F0-9]+|[0-9]+)'"
"'0x[a-fA-F0-9]+|[0-9]+'"
"'%(\\w+)'"
"'[a-zA-Z0-9_]+'"
"'[a-zA-Z0-9_]+:'"
"'[a-zA-Z_][a-zA-Z_0-9]*$'"
"'(?<!sympy\\.)mpmath'"
"'\\)\\s*:'"
"'.*\\.py$'"
"'foo.h'"
"'^[a-zA-Z_][a-zA-Z0-9_]*$'"
"':([A-Za-z0-9_-]+)!'"
"'(\\d+)\\.(\\d+)(\\.(\\d+))?(b(\\d+))?'"
"'[a-zA-Z_][a-zA-Z_0-9]*'"
"'<\\/a>,(.*)<\\/span>'"
"'(?:^|\\s)attn[:\\s]+([\\w \\t,-]+[\\w,])'"
"'(?i)\\s+re\\s*#([0-9]+)'"
"'(?i)\\s+qa\\s*#([0-9]+)'"
"'^.*/django/[^/]+'"
"'^(.*)/[^/]+$'"
"'([a-zA-Z]+)\\s*=\\s*(\\S+)'"
"'([a-zA-Z]+)\\W*'"
"'([a-zA-z]+)\\W*'"
"'.*/$'"
"""(?P<hexcode>[\\da-fA-F]{2})\\s+'?(?P<mnemonic>[\\w<> ]+)'?(?:\\s+(?P<arg1>[\\w/]+)(?:,(?P<arg2>[\\w/]+))?)?"""
"';\\s*<(?P<groupname>[\\w]+)>:'"
""";\\s*[01]{3}(?:\\s+'?(?P<mnemonic>[\\w ]+)?'?\\s*)"""
"'^\\[.*?\\] \\[.*?\\] <.*?>(.*)$'"
"'^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)( *(?P<argument> .+))?'"
"'<page>'"
"'</page>'"
"'\\[\\[([^\\|^\\]]*)(?:\\|([^\\]]*))?\\]\\]'"
"'{{([^}]*)}}'"
"'^[a-z\\-]+:'"
"'^H[0-9][0-9][0-9][A-Z]1'"
"'^\\^JOB SAPRDI'"
"'^H[0-9a-zA-Z]'"
"'^D.*'"
"'^CRDI-(CONTROL|INC) %%LINES-BEGIN.*'"
"'^H.*'"
"'^H.{20}([\\s\\S]{16}).*'"
"'^H[0-9][0-9][0-9][A-Z]0'"
"'^D[A-Z]{4}[\\S\\s]{36}[A-Za-z].*'"
"'^\\^job'"
"'^\\^page 1'"
"'[^a-z0-9_]'"
"'##\\((?P<name>[a-zA-Z_][a-zA-Z0-9_]*)(?P<mods>(\\.[a-z]+)+)?\\)'"
"'[^-_a-zA-Z0-9]'"
"'initrd.img'"
"'boot=usb'"
"'boot=cd'"
"'^(.*)\\.'"
"'^Currently defined functions:'"
"'busybox,'"
"'^\\s*deb file:\\/\\/\\/'"
"'usb'"
"'^block:(?P<dev>.*)'"
"'(?P<dev>.*) on (?P<mnt_point>.*) type'"
"'(?:(?P<w>\\d+)[.](?P<adp>\\d+))|(?:(?P<w>\\d+)\\s+(?P<n>\\d+)/(?P<d>\\d+))|(?:(?P<n>\\d+)/(?P<d>\\d+))|(?P<w>\\d+)'"
"'[A-Z]*[a-z]+|\\s+|\\b|[\'""_]'"
"'[!-\\.&]'"
"u'id=(\\d*)'"
"'^iconState[0-9]*'"
"'^show_friend.pl'"
"'^((?:http://)?(?:\\w+\\.)?nicovideo\\.jp/(?:v/|(?:watch(?:\\.php)?))?/(\\w+))'"
"'url[=](http[^&]*)'"
"'^http://.*\\.nicovideo\\.jp/smile\\?(.*?)=.*'"
"'\\.zip\\Z'"
"'(?P<who>[ugo]+)(?P<op>[-+])(?P<what>[rwx]+)$'"
"'\\\\u([0-9a-f]{4})'"
"'http://\\S+'"
"'^\\s*path=""?(.*?)""?\\s*$'"
"'(\\w{40})\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)'"
"'^[\\$_A-Za-z][\\$_A-Za-z0-9]*$'"
"'\\$\\{[^\\}]+\\}'"
"'s+'"
"'(t[0-9]+)_(e[0-9]+)'"
"': (\\w+)'"
"'(\\|   )*(\\w+) (\\S+) (\\w+)(: (\\w+))?'"
"'\\.|\\\\|\\/|\\||\\:|\\?|\\*|""|<|>|[\x00-\x1f\x7f-\x9f]'"
"'\\.(?![^.]*$)'"
"'\\\\|\\/|\\||\\:|\\?|\\*|""|<|>|[\x00-\x1f\x7f-\x9f]/'"
"'(/\\.)|(//)|([\\\\:\\*\\?\\""""\\<\\>\\|]|[\x00-\x1f]|[\x7f-\x9f])'"
"'^(0x)?[0-9]+$'"
"'(?P<h>\\d+)h(?P<m>\\d+)m(?P<s>\\d+)s'"
"'^([+-]?)([0-9]{1,2}):([0-9]{2})$'"
"'<timezoneId>([^<]*)</timezoneId>'"
"'http://twitter.com/derreisende/statuses/(?P<guid>\\d{1,})'"
"'(?P<lat>-{0,1}\\d{1,5}),(?P<lon>-{0,1}\\d{1,6})'"
"u'\\.di?$'"
"u'^(\\w+)=(.+)'"
"u'^(?P<path>[^,]+), (?P<fqn>\\w+(?:\\.\\w+)*)$'"
"u'Last Changed (?:Author|Rev|Date): (.+)'"
"'[^\x00-\x7f]'"
"u'<a\\s+([^>]+)>'"
"u'(\\w+)=(""[^""]*""|\'[^\']*\')'"
"'(?:.*/)?([a-zA-Z0-9-]{36})(?:.html)?'"
"'\\(([A-Z]{3})\\)'"
"settings.STATIC_MANAGEMENT_CSS_ASSET_PATTERN"
"'(?P<url>url(\\([\'""]?(?P<filename>[^)]+\\.[a-z]{3,4})(?P<fragment>#\\w+)?[\'""]?\\)))'"
"'^(.*)#.*?$'"
"'id=""error"" class=""status404""'"
"'(src=""([^""]*)"")'"
"""(src=\\'([^\\']*)\\')"""
"'(href=""([^#][^""]*)"")'"
"""(href=\\'([^#][^\\']*)\\')"""
"'([1-9][0-9]*)([DdHhMm]|[sS]?)'"
"'^(\\s*)(def .+:|class .+:)'"
"'^\\s*#.*$'"
"'^\\s*(import |from .+ import)'"
"'^#(.+):(.+)'"
"'method=bob'"
"'api_key=abc'"
"'method=erik'"
"'page=1'"
"'per_page=50'"
"'^\\s*(mobile|cell)'"
"'^\\s*(work|office)'"
"'^\\s*(house|home)'"
"'flickr.com'"
"'in/pool-'"
"'in/pool-(.*)/'"
"'/groups/'"
"'/groups/([^/]*)/'"
"'/photos/'"
"'/photos/([^/]*)'"
"'\\?page='"
"'^/assets/'"
"'^/favicon\\.ico/'"
"'\\n\\n\\n+'"
"'(\\n\\n\\n+)'"
"'[^\\w0-9_-]+'"
"'_+'"
"'^_(?=.)'"
"'(?<=.)_$'"
"'^0$'"
"'^nlw/lib/'"
"'\\.pm$'"
"'\\.t$'"
"'^t/'"
"'^t/(.+?)\\.\\.'"
"'^nlw/lib'"
"'^nlw/t/(.*)\\.t$'"
"'password: ""(.*)""'"
"'charset=(?P<charset>\\S+)'"
"'([0-9]*).*'"
"'([0-9]*)h([0-9]*)'"
"'(\\d+) - (\\d+)'"
"'(\\d+) (\\w+) (2\\d{3}).*?(\\d{2}):(\\d{2})'"
"'ficheClub'"
"'feuilleMatch'"
"'={3,}'"
"'(.*?)\\s*(@\\d{2,})?\\s*(#[^\\s]+)*\\s*(<(.*?)\\>)?\\s*\\n(={3,})\\n'"
"'(.*?)\\s*<(.*?)\\>'"
"'(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hr>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})(?P<fractional_sec>\\.\\d+)?'"
"'^(.*) ?(<.+@.+>)$'"
"'\\b(St|Ave)\\b'"
"'^local:(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$'"
"'^remote:(?P<hostname>([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])|(([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])):(?P<portnum>\\d+):(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$'"
"'^(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$'"
"'^(http:\\/\\/)(?P<hostname>([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])|(([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])):(?P<portnum>\\d+)\\/(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$'"
"'^([A-Za-z0-9_-]+)$'"
"'^([A-Za-z0-9_-]+) (.*?)$'"
"'^([A-Za-z0-9_-]+) (.*?) as ([A-Za-z0-9_]+)$'"
"'^([A-Za-z0-9_-]+) as ([A-Za-z0-9_]+)$'"
"'-?\\d+([.]\\d+)?'"
"'\\.yml'"
"'[irb][irb]'"
"'^#define\\s+(\\S+)'"
"'^\\s*\\*\\s*@(\\S+)\\s*:\\s*(.*)'"
"'(\\d+)'"
"'.*\\/(.*)'"
"'\\.c$'"
"'^/\\* 0x([0-9A-Fa-f]+_?) - '"
"'^TVM_INSTRUCTION\\s*\\(\\s*(ins_[^\\s\\)]+)\\s*\\)'"
"'^#ifdef'"
"'^#if (.*)$'"
"'\\.occ$'"
"'.*schemescanner\\.scm$'"
"'(3\\.1\\d+)|(MiKTeX \\d+.\\d+)'"
"'(.*)_\\d\\d'"
"'#\\s*-\\*-\\s*noplot\\s*-\\*-'"
"'^([\\w.]*\\.)?    # class names\n                           (\\w+)  \\s* $        # optionally arguments\n                           '"
"'data:.*?""(.*?)""'"
"'""svce""<blob>=""(.*?)""'"
"'"".*?/([0-9a-z_\\-]*)\\.keychain""'"
"'[\\w$\\-_]'"
"'^[\t ]*'"
"'[\r\n\t ]+$'"
"'[Xx]'"
"'[0123456789abcdefABCDEF]'"
"'[+-]'"
"'^<(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[-a-zA-Z:0-9_.]+|\\{[^{}]*\\})\\s*([-a-zA-Z:0-9_.]+=(\\{[^{}]*\\}|""[^""]*""|\'[^\']*\')\\s*)*\\/?\\s*>'"
"'<(\\/?)(!\\[CDATA\\[[\\s\\S]*?\\]\\]|[-a-zA-Z:0-9_.]+|\\{[^{}]*\\})\\s*([-a-zA-Z:0-9_.]+=(\\{[^{}]*\\}|""[^""]*""|\'[^\']*\')\\s*)*(\\/?)\\s*>'"
"'^org\\.mpris\\.([^.]+)$'"
"'\\w+://.*'"
"'#\\d+'"
"'\\n\\n|[.;?!]'"
"'[ ,-^]'"
"'^(.*) <(.*)>$'"
"'\\.#?'"
"'[\n\t]'"
"""[^\\w{[']+"""
"'\\r\\n|\\n|\\r'"
"'([""\\\'])'"
"'(\\(disc.+\\)|\\(CD.+\\))'"
"'.*((\\d{2}|\\d{4})[-\\/]\\d{1,2}[-\\/]\\d{1,2}|\\d{2}[-\\/]\\d{1,2}[-\\/](\\d{1,2}|\\d{4}))'"
"r.regex"
"'^__version__ = [\'\\""]([^\'\\""]*)[\'\\""]'"
"'<(/?(color|i|b|u)[^>]*)>'"
"'color\\s+red=(?P<red>[0-9]{1,3})\\s+green=(?P<green>[0-9]{1,3})\\s+blue=(?P<blue>[0-9]{1,3})'"
"'</?(color|i|b|u)[^>]*>'"
"'/t/([a-z]+)([\\d-]+)\\.torrent'"
"'charset=(\\S+)'"
"'HTTP/1.[01] (\\d+) (.*?)'"
"'^loki-.+\\.tar(\\.(gz|bz2))?$'"
"'\\.pyc$'"
"'\\$Rev[^\\$]*\\$'"
"':[0-9A-F]{10,}'"
"'^(#)*?([^#=]*?)\\ =\\ (.*?)$'"
"'(?P<dollar>\\$\\$)|(?P<subst>\\$\\{(?P<var>\\w+)(?P<code>.*?)\\})'"
"'^[A-Z]:$'"
"'(\\\\\\\\)|(\\\\\\$)|\\$\\{([^}]+)\\}'"
"'^\\d+_\\d+_?\\d*$'"
"'^mt$'"
"'^[sgydpn]+$'"
"'^(acc|borland|como|cw|dmc|darwin|gcc|hp_cxx|intel|kylix|msvc|qcc|sun|vacpp)\\d*$'"
"'.*boost_(.*?)\\..*'"
"'\\d+\\.\\d+(\\.?\\d+)*'"
"'module\\s+([^;]+)'"
"'import\\s+([^;]+)'"
"'([^:]+):(.*)'"
"'[^=]+=(.+)'"
"'<refentrytitle>(.*)</refentrytitle>'"
"'<manvolnum>(.*)</manvolnum>'"
"'\\$\\(([a-zA-Z0-9_]+)\\)'"
"'[-a-zA-Z_@.]+'"
"self.source"
"'#(.*)\n'"
"'([sS][eE][tT]\\s*\\()\\s*([^\\s]+)\\s+""([^""]+)""\\)'"
"""^([^=]+)=\\'(.*)\\'$"""
"'@(\\w+)@'"
"'\\.dll$'"
"'\\.lib$'"
"'^lib'"
"'^\\s*open\\s+([a-zA-Z]+)(;;){0,1}$'"
"'(\\(\\*)|(\\*\\))|(""(\\\\.|[^""\\\\])*""|\'(\\\\.|[^\'\\\\])*\'|.[^()*""\'\\\\]*)'"
"'^[ \t]*(#|%:)[ \t]*(ifdef|ifndef|if|else|elif|endif|include|import|define|undef|pragma)[ \t]*(.*)\r*$'"
"'^[a-zA-Z_]\\w*'"
"'^[a-zA-Z_][a-zA-Z0-9_]*[(]'"
"'^\\s*once\\s*'"
"'\\\\\r*\n'"
"'(/\\*[^*]*\\*+([^/*][^*]*\\*+)*/)|//[^\\n]*|(""(\\\\.|[^""\\\\])*""|\'(\\\\.|[^\'\\\\])*\'|.[^/""\'\\\\]*)'"
"'[A-Za-z]+'"
"""[a-z']+"""
"'\\[.* #(?P<bug_id>\\d+)\\] .*$'"
"""\\s*@(.*?)\\s+('(.*|.*\n.*)')?"""
"'href=""(http[^""]+)""'"
"'&([^&;]*)(?=(;|&|$))'"
"'(>|^)([^<]+?)(<|$)'"
"'^#([0-9]+)$'"
"'(&)#(\\d+);?'"
"'(&)#x([0-9a-f]+);?'"
"'(%)([0-9a-f]{2});?'"
"'&([^&;]*);?'"
"'<!--(.*?)-->'"
"'^\\d\\.(.*)'"
"'([^:]*)'"
"'.*?\n'"
"'(In \\[[0-9]+\\]: )|(   \\.\\.\\.+:)'"
"'(Out\\[[0-9]+\\]: )|(   \\.\\.\\.+:)'"
"'   \\.\\.\\.+:'"
"'\\-+'"
"'user_id = ""(\\d+)""'"
"'\\d{1,2}\\:\\d{2}[ap]m'"
"'[A-Z][a-z]{2} \\d{1,2}$'"
"'[A-Z][a-z]{2} \\d{1,2} \\d{4}'"
"'^.+(\\.pyc|\\~)$'"
"'^(\\w+)\\s*='"
"'^[A-Za-z_][A-Za-z_0-9]*([.][A-Za-z_][A-Za-z_0-9]*)*\\.?$'"
"'(if\\s+__name__\\s*==\\s*(""|\')__main__(""|\')\\s*:\\s*\n+([ \t\r\x0c\x0b]+.+\n)+)'"
"'^[A-Za-z_][A-Za-z_0-9]*([.][A-Za-z_][A-Za-z_0-9]*)*.*$'"
"'.*\\[[^]]+\\]\\[([^]]+)\\].*'"
"'.*\\[([^]]+)\\]\\[\\].*'"
"'.*\\[([^]]+)\\]: ([^ \\n]+).*'"
"'\\s*([a-z]+\\s*\\(\\s*[0-9\\s,\\.-]+\\s*\\))\\s*'"
"'\\s*translate\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*(,\\s*(-?[0-9]+\\.?[0-9]*))?\\s*\\)\\s*'"
"'\\s*scale\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*(,\\s*(-?[0-9]+\\.?[0-9]*))?\\s*\\)\\s*'"
"'\\s*rotate\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*(,\\s*(-?[0-9])+\\.?[0-9]*\\s*,\\s*(-?[0-9]+\\.?[0-9]*))?\\s*\\)\\s*'"
"'\\s*skewX\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*\\)\\s*'"
"'\\s*skewY\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*\\)\\s*'"
"'\\s*matrix\\s*\\(\\s*(-?[0-9]+\\.?[0-9]*)\\s*,\\s*(-?[0-9]+\\.?[0-9]*)\\s*,\\s*(-?[0-9]+\\.?[0-9]*)\\s*,\\s*(-?[0-9]+\\.?[0-9]*)\\s*,\\s*(-?[0-9]+\\.?[0-9]*)\\s*,\\s*(-?[0-9]+\\.?[0-9]*)\\s*\\)\\s*'"
"'\\s*;?\\s*text-anchor\\s*:\\s*([a-z]*)'"
"'^[a-zA-Z0-9_]{1,40}$'"
"'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$'"
"'(?:^|[\\s(])#(\\d+)\\b'"
"'\\br(\\d+)\\b'"
"'(((?<=[a-z])[A-Z])|([A-Z](?![A-Z]|$)))'"
"'([^/]+)\\.git$'"
"'#s*define\\s+WITH_LIBINTL\\s+1\\s*'"
"'^\\s*#\\s*define\\s+OPENSSL_VERSION_NUMBER\\s+(0x[0-9a-fA-F]+)'"
"'#define\\WDB_VERSION_MAJOR\\W(\\d+)'"
"'#define\\WDB_VERSION_MINOR\\W(\\d+)'"
"'#define\\WDB_VERSION_PATCH\\W(\\d+)'"
"'\\s*.*#\\s*.*define\\s.*SQLITE_VERSION\\W*""(.*)""'"
"'#s*define\\s+HASHVERSION\\s+2\\s*'"
"'-arch\\s+(\\w+)'"
"'(\\W+)'"
"'[A-Z][a-z]+([A-Z][a-z]*)+'"
"'^(\\s)*$'"
"'^(\\s)*((//)|(/\\*))'"
"'^([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*(.+)'"
"'^([a-zA-Z-]+)\\s*:\\s*(.+)'"
"'//.*?$'"
"'(?<!\\\\)\\$(?:([a-zA-Z_][a-zA-Z0-9_]*)|\\{([a-zA-Z_][a-zA-Z0-9_]*)\\})'"
"'Example::\\n(.*?)__END__(?ms)'"
"'^ *#include ""(.*)""'"
"'\\./(.*)'"
"'experimental'"
"'test'"
"'[\\_\\-\\.]'"
"'(\\\'.*?(?<=[^\\\\])\\\')|(\\"".*?(?<=[^\\\\])\\"")'"
"'(\\/[^\\s\\/\\*][^\\n]*\\/)'"
"'~~~(\\d+)~~~'"
"'(/\\*\\*)(.*?)(\\*/)([\\s\n]*[^\\/\n]*)?|("".*?"")'"
"'^[\\s|\\*|\n]*'"
"'^\\s?(@\\w\\w*)'"
"'^\\s*?(.*?)\\{(.*)\\}(.*)|^\\s*?(\\w+)(.*)'"
"'^\\s*?([^\\s]+)(.*)'"
"'\\s*?(var|function)?\\s*?(\\w+)\\s*?[=:]\\s*?(function)?.*'"
"'\\$Revision:(.*)\\$'"
"'(?P<ip>[.:0-9a-fA-F]+) - - \\[(?P<time>.*?)\\] ""GET (?P<uri>.*?) HTTP/1.\\d"" (?P<status_code>\\d+) \\d+ ""(?P<referral>.*?)"" ""(?P<agent>.*?)""'"
"'(?P<name>.*?) \\(.*?; (?P<count>\\d+) subscribers?(; .*?)?\\)'"
"'(?P<name>.*?);? (?P<count>\\d+) (S|s)ubscribers?'"
"'from\\s+(\\b[a-z0-9$@_]+\\b)'"
"'>\n<!'"
"'\\w+='"
"'Job <(?P<jobid>\\d+)> is'"
"'Your job (?P<jobid>\\d+) \\(""'"
"'_s\\d+$'"
"'interpro'"
"'Transcript/Summary'"
"'Transcript/ProteinSummary'"
"'Gene/Summary'"
"'(tag:blogger.com,1999:blog-)(\\w*)(.page-)(\\w*)'"
"'[-+]?(\\d+|\\d*\\.\\d+)$'"
"'^[a-zA-Z0-9._-]+$'"
"'\\d'"
"'\\[([^|]+)\\|([^]]+)\\]'"
"'\\*([^*]+)\\*'"
"'architecture (.+) of'"
"'package (.+) is'"
"'entity (\\w+) is'"
"'# \\*\\* (Note|Warning|Error|Failure): (.+)(\n.+)*?\n#    Time: (\\d+) (\\w+) .+(Process|Instance): ([\\w//]+)'"
"'(Error): (.+)'"
"'(REPORT|ASSERT): (NOTE|WARNING|ERROR|FAILURE) at (.+): (..+)'"
"'[\\W\\-]+'"
"'^\\-+'"
"'\\-+$'"
"'(?mxs)MochiKit.MochiKit.VERSION\\s*=\\s*[\'""]([^\'""]+)'"
"'(?mxs)MochiKit.MochiKit.SUBMODULES\\s*=\\s*\\[([^\\]]+)'"
"'#egg=([^&]*)'"
"'([a-z0-9_.]+)-([a-z0-9_.-]+)'"
"'-py([123]\\.[0-9])$'"
"'^running .*'"
"'<th>\\s*home\\s*page'"
"'<th>\\s*download\\s+url'"
"'<[^>]*\\srel\\s*=\\s*[\'""]?([^\'"">]+)[^>]*>'"
"'href=(?:""([^""]*)""|\'([^\']*)\'|([^>\\s\\n]*))'"
"'[^a-z0-9$&+,/:;=?@.#%_\\\\|-]'"
"'md5=([a-f0-9]+)'"
"'-r(\\d+)$'"
"'-(20\\d\\d\\d\\d\\d\\d)$'"
"'-py\\d\\.\\d$'"
"'url=""([^""]+)""'"
"'committed-rev=""(\\d+)""'"
"'URL: (.+)'"
"'Revision: (.+)'"
"'^-r\\s*([^ ])?'"
"'#egg=(.*)$'"
"'git\\s*remote\\s*add\\s*origin(.*)\\s*-f'"
"'^git\\s*checkout\\s*-q\\s*(.*)\\s*'"
"'hg\\s*pull\\s*(.*)\\s*'"
"'^hg\\s*update\\s*-r\\s*(.*)\\s*'"
"'([\\w-]+)\\s*([\\d]+):.*$'"
"'^bzr\\s*branch\\s*-r\\s*(\\d*)'"
"'([.\\w-]+)\\s*(.*)$'"
"'^(http|https|file):'"
"'/*([a-z])\\|'"
"'<title>[^<]*Revision \\d+:'"
"'Powered by (?:<a[^>]*?>)?Subversion'"
"'(?:#|#.*?&)egg=([^&]*)'"
"'^(.*?)(?:-dev|-\\d.*)'"
"'^([a-z]):'"
"'^([a-z])[|]'"
"'^(.*?)(-dev|-\\d.*)'"
"'^(?:-r|--requirements)\\s+'"
"'^--?([a-zA-Z0-9_-]*)\\s+'"
"'references __(file|path)__$'"
"'^writing.*egg-info'"
"'[{](.*)[}]'"
"'(and|\\&|\\/)'"
"'\\,'"
"'[^a-zA-Z ]'"
"'<font.*size=-1><a.*>(.*)<\\/a>'"
"'<font(.*)size=-1><a(.*)>(.*)<\\/a>'"
"'[^a-zA-Z]'"
"'%20'"
"'^(?!javascript*)'"
"'^(?!http:\\/\\/*)'"
"'<a(.*)(href\\=""(.*)(""))>(.*?)<\\/a>'"
"'(\\d+) (.*?) '"
"'([1-3A-Za-z\\ ]+)\\ ([0-9]{1,4}\\:[0-9]{1,4}\\-[0-9]{1,4}\\:[0-9]{1,4}|[0-9]{1,4}\\:[0-9]{1,4}\\-[0-9]{1,4}|[0-9]{1,4}\\:[0-9]{1,4}|[0-9]{1,4})'"
"'([0-9]{1,4})'"
"'([0-9]{1,4})\\:([0-9]{1,4})'"
"'([0-9]{1,4})\\:([0-9]{1,4})\\-([0-9]{1,4})'"
"'([0-9]{1,4})\\:([0-9]{1,4})\\-([0-9]{1,4})\\:([0-9]{1,4})'"
"'([0-9]{1,4})\\-([0-9]{1,4})'"
"'([0-9]{1,4})\\-([0-9]{1,4})\\:([0-9]{1,4})'"
"'^\\/([1-3A-Za-z\\ \\.\\,]+)$'"
"'^\\/'"
"'^in\\:([A-Za-z1-3]+)'"
"'^in\\:([A-Za-z1-3]+) \\/([1-3A-Za-z\\ \\.\\,]+)$'"
"'or$'"
"'\\\\i1 '"
"'\\\\i0 '"
"u'^--- ..files/([^/]+)/([^/]+)/([^/]+)/files.(.+)$'"
"'^https?:\\/\\/([^\\/]*\\.)?facebook\\.com(:\\d+)?'"
"""'\\?(.)'"""
"'^\\d+_.*\\.py$'"
"'(\\d+)_'"
"'_DEV_'"
"';[ \\t]*$'"
"'^i$|^a$|^..'"
"'^ *'"
"' *$'"
"'[\\. ]+'"
"'PRI.*'"
"'([^+]*)\\+(.*)'"
"'([A-Z]):(.*)'"
"'(.*)\\((.*)\\)'"
"'(.*)=(.*)'"
"'^#'"
"'^\\[([a-z_]*)\\]$'"
"'^([^:]+):[ \t]*(.*)$'"
"'(.*)[,\\\\]$'"
"'^include (.*)$'"
"'^perlinclude (.*)$'"
"'^define ([^ ]*)(.*)$'"
"',[ \t]*'"
"'s(?P<season>[0-9]+)(?P<episodes>(e[0-9]+)+)'"
"'\\.|\\[|\\]|\\(|\\)'"
"'\\[(?P<start>\\d+)\\]\\[(?P<stop>\\d*)\\](?P<text>.*)'"
"'\\{(?P<start>\\d*)\\}\\{(?P<stop>\\d*)\\}(?P<text>.*)'"
"'(?P<h>\\d*):(?P<m>\\d*):(?P<s>\\d*)[:,= ](?P<text>.*)'"
"'(?P<start>\\d+:\\d+:\\d+,\\d*) --> (?P<stop>\\d+:\\d+:\\d+,\\d*)'"
"'(%%|%\\d?[hHmMsSfF])'"
"'^\\s*(?P<sign>[-\\+]?)(((?P<h>\\d*):)?(?P<m>\\d*):)?(?P<s>\\d*)([,\\.](?P<ms>\\d*))?\\s*$'"
"'\\#redirect'"
"'\\#redirect \\[\\[(?P<dir>.*)\\]\\]'"
"'\\* \\[\\['"
"'(r|l|remote|local):'"
"'[^a-zA-Z\\-_]'"
"'\\s*/\\*\\s*\\*/'"
"'/\\*[\\s\\S]*?\\*/'"
"'url\\(([""\\\'])([^)]*)\\1\\)'"
"'([^{]+){([^}]*)}'"
"'(.*?):(.*?)(;|$)'"
"'^Rank_\\d+:\\d+:(\\d+)'"
"'[^a-zA-Z0-9_\\s\\.\\&]'"
"'[-T:/.]|\\s+'"
"'((?:\\((?P<id>[0-9]+|RX|CR)\\))*)(?P<str>.+)?'"
"'<a href="".*.htm"">(?P<disc_id>[A-Z][A-Z ][0-9]{3,3})(?P<disc_nome>.*)  '"
"'^command=""(/[^ ""]+/)?gitosis-serve [^""]+"",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty .*'"
"'const ucp_type_table _pcre_utt\\[] = {'"
"'};'"
"'\\s*\\{\\s*""(?P<name>[^""]*)"",\\s*(?P<type>PT_[A-Z]*),\\s*(?P<value>(?:0|ucp_[A-Za-z_]*))\\s*},?\\s*$'"
"'msx/.+\\.mp3$'"
"'startline=\\d+$'"
"'(?P<title>.*) - (?P<author>.*)\\..{3,5}'"
"'^(attachement|signed|encrypted|draft|flagged|passed|replied|unread)$'"
"'\\([0-9]{4}\\)'"
"'[\\\'|""|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]'"
"'^\\s*(((def|class|if|elif|except|for|while|with)\\s)|((try|else|finally|except)\\s*:))'"
"'EV\\[[^]]*\\]'"
"'PW\\[[^]]*\\]'"
"'PB\\[[^]]*\\]'"
"'SO\\[[^]]*\\]'"
"'DT\\[[^]]*\\]'"
"'SZ\\[([^]]*)\\]'"
"'AB((\\[..\\])+)'"
"'HA\\[([1-9])\\]'"
"'RE\\[([^]]*)\\]'"
"'/[a-zA-Z_]+/([a-zA-Z0-9_\\-/]+\\.(html))$'"
"'[Pp]\\.?[Oo]\\.?\\s*(?:box|Box|BOX)'"
"'(?P<hashtag>#\\S+)'"
"'(?P<profile>\\@\\S+)'"
"'[ \t]+RPATH[ \t]*(.*)'"
"'^ *.* => (.*) \\(.*'"
"'^/usr/lib/.*$'"
"'^\\t* *.*=>\\t* (.*)'"
"'^/lib/.*$|^/usr/lib/.*$'"
"'^libc\\.|^librt\\.|^libcrypt\\.|^libm\\.|^libdl\\.|^libpthread\\.|^libnsl\\.|^libutil\\.|^libresolv\\.|^ld-linux\\.|^ld-linux-'"
"'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+?)\n    (?:\\.(?P<version>[^._]+))?\n    (?:_(?P<suffix>[^._]+))?\n    \\.dylib$\n)\n'"
"'(?x)\n(?P<location>^.*)(?:^|/)\n(?P<name>\n    (?P<shortname>\\w+).framework/\n    (?:Versions/(?P<version>[^/]+)/)?\n    (?P=shortname)\n    (?:_(?P<suffix>[^_]+))?\n)$\n'"
"'""(.+?)""|([^ ""]+)'"
"'^==== Test generated error:'"
"'(^---- .* FAILED|^Failed: 666)'"
"'^Failed: [0-9]+  Total Tests: [0-9]+  \\(\\(Passed: [0-9]+, Newly Passed: [0-9]+\\)  Known Failed: [0-9]+\\)'"
"'^Failed: 666'"
"'^\\+\\+\\+\\+ .+ PASSED\n$'"
"'^[a-zA-Z]+\\.tcl\n$'"
"'^------------------.* testing '"
"'(^==== |^------------------.* testing )'"
"'instant'"
"'""CurrentCapacity"" = (\\d+)'"
"'""MaxCapacity"" = (\\d+)'"
"'""TimeRemaining"" = (\\d+)'"
"'\\b\\w{4,6}\\b'"
"'(\\D)(\\d*)'"
"'[a-z]{14} [A-Z]{28}'"
"'[aeiou]{14} [AEIOU]{28}'"
"'(?:[b-df-hj-np-tv-z]{2,3}){14} (?:[B-DF-HJ-NP-TV-Z][b-df-hj-np-tv-z]{1,2}){28}'"
"'[0-9]{14} [0-9]{28}'"
"'[0-9a-f]{14} [0-9A-F]{28}'"
"'[0-9a-z]{14} [0-9a-z]{28}'"
"'[0-9a-zA-Z]{14} [0-9a-zA-Z]{28}'"
"'[A-Z][a-z]{3,5} [a-z]{4,6} (?:[A-Z][a-z]{3,5}){2} (?:[a-z]{4,6}){2}'"
"'[BCDFGHJ-NP-TV-Z][aeiou]{3} [0-9a-z]{4} [0-9A-F]{5}'"
"'href=""/pypi/([^/""]*)'"
"'(\\w\\w):(\\w\\w):(\\w\\w):(\\w\\w):(\\w\\w):(\\w\\w)'"
"'Available subcommands:'"
"'tick:\\s+(\\d+)'"
"'^<tr class=""(Ter|Cat|Xan|Zik|Etd)"">.+?>([^<]+)</td><td>(\\w+)</td>(?:<td>(\\w\\w|\\-)</td>)?(?:<td>(\\w\\w|\\-)</td>)?(?:<td>(\\w\\w|\\-)</td>)?<td>(\\w+)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?(\\d+|\\-)</td>.+?</tr>$'"
"'(\\d+)([. :\\-])(\\d+)(\\2(\\d+))'"
"'(\\d+)([. :\\-])(\\d+)(\\2(\\d+))?'"
"'PING\\s*:\\s*(\\S+)'"
"'PONG\\s*:'"
"'^([\\w.-]+@[\\w.-]+)'"
"'^(Recover Successful For|Unable to find)'"
"'^Your nickname is registered'"
"'([~&@%+]*)(\\S+)'"
"'([~&@%+]?)([#&]\\S+)'"
"'(\\d+):(\\d+):(\\d+)\\*?\\s+(\\d+):(\\d+):(\\d+)\\s+(.*?)\\s+((Xan|Ter|Cat|Zik|Etd)\\s+)?(\\d+)\\s+(Return|Attack|Defend)\\s+(\\d+)'"
"'^((?:\\d+(?:\\.\\d+)?[mk]?)|(?:[\\d,]+))$'"
"'^([a-zA-Z]+),?$'"
"'\\s*\\[?\\s*\\d{2}:\\d{2}(:\\d{2})?\\s*\\]?\\s*'"
"'http://[^/]+/(?:showscan|waves).pl\\?scan_id=([0-9a-zA-Z]+)'"
"'http://[^/]+/showscan.pl\\?scan_grp=([0-9a-zA-Z]+)'"
"'scan_id=([0-9a-zA-Z]+)'"
"'>([^>]+) on (\\d+)\\:(\\d+)\\:(\\d+) in tick (\\d+)'"
"'\n            <tr><td[^>]*>Metal</td><td[^>]*>(\\d+)</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Crystal</td><td[^>]*>(\\d+)</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Eonium</td><td[^>]*>(\\d+)</td><td[^>]*>(\\d+)</td></tr>\\s*\n        '"
"'\n            <tr><th[^>]*>Value</th><th[^>]*>Score</th></tr>\\s*\n            <tr><td[^>]*>(\\d+)</td><td[^>]*>(\\d+)</td></tr>\\s*\n        '"
"'\n            <tr><th[^>]*>Agents</th><th[^>]*>Security\\s+Guards</th></tr>\\s*\n            <tr><td[^>]*>([^<]+)</td><td[^>]*>([^<]+)</td></tr>\\s*\n        '"
"'\n            <tr><th[^>]*>Light</th><th[^>]*>Medium</th><th[^>]*>Heavy</th></tr>\\s*\n            <tr><td[^>]*>([^<]+)</td><td[^>]*>([^<]+)</td><td[^>]*>([^<]+)</td></tr>\n        '"
"'<span[^>]*>(\\d+)</span>'"
"'\n            <tr><td[^>]*>Light\\s+Factory</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Medium\\s+Factory</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Heavy\\s+Factory</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Wave\\s+Amplifier</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Wave\\s+Distorter</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Metal\\s+Refinery</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Crystal\\s+Refinery</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Eonium\\s+Refinery</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Research\\s+Laboratory</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Finance\\s+Centre</td><td[^>]*>(\\d*)</td></tr>\\s*\n            <tr><td[^>]*>Security\\s+Centre</td><td[^>]*>(\\d*)</td></tr>\n        '"
"'\n            <tr><td[^>]*>Space\\s+Travel</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Infrastructure</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Hulls</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Waves</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Core\\s+Extraction</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Covert\\s+Ops</td><td[^>]*>(\\d+)</td></tr>\\s*\n            <tr><td[^>]*>Asteroid\\s+Mining</td><td[^>]*>(\\d+)</td></tr>\n        '"
"'(\\w+\\s?\\w*\\s?\\w*)</td><td[^>]*>(\\d+(?:,\\d{3})*)</td>'"
"'<td[^>]*>(\\d+)\\:(\\d+)\\:(\\d+)</td><td[^>]*>([^<]+)</td><td[^>]*>([^<]+)</td><td[^>]*>(\\d+)</td><td[^>]*>(\\d+(?:,\\d{3})*)</td>'"
"'<td class=""left"" valign=""top"">Incoming</td><td valign=""top"">(\\d+)</td><td class=""left"" valign=""top"">We have detected an open jumpgate from ([^<]+), located at (\\d+):(\\d+):(\\d+). The fleet will approach our system in tick (\\d+) and appears to have roughly (\\d+) ships.</td>'"
"'<td class=""left"" valign=""top"">Launch</td><td valign=""top"">(\\d+)</td><td class=""left"" valign=""top"">The ([^,]+) fleet has been launched, heading for (\\d+):(\\d+):(\\d+), on a mission to Attack. Arrival tick: (\\d+)</td>'"
"'<td class=""left"" valign=""top"">Launch</td><td valign=""top"">(\\d+)</td><td class=""left"" valign=""top"">The ([^<]+) fleet has been launched, heading for (\\d+):(\\d+):(\\d+), on a mission to Defend. Arrival tick: (\\d+)</td>'"
"'<td class=""left"" valign=""top"">Tech</td><td valign=""top"">(\\d+)</td><td class=""left"" valign=""top"">Our scientists report that ([^<]+) has been finished. Please drop by the Research area and choose the next area of interest.</td>'"
"'<td class=""left"" valign=""top"">Security</td><td valign=""top"">(\\d+)</td><td class=""left"" valign=""top"">A covert operation was attempted by ([^<]+) \\((\\d+):(\\d+):(\\d+)\\), but our agents were able to stop them from doing any harm.</td>'"
"'^Auth=(.+?)$'"
"loadable.coord"
"loadable.planet_coord"
"'(\\S+)'"
"'(<|>)?(\\d+)'"
"'(bash)'"
"'c(\\d+)'"
"'CardDetails\\.aspx\\?id=([0-9]+)'"
"'http://[a-zA-Z0-9.]*wizards\\.com/Magic/Cards/[^""]*Card[0-9]+.jpg'"
"'^[+-]?\\d+$'"
"'^[+-]?\\d+[lL]$'"
"'^[+-]?(\\d+\\.\\d*$|\\d*\\.\\d+$)'"
"'/service/newreddit(\\d+)\\:'"
"'\\S+'"
"'%\\S+'"
"'^\\w\\w(-\\w\\w)?$'"
"'^/domain/(([-\\w]+\\.)+[\\w]+)'"
"'\\.([^/]+)$'"
"'poll_([a-z0-9]+)'"
"'\\.png$'"
"'[?\\&|!{}+~^()"":*-]+'"
"'^[a-z][a-z](,[a-z][a-z])*$'"
"'(t[0-9]_[a-zA-Z0-9]+:)+'"
"'^([a-fA-F0-9]){3}(([a-fA-F0-9]){3})?$'"
"'[,\\s]+'"
"'^\\s*[\\d\\.]+\\w{0,3}\\s*$'"
"'^[\\w]{3,20}$'"
"'^/lw/([^/]+)/'"
"'.{3,20}'"
"'^[\\w-]{3,20}$'"
"'^[a-zA-Z0-9\\-]{1,100}$'"
"'[^\\s,;]+'"
"'^([\\w]+\\.)+[\\w]+$'"
"'^[ -.0-:A-Z_-z]+$'"
"'{[a-z][a-z0-9-]*}'"
"'{(?P<macro>[a-z][a-z0-9-]*)}'"
"'^/static/[a-z./-]+$'"
"'%%([a-zA-Z0-9\\-]+)%%'"
"'.*\\[([0-9]+):[0-9]*:.*\\]$'"
"'(\\s)\\s+'"
"'\n    (\\[[^\\]]*\\]:?)?           # optional leading pair of square brackets\n    \\s*                       # optional whitespace\n    (\\()?                     # optional open bracket\n    (?<![<])                  # No angle around link already\n    (https?://[^\\s\\\'\\""\\]\\)]+) # a http or https uri\n    (?![>])                   # No angle around link already\n    (\\))?                     # optional close bracket\n    '"
"'<a href=""(?!http|ftp|mailto|/).*</a>'"
"'<a href=""([^""]+)""'"
"'<code>([^<]+)</code>'"
"'>([^<]+)</a>'"
"'[\x00-\x08\x0b\x0c\x0e-\x1f]'"
"'</?[iub]>'"
"'[- ]'"
"'(?:https?|ftp|file)://[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|]'"
"'.*v=([A-Za-z0-9-_]+).*'"
"'.*/watch/([^/]+)/.*'"
""".*thumbnail:\\s*'(http://[^/]+/ThumbnailServer2[^']+)'.*"""
"'.*videoplay\\?docid=([A-Za-z0-9-_]+).*'"
"'^/user/([^/]+)/$'"
"'^/user/([^/]+)$'"
"'^/user/([^/]+)/overview/$'"
"'^/user/([^/]+)/comments/$'"
"'^\\s*msgid\\s+""'"
"'^\\s*msgid_plural\\s+""'"
"'^\\s*msgstr(\\[\\d\\])?\\s+""'"
"'^\\s*""'"
"'(%(\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])'"
"': (\\S+\\.[^\\.]+):(\\d+)'"
"'((\\([^\\)]+\\))?([\\d\\.]+)?[a-zA-Z])(.*)'"
"'\\[(http://lesswrong\\.com/lw/[^ ]+) [^\\]]+\\]'"
"'lesswrong|overcomingbias'"
"'^[ \\t]*&gt;[ \\t]?'"
"""\n    (                       # Wrap whole match in $1\n     (\n       ^[ \\t]*&gt;[ \\t]?       # '>' at the start of a line\n       .+\\n                 # rest of the first line\n       (.+\\n)*              # subsequent consecutive lines\n       \\n*                  # blanks\n      )+\n    )"""
"'^(?P<host>[^:]+)(:(?P<port>[0-9]+))?$'"
"'[\\x00-\\x19\\\\""\\b\\f\\n\\r\\t]'"
"'([\\\\""/]|[^\\ -~])'"
"'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^#]*[^#/])/?'"
"'(?i)(?:.+?://)?(?:www[\\d]*\\.)?([^/:#?]*)'"
"'.*?/(.*)'"
"'<title>(.*?)<\\/title>'"
"'<meta.*charset\\W*=\\W*([\\w_-]+)'"
"'<?xml.*encoding=\\W*([\\w_-]+)'"
"'\n    \\[\\s*poll\\s*                                   # [poll] or [polltype]\n        (?::\\s* ([^\\]]*?) )?\n    \\s*\\]\n    ((?:\\s* {\\s*[^}]+\\s*} )*)                        # Poll options enclosed in curly braces\n    '"
"'\n    {\\s*([^}]+)\\s*}\n    '"
"'\n    \\[\\s*pollid\\s*:\\s*([a-zA-Z0-9]+)\\s*\\]\n    '"
"'^\n    \\s*([^.]+)\\s*(\\.{2,})\\s*([^.]+)\\s*\n    $'"
"'\\n!!!\\s*(.*?)\\s*\\n'"
"'\\n!!\\s*(.*?)\\s*\\n'"
"'\\n!\\s*(.*?)\\s*\\n'"
"'\\n((\\*\\s+.*?\\s*\\n)+)'"
"'\\n\\*\\s+([^\\n]*)'"
"'<ul>\\s+<li>'"
"'</li>\\s+</ul>'"
"'\\[\\[\\s*([^\\s\\]]+)\\s*\\|\\s*([^\\s\\]]+)\\s*\\]\\]'"
"'\\[\\[\\s*([^\\s\\]]+)\\s*\\]\\]'"
"'[ \t]*\n([^\n])'"
"'[ \t]*\n+[ \t]*'"
"'^http://'"
"'#'"
"'^\\#ifndef'"
"'^\\#define'"
"'^\\#endif'"
"'[A-Za-z_][A-Za-z0-9_\\.]*'"
"'^\\s*\\*+'"
"'\\s*([\\w\\[\\]]+)\\s*=\\s*(.*?)\\s*$'"
"'(\\w+)\\[(.*?)\\]'"
"'^// @[include|requires?]'"
"'@include (.*)\n'"
"'@requires? (.*)\n'"
"""var filename='(.*?/.*?)';"""
"'^\\s+Scc'"
"'GlobalSection\\(SourceCodeControl\\).*?EndGlobalSection'"
"'^\\""Scc'"
"'^\\s*def ([\\w\\(\\)\\, \n]+):'"
"'\\s*(\\d+) <a href=""[^""]+"">([^<]+)</a>\\s*<a href=.*?</a></a>\\s*(\\d+-\\d+)\\s*(\\.\\d+)\\s*([\\d.]*)\\/(\\d+)\\s*([\\d.]*)\\/(\\d+)'"
"'^(?:(\\d+)|(\\d+)-|-(\\d+)|(\\d+)-(\\d+))$'"
"'^(.*)-(\\d+)$'"
"'.+FOREIGN KEY '"
"'\\) ENGINE=InnoDB.+'"
"'CONSTRAINT'"
"'<input type=""text"" name=""maxbid"".+?US \\$(\\d+?\\.\\d\\d)'"
"'ref=""(.*pgDownload\\S+ixAttachment\\S+sFileName=(.*))""'"
"'does not exist or has been deleted'"
"'\\&amp;'"
"'pgLogon'"
"'\\$+?.+?<font.+?\\>(\\S+?)<br>'"
"'Phone:\\s</b>(\\S+?)<br>'"
"'Hours.+?<pre.+?>(.+?)</pre>'"
"'^\\((.*?)\\)'"
"'(\\(.*\\)) ""([^""])"" ""([^""]+)""'"
"'\\:(.*?) ([a-z0-9]+) (.*?)\\r?\\n'"
"'(.*?)!(.*?)@(.*?)$'"
"'#([^ ]+)'"
"'(?:(?:\x03[0-9]+)|(?:\x0f|\x02|\x16|\x1f))'"
"'([\\w]+?://[\\w\\#$%&~/.\\-;:=,?@\\[\\]+]*)$'"
"'^[a-zA-Z0-9\\-_.]+$'"
"':|\\.'"
"'^[A-Z ]+:'"
"'[-:""]'"
"'(\\d+?)(?:L)?,'"
"'^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)\\s(\\d\\d):(\\d\\d):(\\d\\d)\\.(\\d*?)$'"
"'[\t]'"
"'^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.(?:[A-Z]{2}|com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum)$'"
"'columns? [a-zA-Z_, ]+ (is|are) not unique'"
"'^[\\.a-zA-Z_, ]+ may not be NULL'"
"u'^>\\s*Test ID: (\\d+)'"
"u'^>\\s*(.+) \u2192 (.+):$'"
"u'^>\\s*(.+) =\\s*(.+)'"
"u'^>*\\s*$'"
"'\\*(.*?)\\*'"
"'[[][[](.*?)[|](.*?)[]][]]'"
"'[[][[](.*?)[]][]]'"
"""''(.*?)''"""
"'^:(.*?)$'"
"'<p><h2>'"
"'</h2></p>'"
"'<p>{{(.*?)}}</p>'"
"'^(\\d+) (\\d+) ""(.*)""'"
"'Revision: (\\d+)'"
"'_test\\.py$'"
"'(.*<raw>)(.*)(</raw>.*)'"
"'(<!--.*?-->|<[^>]*>)'"
"'\\s+(?um)'"
"'(\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|""([^""\\\\]*(?:\\\\.[^""\\\\]*)*)"")(?ms)'"
"'\\@/([^/\\\\]*(?:\\\\.[^/\\\\]*)*)*/[a-z]*(?ms)'"
"'(?:[sS]pring) ?([0-9]+\\.[0-9]+[\\.0-9]*(?:-[0-9]+-g[0-9a-f]+)?) ?([a-zA-Z0-9\\-]+)? ??(?:\\s*\\((?:[a-zA-Z0-9\\-]+\\)))?'"
"'Author:'"
"': '"
"'Date:'"
"':   '"
"'    git-svn-id:'"
"'Signed-off-by'"
"'files changed'"
"' \\| '"
"'^([a-zA-Z0-9_\\-]+\\.)+(fr|be|cc|com|org|net|info|name|eu)\\.?$'"
"'.*\\.$'"
"'^([a-zA-Z0-9_\\-]+\\.)+(fr|com|org|net|info|name|be|eu)$'"
"""^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$"""
"'^([a-zA-Z0-9_\\-]+\\.)+(fr|com|be|org|net|info|name)$'"
"'^([a-zA-Z0-9_\\-]+\\.)+(fr|cc|com|org|net|info|name|be|eu)$'"
"'^([-a-zA-Z0-9_]+\\.)+(fr|eu|cc|com|org|net|info|name|be)$'"
"'^([a-zA-Z0-9_\\-]+\\.)+(fr|be|eu|com|org|net|info|name)$'"
"'`([^`]+`)'"
"'(\\S+)\\s*(.*)'"
"'[(]\\w+[)]'"
"'\\^[0-9a-z]'"
"'^@([0-9]+)$'"
"'AJS =(.|\n)*\n}\n'"
"'\\s+((\\w*?):.*?{(.|\n)*?\n\\s*})(,|\n+})\n'"
"'AJS.Class =(.|\n)*\n};\n'"
"'AJSDeferred =(.|\n)*\n};\n'"
"'AJS\\.([\\w_$]*?)(?:\\(|,|\\.)'"
"'AJS\\.([\\w_$]*?)\\('"
"'[^a-zA-Z0-9\x80-\xff]+'"
"'\\$CONTACTEMAIL\\$'"
"'\\$CONTACTPAGER\\$'"
"'\\$HOSTALIAS\\$'"
"'\\$HOSTNAME\\$'"
"'\\$HOSTSTATE\\$'"
"'\\$HOSTADDRESS\\$'"
"'\\$HOSTOUTPUT\\$'"
"'\\$LONGDATETIME\\$'"
"'\\$NOTIFICATIONTYPE\\$'"
"'\\$SERVICEDESC\\$'"
"'\\$SERVICEOUTPUT\\$'"
"'\\$SERVICESTATE\\$'"
"'\\""pfandflaschen_kurs_ajax\\"">(\\d{1,2})</span>.*?</div>'"
"'counter\\((-?\\d{1,5})\\)'"
"'Du hast heute (\\d{1,3}) Spenden erhalten'"
"'Sauberkeit: (\\d{1,3})'"
"'(\\d{1,3}\\.){3}\\d{1,3}:\\d{1,5}'"
"'[a-z0-9]{19}'"
"'([a-z]=\\d;){10}'"
"'([a-z])=(\\d)'"
"'^\n+'"
"'\\s*(\\d?\\d):(\\d?\\d)(:(\\d?\\d))?(am|pm)?'"
"'^\\s*(\\d{2})[-/](\\d{2})$'"
"'an\\s*'"
"'\\$\\{([^}]+)\\}'"
"'^[a-zA-Z+]+://'"
"'\\d+\\.\\s'"
"'[-\\*\\+]\\s'"
"'([\\\\\\[\\]\\(\\)])'"
"'([`\\*_{}\\[\\]\\(\\)#!])'"
"'\n    ^             # start of line\n    (\\s*\\d+)      # optional whitespace and a number\n    (\\.)          # dot\n    (?=\\s)        # lookahead assert whitespace\n    '"
"'\n    ^\n    (\\s*)\n    (\\+)\n    (?=\\s)\n    '"
"'\n    ^\n    (\\s*)\n    (-)\n    (?=\\s|\\-)     # followed by whitespace (bullet list, or spaced out hr)\n                  # or another dash (header or hr)\n    '"
"'^__|^\\.'"
"'^__'"
"':([^/\\.]+)'"
"'""|\x08|\x0c|\n|\r|\t|\\\\'"
"'^(\\d+)_([a-z0-9_]+)\\.py$'"
"'fts=(.*)'"
"'(\\S+) (\\S+) (\\S+) \\[(.*?)\\] ""(\\S+) (\\S+) (\\S+)"" (\\S+) (\\S+) ""(\\S+)"" ""(.*?)""'"
"""((?:[A-Za-z]:)|(?:[&#A-Za-z0-9\\-_ ,!\\'\\.~()\\[\\]]+))|[/\\\\]"""
"'([0-9][0-9]*)[^0-9]*$'"
"'(http://)?(www\\.)?vimeo.com/(\\d+)'"
"'(http://)?(www\\.)?youtube.com/watch\\?v=([-_a-zA-Z0-9]+)'"
"'(-?\\d.*) molecule(?:s?) converted'"
"'\n$'"
"'0x[0-9a-f]*'"
"'^[^\\d]\\w+$'"
"'(\\w+)\\s*=\\s*(0x\\d+|\\d+)'"
"'^\\$(\\d{1,2})$'"
"'\\(\\$\\w{1,2}\\)'"
"'href=""[^""]+""'"
"'[_a-zA-Z]\\w*'"
"'^0+\\.'"
"'^[0-9]+'"
"'_-_'"
"'\\bcharset\\s*=\\s*([^\\s]+)'"
"'lib(.*)\\.so'"
"'\n    (?P<name>\n       [cefnstv] | \n       (?P<generic_index>[0-9]+) g\n       (?P<generic_normalized>n?))\n    (?P<count>[1234])\n    (?P<type>[bBsSiIfd])\n'"
"'\n    (?P<attribute>[^/]*)\n    (/ (?P<usage> static|dynamic|stream|none))?\n'"
"'(.)'"
"'(.)(.)'"
"'(.)(.)(.)'"
"'(.)(.)(.)(.)'"
"'(?<=\\W)\\w'"
"'(?<=\\W)\\w+\\W*$'"
"u'\n[^\n\u2029]*$'"
"u'[\n\u2029]'"
"'([-0-9.]+)([a-zA-Z]+)'"
"'\n    (?P<escape_hex>\\{\\#x(?P<escape_hex_val>[0-9a-fA-F]+)\\})\n  | (?P<escape_dec>\\{\\#(?P<escape_dec_val>[0-9]+)\\})\n  | (?P<escape_lbrace>\\{\\{)\n  | (?P<escape_rbrace>\\}\\})\n  | (?P<attr>\\{\n        (?P<attr_name>[^ \\{\\}]+)\\s+\n        (?P<attr_val>[^\\}]+)\\})\n  | (?P<nl_hard1>\\n(?=[ \\t]))\n  | (?P<nl_hard2>\\{\\}\\n)\n  | (?P<nl_soft>\\n(?=\\S))\n  | (?P<nl_para>\\n\\n+)\n  | (?P<text>[^\\{\\}\\n]+)\n    '"
"u'[ \t\x0c\u200b\r\n]+'"
"'(.*?)([1aAiI])(.*)'"
